/*
 * XML Type:  TNFe
 * Namespace: http://www.portalfiscal.inf.br/nfe
 * Java type: br.inf.portalfiscal.nfe.TNFe
 *
 * Automatically generated - do not modify.
 */
package br.inf.portalfiscal.nfe;


/**
 * An XML TNFe(@http://www.portalfiscal.inf.br/nfe).
 *
 * This is a complex type.
 */
public interface TNFe extends org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TNFe.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tnfe46f4type");
    
    /**
     * Gets the "infNFe" element
     */
    br.inf.portalfiscal.nfe.TNFe.InfNFe getInfNFe();
    
    /**
     * Sets the "infNFe" element
     */
    void setInfNFe(br.inf.portalfiscal.nfe.TNFe.InfNFe infNFe);
    
    /**
     * Appends and returns a new empty "infNFe" element
     */
    br.inf.portalfiscal.nfe.TNFe.InfNFe addNewInfNFe();
    
    /**
     * Gets the "Signature" element
     */
    org.w3.x2000.x09.xmldsig.SignatureType getSignature();
    
    /**
     * Sets the "Signature" element
     */
    void setSignature(org.w3.x2000.x09.xmldsig.SignatureType signature);
    
    /**
     * Appends and returns a new empty "Signature" element
     */
    org.w3.x2000.x09.xmldsig.SignatureType addNewSignature();
    
    /**
     * An XML infNFe(@http://www.portalfiscal.inf.br/nfe).
     *
     * This is a complex type.
     */
    public interface InfNFe extends org.apache.xmlbeans.XmlObject
    {
        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
            org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(InfNFe.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("infnfe81bcelemtype");
        
        /**
         * Gets the "ide" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide getIde();
        
        /**
         * Sets the "ide" element
         */
        void setIde(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide ide);
        
        /**
         * Appends and returns a new empty "ide" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide addNewIde();
        
        /**
         * Gets the "emit" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit getEmit();
        
        /**
         * Sets the "emit" element
         */
        void setEmit(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit emit);
        
        /**
         * Appends and returns a new empty "emit" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit addNewEmit();
        
        /**
         * Gets the "avulsa" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa getAvulsa();
        
        /**
         * True if has "avulsa" element
         */
        boolean isSetAvulsa();
        
        /**
         * Sets the "avulsa" element
         */
        void setAvulsa(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa avulsa);
        
        /**
         * Appends and returns a new empty "avulsa" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa addNewAvulsa();
        
        /**
         * Unsets the "avulsa" element
         */
        void unsetAvulsa();
        
        /**
         * Gets the "dest" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest getDest();
        
        /**
         * True if has "dest" element
         */
        boolean isSetDest();
        
        /**
         * Sets the "dest" element
         */
        void setDest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest dest);
        
        /**
         * Appends and returns a new empty "dest" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest addNewDest();
        
        /**
         * Unsets the "dest" element
         */
        void unsetDest();
        
        /**
         * Gets the "retirada" element
         */
        br.inf.portalfiscal.nfe.TLocal getRetirada();
        
        /**
         * True if has "retirada" element
         */
        boolean isSetRetirada();
        
        /**
         * Sets the "retirada" element
         */
        void setRetirada(br.inf.portalfiscal.nfe.TLocal retirada);
        
        /**
         * Appends and returns a new empty "retirada" element
         */
        br.inf.portalfiscal.nfe.TLocal addNewRetirada();
        
        /**
         * Unsets the "retirada" element
         */
        void unsetRetirada();
        
        /**
         * Gets the "entrega" element
         */
        br.inf.portalfiscal.nfe.TLocal getEntrega();
        
        /**
         * True if has "entrega" element
         */
        boolean isSetEntrega();
        
        /**
         * Sets the "entrega" element
         */
        void setEntrega(br.inf.portalfiscal.nfe.TLocal entrega);
        
        /**
         * Appends and returns a new empty "entrega" element
         */
        br.inf.portalfiscal.nfe.TLocal addNewEntrega();
        
        /**
         * Unsets the "entrega" element
         */
        void unsetEntrega();
        
        /**
         * Gets array of all "autXML" elements
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML[] getAutXMLArray();
        
        /**
         * Gets ith "autXML" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML getAutXMLArray(int i);
        
        /**
         * Returns number of "autXML" element
         */
        int sizeOfAutXMLArray();
        
        /**
         * Sets array of all "autXML" element
         */
        void setAutXMLArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML[] autXMLArray);
        
        /**
         * Sets ith "autXML" element
         */
        void setAutXMLArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML autXML);
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "autXML" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML insertNewAutXML(int i);
        
        /**
         * Appends and returns a new empty value (as xml) as the last "autXML" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML addNewAutXML();
        
        /**
         * Removes the ith "autXML" element
         */
        void removeAutXML(int i);
        
        /**
         * Gets array of all "det" elements
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Det[] getDetArray();
        
        /**
         * Gets ith "det" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Det getDetArray(int i);
        
        /**
         * Returns number of "det" element
         */
        int sizeOfDetArray();
        
        /**
         * Sets array of all "det" element
         */
        void setDetArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det[] detArray);
        
        /**
         * Sets ith "det" element
         */
        void setDetArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det det);
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "det" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Det insertNewDet(int i);
        
        /**
         * Appends and returns a new empty value (as xml) as the last "det" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Det addNewDet();
        
        /**
         * Removes the ith "det" element
         */
        void removeDet(int i);
        
        /**
         * Gets the "total" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Total getTotal();
        
        /**
         * Sets the "total" element
         */
        void setTotal(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total total);
        
        /**
         * Appends and returns a new empty "total" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Total addNewTotal();
        
        /**
         * Gets the "transp" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp getTransp();
        
        /**
         * Sets the "transp" element
         */
        void setTransp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp transp);
        
        /**
         * Appends and returns a new empty "transp" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp addNewTransp();
        
        /**
         * Gets the "cobr" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr getCobr();
        
        /**
         * True if has "cobr" element
         */
        boolean isSetCobr();
        
        /**
         * Sets the "cobr" element
         */
        void setCobr(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr cobr);
        
        /**
         * Appends and returns a new empty "cobr" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr addNewCobr();
        
        /**
         * Unsets the "cobr" element
         */
        void unsetCobr();
        
        /**
         * Gets array of all "pag" elements
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag[] getPagArray();
        
        /**
         * Gets ith "pag" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag getPagArray(int i);
        
        /**
         * Returns number of "pag" element
         */
        int sizeOfPagArray();
        
        /**
         * Sets array of all "pag" element
         */
        void setPagArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag[] pagArray);
        
        /**
         * Sets ith "pag" element
         */
        void setPagArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag pag);
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "pag" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag insertNewPag(int i);
        
        /**
         * Appends and returns a new empty value (as xml) as the last "pag" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag addNewPag();
        
        /**
         * Removes the ith "pag" element
         */
        void removePag(int i);
        
        /**
         * Gets the "infAdic" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic getInfAdic();
        
        /**
         * True if has "infAdic" element
         */
        boolean isSetInfAdic();
        
        /**
         * Sets the "infAdic" element
         */
        void setInfAdic(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic infAdic);
        
        /**
         * Appends and returns a new empty "infAdic" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic addNewInfAdic();
        
        /**
         * Unsets the "infAdic" element
         */
        void unsetInfAdic();
        
        /**
         * Gets the "exporta" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta getExporta();
        
        /**
         * True if has "exporta" element
         */
        boolean isSetExporta();
        
        /**
         * Sets the "exporta" element
         */
        void setExporta(br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta exporta);
        
        /**
         * Appends and returns a new empty "exporta" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta addNewExporta();
        
        /**
         * Unsets the "exporta" element
         */
        void unsetExporta();
        
        /**
         * Gets the "compra" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra getCompra();
        
        /**
         * True if has "compra" element
         */
        boolean isSetCompra();
        
        /**
         * Sets the "compra" element
         */
        void setCompra(br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra compra);
        
        /**
         * Appends and returns a new empty "compra" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra addNewCompra();
        
        /**
         * Unsets the "compra" element
         */
        void unsetCompra();
        
        /**
         * Gets the "cana" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana getCana();
        
        /**
         * True if has "cana" element
         */
        boolean isSetCana();
        
        /**
         * Sets the "cana" element
         */
        void setCana(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana cana);
        
        /**
         * Appends and returns a new empty "cana" element
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana addNewCana();
        
        /**
         * Unsets the "cana" element
         */
        void unsetCana();
        
        /**
         * Gets the "versao" attribute
         */
        java.lang.String getVersao();
        
        /**
         * Gets (as xml) the "versao" attribute
         */
        br.inf.portalfiscal.nfe.TVerNFe xgetVersao();
        
        /**
         * Sets the "versao" attribute
         */
        void setVersao(java.lang.String versao);
        
        /**
         * Sets (as xml) the "versao" attribute
         */
        void xsetVersao(br.inf.portalfiscal.nfe.TVerNFe versao);
        
        /**
         * Gets the "Id" attribute
         */
        java.lang.String getId();
        
        /**
         * Gets (as xml) the "Id" attribute
         */
        br.inf.portalfiscal.nfe.TNFe.InfNFe.Id xgetId();
        
        /**
         * Sets the "Id" attribute
         */
        void setId(java.lang.String id);
        
        /**
         * Sets (as xml) the "Id" attribute
         */
        void xsetId(br.inf.portalfiscal.nfe.TNFe.InfNFe.Id id);
        
        /**
         * An XML ide(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Ide extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Ide.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("idebee6elemtype");
            
            /**
             * Gets the "cUF" element
             */
            br.inf.portalfiscal.nfe.TCodUfIBGE.Enum getCUF();
            
            /**
             * Gets (as xml) the "cUF" element
             */
            br.inf.portalfiscal.nfe.TCodUfIBGE xgetCUF();
            
            /**
             * Sets the "cUF" element
             */
            void setCUF(br.inf.portalfiscal.nfe.TCodUfIBGE.Enum cuf);
            
            /**
             * Sets (as xml) the "cUF" element
             */
            void xsetCUF(br.inf.portalfiscal.nfe.TCodUfIBGE cuf);
            
            /**
             * Gets the "cNF" element
             */
            java.lang.String getCNF();
            
            /**
             * Gets (as xml) the "cNF" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF xgetCNF();
            
            /**
             * Sets the "cNF" element
             */
            void setCNF(java.lang.String cnf);
            
            /**
             * Sets (as xml) the "cNF" element
             */
            void xsetCNF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF cnf);
            
            /**
             * Gets the "natOp" element
             */
            java.lang.String getNatOp();
            
            /**
             * Gets (as xml) the "natOp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp xgetNatOp();
            
            /**
             * Sets the "natOp" element
             */
            void setNatOp(java.lang.String natOp);
            
            /**
             * Sets (as xml) the "natOp" element
             */
            void xsetNatOp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp natOp);
            
            /**
             * Gets the "indPag" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag.Enum getIndPag();
            
            /**
             * Gets (as xml) the "indPag" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag xgetIndPag();
            
            /**
             * Sets the "indPag" element
             */
            void setIndPag(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag.Enum indPag);
            
            /**
             * Sets (as xml) the "indPag" element
             */
            void xsetIndPag(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag indPag);
            
            /**
             * Gets the "mod" element
             */
            br.inf.portalfiscal.nfe.TMod.Enum getMod();
            
            /**
             * Gets (as xml) the "mod" element
             */
            br.inf.portalfiscal.nfe.TMod xgetMod();
            
            /**
             * Sets the "mod" element
             */
            void setMod(br.inf.portalfiscal.nfe.TMod.Enum mod);
            
            /**
             * Sets (as xml) the "mod" element
             */
            void xsetMod(br.inf.portalfiscal.nfe.TMod mod);
            
            /**
             * Gets the "serie" element
             */
            java.lang.String getSerie();
            
            /**
             * Gets (as xml) the "serie" element
             */
            br.inf.portalfiscal.nfe.TSerie xgetSerie();
            
            /**
             * Sets the "serie" element
             */
            void setSerie(java.lang.String serie);
            
            /**
             * Sets (as xml) the "serie" element
             */
            void xsetSerie(br.inf.portalfiscal.nfe.TSerie serie);
            
            /**
             * Gets the "nNF" element
             */
            java.lang.String getNNF();
            
            /**
             * Gets (as xml) the "nNF" element
             */
            br.inf.portalfiscal.nfe.TNF xgetNNF();
            
            /**
             * Sets the "nNF" element
             */
            void setNNF(java.lang.String nnf);
            
            /**
             * Sets (as xml) the "nNF" element
             */
            void xsetNNF(br.inf.portalfiscal.nfe.TNF nnf);
            
            /**
             * Gets the "dhEmi" element
             */
            java.lang.String getDhEmi();
            
            /**
             * Gets (as xml) the "dhEmi" element
             */
            br.inf.portalfiscal.nfe.TDateTimeUTC xgetDhEmi();
            
            /**
             * Sets the "dhEmi" element
             */
            void setDhEmi(java.lang.String dhEmi);
            
            /**
             * Sets (as xml) the "dhEmi" element
             */
            void xsetDhEmi(br.inf.portalfiscal.nfe.TDateTimeUTC dhEmi);
            
            /**
             * Gets the "dhSaiEnt" element
             */
            java.lang.String getDhSaiEnt();
            
            /**
             * Gets (as xml) the "dhSaiEnt" element
             */
            br.inf.portalfiscal.nfe.TDateTimeUTC xgetDhSaiEnt();
            
            /**
             * True if has "dhSaiEnt" element
             */
            boolean isSetDhSaiEnt();
            
            /**
             * Sets the "dhSaiEnt" element
             */
            void setDhSaiEnt(java.lang.String dhSaiEnt);
            
            /**
             * Sets (as xml) the "dhSaiEnt" element
             */
            void xsetDhSaiEnt(br.inf.portalfiscal.nfe.TDateTimeUTC dhSaiEnt);
            
            /**
             * Unsets the "dhSaiEnt" element
             */
            void unsetDhSaiEnt();
            
            /**
             * Gets the "tpNF" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF.Enum getTpNF();
            
            /**
             * Gets (as xml) the "tpNF" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF xgetTpNF();
            
            /**
             * Sets the "tpNF" element
             */
            void setTpNF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF.Enum tpNF);
            
            /**
             * Sets (as xml) the "tpNF" element
             */
            void xsetTpNF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF tpNF);
            
            /**
             * Gets the "idDest" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest.Enum getIdDest();
            
            /**
             * Gets (as xml) the "idDest" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest xgetIdDest();
            
            /**
             * Sets the "idDest" element
             */
            void setIdDest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest.Enum idDest);
            
            /**
             * Sets (as xml) the "idDest" element
             */
            void xsetIdDest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest idDest);
            
            /**
             * Gets the "cMunFG" element
             */
            java.lang.String getCMunFG();
            
            /**
             * Gets (as xml) the "cMunFG" element
             */
            br.inf.portalfiscal.nfe.TCodMunIBGE xgetCMunFG();
            
            /**
             * Sets the "cMunFG" element
             */
            void setCMunFG(java.lang.String cMunFG);
            
            /**
             * Sets (as xml) the "cMunFG" element
             */
            void xsetCMunFG(br.inf.portalfiscal.nfe.TCodMunIBGE cMunFG);
            
            /**
             * Gets the "tpImp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp.Enum getTpImp();
            
            /**
             * Gets (as xml) the "tpImp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp xgetTpImp();
            
            /**
             * Sets the "tpImp" element
             */
            void setTpImp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp.Enum tpImp);
            
            /**
             * Sets (as xml) the "tpImp" element
             */
            void xsetTpImp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp tpImp);
            
            /**
             * Gets the "tpEmis" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis.Enum getTpEmis();
            
            /**
             * Gets (as xml) the "tpEmis" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis xgetTpEmis();
            
            /**
             * Sets the "tpEmis" element
             */
            void setTpEmis(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis.Enum tpEmis);
            
            /**
             * Sets (as xml) the "tpEmis" element
             */
            void xsetTpEmis(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis tpEmis);
            
            /**
             * Gets the "cDV" element
             */
            java.lang.String getCDV();
            
            /**
             * Gets (as xml) the "cDV" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV xgetCDV();
            
            /**
             * Sets the "cDV" element
             */
            void setCDV(java.lang.String cdv);
            
            /**
             * Sets (as xml) the "cDV" element
             */
            void xsetCDV(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV cdv);
            
            /**
             * Gets the "tpAmb" element
             */
            br.inf.portalfiscal.nfe.TAmb.Enum getTpAmb();
            
            /**
             * Gets (as xml) the "tpAmb" element
             */
            br.inf.portalfiscal.nfe.TAmb xgetTpAmb();
            
            /**
             * Sets the "tpAmb" element
             */
            void setTpAmb(br.inf.portalfiscal.nfe.TAmb.Enum tpAmb);
            
            /**
             * Sets (as xml) the "tpAmb" element
             */
            void xsetTpAmb(br.inf.portalfiscal.nfe.TAmb tpAmb);
            
            /**
             * Gets the "finNFe" element
             */
            br.inf.portalfiscal.nfe.TFinNFe.Enum getFinNFe();
            
            /**
             * Gets (as xml) the "finNFe" element
             */
            br.inf.portalfiscal.nfe.TFinNFe xgetFinNFe();
            
            /**
             * Sets the "finNFe" element
             */
            void setFinNFe(br.inf.portalfiscal.nfe.TFinNFe.Enum finNFe);
            
            /**
             * Sets (as xml) the "finNFe" element
             */
            void xsetFinNFe(br.inf.portalfiscal.nfe.TFinNFe finNFe);
            
            /**
             * Gets the "indFinal" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal.Enum getIndFinal();
            
            /**
             * Gets (as xml) the "indFinal" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal xgetIndFinal();
            
            /**
             * Sets the "indFinal" element
             */
            void setIndFinal(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal.Enum indFinal);
            
            /**
             * Sets (as xml) the "indFinal" element
             */
            void xsetIndFinal(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal indFinal);
            
            /**
             * Gets the "indPres" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres.Enum getIndPres();
            
            /**
             * Gets (as xml) the "indPres" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres xgetIndPres();
            
            /**
             * Sets the "indPres" element
             */
            void setIndPres(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres.Enum indPres);
            
            /**
             * Sets (as xml) the "indPres" element
             */
            void xsetIndPres(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres indPres);
            
            /**
             * Gets the "procEmi" element
             */
            br.inf.portalfiscal.nfe.TProcEmi.Enum getProcEmi();
            
            /**
             * Gets (as xml) the "procEmi" element
             */
            br.inf.portalfiscal.nfe.TProcEmi xgetProcEmi();
            
            /**
             * Sets the "procEmi" element
             */
            void setProcEmi(br.inf.portalfiscal.nfe.TProcEmi.Enum procEmi);
            
            /**
             * Sets (as xml) the "procEmi" element
             */
            void xsetProcEmi(br.inf.portalfiscal.nfe.TProcEmi procEmi);
            
            /**
             * Gets the "verProc" element
             */
            java.lang.String getVerProc();
            
            /**
             * Gets (as xml) the "verProc" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc xgetVerProc();
            
            /**
             * Sets the "verProc" element
             */
            void setVerProc(java.lang.String verProc);
            
            /**
             * Sets (as xml) the "verProc" element
             */
            void xsetVerProc(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc verProc);
            
            /**
             * Gets the "dhCont" element
             */
            java.lang.String getDhCont();
            
            /**
             * Gets (as xml) the "dhCont" element
             */
            br.inf.portalfiscal.nfe.TDateTimeUTC xgetDhCont();
            
            /**
             * True if has "dhCont" element
             */
            boolean isSetDhCont();
            
            /**
             * Sets the "dhCont" element
             */
            void setDhCont(java.lang.String dhCont);
            
            /**
             * Sets (as xml) the "dhCont" element
             */
            void xsetDhCont(br.inf.portalfiscal.nfe.TDateTimeUTC dhCont);
            
            /**
             * Unsets the "dhCont" element
             */
            void unsetDhCont();
            
            /**
             * Gets the "xJust" element
             */
            java.lang.String getXJust();
            
            /**
             * Gets (as xml) the "xJust" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust xgetXJust();
            
            /**
             * True if has "xJust" element
             */
            boolean isSetXJust();
            
            /**
             * Sets the "xJust" element
             */
            void setXJust(java.lang.String xJust);
            
            /**
             * Sets (as xml) the "xJust" element
             */
            void xsetXJust(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust xJust);
            
            /**
             * Unsets the "xJust" element
             */
            void unsetXJust();
            
            /**
             * Gets array of all "NFref" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref[] getNFrefArray();
            
            /**
             * Gets ith "NFref" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref getNFrefArray(int i);
            
            /**
             * Returns number of "NFref" element
             */
            int sizeOfNFrefArray();
            
            /**
             * Sets array of all "NFref" element
             */
            void setNFrefArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref[] nFrefArray);
            
            /**
             * Sets ith "NFref" element
             */
            void setNFrefArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref nFref);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "NFref" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref insertNewNFref(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "NFref" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref addNewNFref();
            
            /**
             * Removes the ith "NFref" element
             */
            void removeNFref(int i);
            
            /**
             * An XML cNF(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$CNF.
             */
            public interface CNF extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CNF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cnfcaffelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML natOp(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NatOp.
             */
            public interface NatOp extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NatOp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("natope558elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NatOp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML indPag(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndPag.
             */
            public interface IndPag extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndPag.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indpagb773elemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndPag.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    static final int INT_X_2 = 3;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML tpNF(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpNF.
             */
            public interface TpNF extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpNF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpnfc316elemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpNF.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML idDest(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IdDest.
             */
            public interface IdDest extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IdDest.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("iddest8c0delemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_3 = Enum.forString("3");
                
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_3 = Enum.INT_X_3;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IdDest.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_1
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_1 = 1;
                    static final int INT_X_2 = 2;
                    static final int INT_X_3 = 3;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("3", INT_X_3),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IdDest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML tpImp(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpImp.
             */
            public interface TpImp extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpImp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpimpc04aelemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_3 = Enum.forString("3");
                static final Enum X_4 = Enum.forString("4");
                static final Enum X_5 = Enum.forString("5");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_3 = Enum.INT_X_3;
                static final int INT_X_4 = Enum.INT_X_4;
                static final int INT_X_5 = Enum.INT_X_5;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpImp.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    static final int INT_X_2 = 3;
                    static final int INT_X_3 = 4;
                    static final int INT_X_4 = 5;
                    static final int INT_X_5 = 6;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("3", INT_X_3),
                        new Enum("4", INT_X_4),
                        new Enum("5", INT_X_5),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpImp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML tpEmis(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpEmis.
             */
            public interface TpEmis extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpEmis.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpemis5b1celemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_3 = Enum.forString("3");
                static final Enum X_4 = Enum.forString("4");
                static final Enum X_5 = Enum.forString("5");
                static final Enum X_6 = Enum.forString("6");
                static final Enum X_7 = Enum.forString("7");
                static final Enum X_9 = Enum.forString("9");
                
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_3 = Enum.INT_X_3;
                static final int INT_X_4 = Enum.INT_X_4;
                static final int INT_X_5 = Enum.INT_X_5;
                static final int INT_X_6 = Enum.INT_X_6;
                static final int INT_X_7 = Enum.INT_X_7;
                static final int INT_X_9 = Enum.INT_X_9;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$TpEmis.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_1
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_1 = 1;
                    static final int INT_X_2 = 2;
                    static final int INT_X_3 = 3;
                    static final int INT_X_4 = 4;
                    static final int INT_X_5 = 5;
                    static final int INT_X_6 = 6;
                    static final int INT_X_7 = 7;
                    static final int INT_X_9 = 8;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("3", INT_X_3),
                        new Enum("4", INT_X_4),
                        new Enum("5", INT_X_5),
                        new Enum("6", INT_X_6),
                        new Enum("7", INT_X_7),
                        new Enum("9", INT_X_9),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.TpEmis) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML cDV(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$CDV.
             */
            public interface CDV extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CDV.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cdv3d65elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.CDV) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML indFinal(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndFinal.
             */
            public interface IndFinal extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndFinal.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indfinal84d3elemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndFinal.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndFinal) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML indPres(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndPres.
             */
            public interface IndPres extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndPres.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indpres4c2belemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_3 = Enum.forString("3");
                static final Enum X_4 = Enum.forString("4");
                static final Enum X_9 = Enum.forString("9");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_3 = Enum.INT_X_3;
                static final int INT_X_4 = Enum.INT_X_4;
                static final int INT_X_9 = Enum.INT_X_9;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$IndPres.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    static final int INT_X_2 = 3;
                    static final int INT_X_3 = 4;
                    static final int INT_X_4 = 5;
                    static final int INT_X_9 = 6;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("3", INT_X_3),
                        new Enum("4", INT_X_4),
                        new Enum("9", INT_X_9),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.IndPres) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML verProc(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$VerProc.
             */
            public interface VerProc extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(VerProc.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("verproc8081elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.VerProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xJust(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$XJust.
             */
            public interface XJust extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XJust.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xjustc8f6elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.XJust) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML NFref(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface NFref extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NFref.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nfref1e7felemtype");
                
                /**
                 * Gets the "refNFe" element
                 */
                java.lang.String getRefNFe();
                
                /**
                 * Gets (as xml) the "refNFe" element
                 */
                br.inf.portalfiscal.nfe.TChNFe xgetRefNFe();
                
                /**
                 * True if has "refNFe" element
                 */
                boolean isSetRefNFe();
                
                /**
                 * Sets the "refNFe" element
                 */
                void setRefNFe(java.lang.String refNFe);
                
                /**
                 * Sets (as xml) the "refNFe" element
                 */
                void xsetRefNFe(br.inf.portalfiscal.nfe.TChNFe refNFe);
                
                /**
                 * Unsets the "refNFe" element
                 */
                void unsetRefNFe();
                
                /**
                 * Gets the "refNF" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF getRefNF();
                
                /**
                 * True if has "refNF" element
                 */
                boolean isSetRefNF();
                
                /**
                 * Sets the "refNF" element
                 */
                void setRefNF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF refNF);
                
                /**
                 * Appends and returns a new empty "refNF" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF addNewRefNF();
                
                /**
                 * Unsets the "refNF" element
                 */
                void unsetRefNF();
                
                /**
                 * Gets the "refNFP" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP getRefNFP();
                
                /**
                 * True if has "refNFP" element
                 */
                boolean isSetRefNFP();
                
                /**
                 * Sets the "refNFP" element
                 */
                void setRefNFP(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP refNFP);
                
                /**
                 * Appends and returns a new empty "refNFP" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP addNewRefNFP();
                
                /**
                 * Unsets the "refNFP" element
                 */
                void unsetRefNFP();
                
                /**
                 * Gets the "refCTe" element
                 */
                java.lang.String getRefCTe();
                
                /**
                 * Gets (as xml) the "refCTe" element
                 */
                br.inf.portalfiscal.nfe.TChNFe xgetRefCTe();
                
                /**
                 * True if has "refCTe" element
                 */
                boolean isSetRefCTe();
                
                /**
                 * Sets the "refCTe" element
                 */
                void setRefCTe(java.lang.String refCTe);
                
                /**
                 * Sets (as xml) the "refCTe" element
                 */
                void xsetRefCTe(br.inf.portalfiscal.nfe.TChNFe refCTe);
                
                /**
                 * Unsets the "refCTe" element
                 */
                void unsetRefCTe();
                
                /**
                 * Gets the "refECF" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF getRefECF();
                
                /**
                 * True if has "refECF" element
                 */
                boolean isSetRefECF();
                
                /**
                 * Sets the "refECF" element
                 */
                void setRefECF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF refECF);
                
                /**
                 * Appends and returns a new empty "refECF" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF addNewRefECF();
                
                /**
                 * Unsets the "refECF" element
                 */
                void unsetRefECF();
                
                /**
                 * An XML refNF(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface RefNF extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RefNF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("refnfd568elemtype");
                    
                    /**
                     * Gets the "cUF" element
                     */
                    br.inf.portalfiscal.nfe.TCodUfIBGE.Enum getCUF();
                    
                    /**
                     * Gets (as xml) the "cUF" element
                     */
                    br.inf.portalfiscal.nfe.TCodUfIBGE xgetCUF();
                    
                    /**
                     * Sets the "cUF" element
                     */
                    void setCUF(br.inf.portalfiscal.nfe.TCodUfIBGE.Enum cuf);
                    
                    /**
                     * Sets (as xml) the "cUF" element
                     */
                    void xsetCUF(br.inf.portalfiscal.nfe.TCodUfIBGE cuf);
                    
                    /**
                     * Gets the "AAMM" element
                     */
                    java.lang.String getAAMM();
                    
                    /**
                     * Gets (as xml) the "AAMM" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM xgetAAMM();
                    
                    /**
                     * Sets the "AAMM" element
                     */
                    void setAAMM(java.lang.String aamm);
                    
                    /**
                     * Sets (as xml) the "AAMM" element
                     */
                    void xsetAAMM(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM aamm);
                    
                    /**
                     * Gets the "CNPJ" element
                     */
                    java.lang.String getCNPJ();
                    
                    /**
                     * Gets (as xml) the "CNPJ" element
                     */
                    br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
                    
                    /**
                     * Sets the "CNPJ" element
                     */
                    void setCNPJ(java.lang.String cnpj);
                    
                    /**
                     * Sets (as xml) the "CNPJ" element
                     */
                    void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
                    
                    /**
                     * Gets the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod.Enum getMod();
                    
                    /**
                     * Gets (as xml) the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod xgetMod();
                    
                    /**
                     * Sets the "mod" element
                     */
                    void setMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod.Enum mod);
                    
                    /**
                     * Sets (as xml) the "mod" element
                     */
                    void xsetMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod mod);
                    
                    /**
                     * Gets the "serie" element
                     */
                    java.lang.String getSerie();
                    
                    /**
                     * Gets (as xml) the "serie" element
                     */
                    br.inf.portalfiscal.nfe.TSerie xgetSerie();
                    
                    /**
                     * Sets the "serie" element
                     */
                    void setSerie(java.lang.String serie);
                    
                    /**
                     * Sets (as xml) the "serie" element
                     */
                    void xsetSerie(br.inf.portalfiscal.nfe.TSerie serie);
                    
                    /**
                     * Gets the "nNF" element
                     */
                    java.lang.String getNNF();
                    
                    /**
                     * Gets (as xml) the "nNF" element
                     */
                    br.inf.portalfiscal.nfe.TNF xgetNNF();
                    
                    /**
                     * Sets the "nNF" element
                     */
                    void setNNF(java.lang.String nnf);
                    
                    /**
                     * Sets (as xml) the "nNF" element
                     */
                    void xsetNNF(br.inf.portalfiscal.nfe.TNF nnf);
                    
                    /**
                     * An XML AAMM(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNF$AAMM.
                     */
                    public interface AAMM extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AAMM.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("aamm968celemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.AAMM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML mod(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNF$Mod.
                     */
                    public interface Mod extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Mod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("mod09baelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_01 = Enum.forString("01");
                      
                      static final int INT_X_01 = Enum.INT_X_01;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNF$Mod.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_01
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_01 = 1;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("01", INT_X_01),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML refNFP(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface RefNFP extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RefNFP.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("refnfpffdeelemtype");
                    
                    /**
                     * Gets the "cUF" element
                     */
                    br.inf.portalfiscal.nfe.TCodUfIBGE.Enum getCUF();
                    
                    /**
                     * Gets (as xml) the "cUF" element
                     */
                    br.inf.portalfiscal.nfe.TCodUfIBGE xgetCUF();
                    
                    /**
                     * Sets the "cUF" element
                     */
                    void setCUF(br.inf.portalfiscal.nfe.TCodUfIBGE.Enum cuf);
                    
                    /**
                     * Sets (as xml) the "cUF" element
                     */
                    void xsetCUF(br.inf.portalfiscal.nfe.TCodUfIBGE cuf);
                    
                    /**
                     * Gets the "AAMM" element
                     */
                    java.lang.String getAAMM();
                    
                    /**
                     * Gets (as xml) the "AAMM" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM xgetAAMM();
                    
                    /**
                     * Sets the "AAMM" element
                     */
                    void setAAMM(java.lang.String aamm);
                    
                    /**
                     * Sets (as xml) the "AAMM" element
                     */
                    void xsetAAMM(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM aamm);
                    
                    /**
                     * Gets the "CNPJ" element
                     */
                    java.lang.String getCNPJ();
                    
                    /**
                     * Gets (as xml) the "CNPJ" element
                     */
                    br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
                    
                    /**
                     * True if has "CNPJ" element
                     */
                    boolean isSetCNPJ();
                    
                    /**
                     * Sets the "CNPJ" element
                     */
                    void setCNPJ(java.lang.String cnpj);
                    
                    /**
                     * Sets (as xml) the "CNPJ" element
                     */
                    void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
                    
                    /**
                     * Unsets the "CNPJ" element
                     */
                    void unsetCNPJ();
                    
                    /**
                     * Gets the "CPF" element
                     */
                    java.lang.String getCPF();
                    
                    /**
                     * Gets (as xml) the "CPF" element
                     */
                    br.inf.portalfiscal.nfe.TCpf xgetCPF();
                    
                    /**
                     * True if has "CPF" element
                     */
                    boolean isSetCPF();
                    
                    /**
                     * Sets the "CPF" element
                     */
                    void setCPF(java.lang.String cpf);
                    
                    /**
                     * Sets (as xml) the "CPF" element
                     */
                    void xsetCPF(br.inf.portalfiscal.nfe.TCpf cpf);
                    
                    /**
                     * Unsets the "CPF" element
                     */
                    void unsetCPF();
                    
                    /**
                     * Gets the "IE" element
                     */
                    java.lang.String getIE();
                    
                    /**
                     * Gets (as xml) the "IE" element
                     */
                    br.inf.portalfiscal.nfe.TIeDest xgetIE();
                    
                    /**
                     * Sets the "IE" element
                     */
                    void setIE(java.lang.String ie);
                    
                    /**
                     * Sets (as xml) the "IE" element
                     */
                    void xsetIE(br.inf.portalfiscal.nfe.TIeDest ie);
                    
                    /**
                     * Gets the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod.Enum getMod();
                    
                    /**
                     * Gets (as xml) the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod xgetMod();
                    
                    /**
                     * Sets the "mod" element
                     */
                    void setMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod.Enum mod);
                    
                    /**
                     * Sets (as xml) the "mod" element
                     */
                    void xsetMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod mod);
                    
                    /**
                     * Gets the "serie" element
                     */
                    java.lang.String getSerie();
                    
                    /**
                     * Gets (as xml) the "serie" element
                     */
                    br.inf.portalfiscal.nfe.TSerie xgetSerie();
                    
                    /**
                     * Sets the "serie" element
                     */
                    void setSerie(java.lang.String serie);
                    
                    /**
                     * Sets (as xml) the "serie" element
                     */
                    void xsetSerie(br.inf.portalfiscal.nfe.TSerie serie);
                    
                    /**
                     * Gets the "nNF" element
                     */
                    java.lang.String getNNF();
                    
                    /**
                     * Gets (as xml) the "nNF" element
                     */
                    br.inf.portalfiscal.nfe.TNF xgetNNF();
                    
                    /**
                     * Sets the "nNF" element
                     */
                    void setNNF(java.lang.String nnf);
                    
                    /**
                     * Sets (as xml) the "nNF" element
                     */
                    void xsetNNF(br.inf.portalfiscal.nfe.TNF nnf);
                    
                    /**
                     * An XML AAMM(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNFP$AAMM.
                     */
                    public interface AAMM extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AAMM.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("aamm633aelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.AAMM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML mod(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNFP$Mod.
                     */
                    public interface Mod extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Mod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("mod55ccelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_01 = Enum.forString("01");
                      static final Enum X_04 = Enum.forString("04");
                      
                      static final int INT_X_01 = Enum.INT_X_01;
                      static final int INT_X_04 = Enum.INT_X_04;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefNFP$Mod.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_01
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_01 = 1;
                        static final int INT_X_04 = 2;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("01", INT_X_01),
                            new Enum("04", INT_X_04),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefNFP) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML refECF(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface RefECF extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RefECF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("refecf5c0eelemtype");
                    
                    /**
                     * Gets the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod.Enum getMod();
                    
                    /**
                     * Gets (as xml) the "mod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod xgetMod();
                    
                    /**
                     * Sets the "mod" element
                     */
                    void setMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod.Enum mod);
                    
                    /**
                     * Sets (as xml) the "mod" element
                     */
                    void xsetMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod mod);
                    
                    /**
                     * Gets the "nECF" element
                     */
                    java.lang.String getNECF();
                    
                    /**
                     * Gets (as xml) the "nECF" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF xgetNECF();
                    
                    /**
                     * Sets the "nECF" element
                     */
                    void setNECF(java.lang.String necf);
                    
                    /**
                     * Sets (as xml) the "nECF" element
                     */
                    void xsetNECF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF necf);
                    
                    /**
                     * Gets the "nCOO" element
                     */
                    java.lang.String getNCOO();
                    
                    /**
                     * Gets (as xml) the "nCOO" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO xgetNCOO();
                    
                    /**
                     * Sets the "nCOO" element
                     */
                    void setNCOO(java.lang.String ncoo);
                    
                    /**
                     * Sets (as xml) the "nCOO" element
                     */
                    void xsetNCOO(br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO ncoo);
                    
                    /**
                     * An XML mod(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefECF$Mod.
                     */
                    public interface Mod extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Mod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modb1fcelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_2_B = Enum.forString("2B");
                      static final Enum X_2_C = Enum.forString("2C");
                      static final Enum X_2_D = Enum.forString("2D");
                      
                      static final int INT_X_2_B = Enum.INT_X_2_B;
                      static final int INT_X_2_C = Enum.INT_X_2_C;
                      static final int INT_X_2_D = Enum.INT_X_2_D;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefECF$Mod.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_2_B
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_2_B = 1;
                        static final int INT_X_2_C = 2;
                        static final int INT_X_2_D = 3;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("2B", INT_X_2_B),
                            new Enum("2C", INT_X_2_C),
                            new Enum("2D", INT_X_2_D),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.Mod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nECF(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefECF$NECF.
                     */
                    public interface NECF extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NECF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("necf2164elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NECF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nCOO(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Ide$NFref$RefECF$NCOO.
                     */
                    public interface NCOO extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NCOO.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ncooc59felemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF.NCOO) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref.RefECF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide.NFref) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Ide) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML emit(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Emit extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Emit.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("emit64edelemtype");
            
            /**
             * Gets the "CNPJ" element
             */
            java.lang.String getCNPJ();
            
            /**
             * Gets (as xml) the "CNPJ" element
             */
            br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
            
            /**
             * True if has "CNPJ" element
             */
            boolean isSetCNPJ();
            
            /**
             * Sets the "CNPJ" element
             */
            void setCNPJ(java.lang.String cnpj);
            
            /**
             * Sets (as xml) the "CNPJ" element
             */
            void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
            
            /**
             * Unsets the "CNPJ" element
             */
            void unsetCNPJ();
            
            /**
             * Gets the "CPF" element
             */
            java.lang.String getCPF();
            
            /**
             * Gets (as xml) the "CPF" element
             */
            br.inf.portalfiscal.nfe.TCpf xgetCPF();
            
            /**
             * True if has "CPF" element
             */
            boolean isSetCPF();
            
            /**
             * Sets the "CPF" element
             */
            void setCPF(java.lang.String cpf);
            
            /**
             * Sets (as xml) the "CPF" element
             */
            void xsetCPF(br.inf.portalfiscal.nfe.TCpf cpf);
            
            /**
             * Unsets the "CPF" element
             */
            void unsetCPF();
            
            /**
             * Gets the "xNome" element
             */
            java.lang.String getXNome();
            
            /**
             * Gets (as xml) the "xNome" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome xgetXNome();
            
            /**
             * Sets the "xNome" element
             */
            void setXNome(java.lang.String xNome);
            
            /**
             * Sets (as xml) the "xNome" element
             */
            void xsetXNome(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome xNome);
            
            /**
             * Gets the "xFant" element
             */
            java.lang.String getXFant();
            
            /**
             * Gets (as xml) the "xFant" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant xgetXFant();
            
            /**
             * True if has "xFant" element
             */
            boolean isSetXFant();
            
            /**
             * Sets the "xFant" element
             */
            void setXFant(java.lang.String xFant);
            
            /**
             * Sets (as xml) the "xFant" element
             */
            void xsetXFant(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant xFant);
            
            /**
             * Unsets the "xFant" element
             */
            void unsetXFant();
            
            /**
             * Gets the "enderEmit" element
             */
            br.inf.portalfiscal.nfe.TEnderEmi getEnderEmit();
            
            /**
             * Sets the "enderEmit" element
             */
            void setEnderEmit(br.inf.portalfiscal.nfe.TEnderEmi enderEmit);
            
            /**
             * Appends and returns a new empty "enderEmit" element
             */
            br.inf.portalfiscal.nfe.TEnderEmi addNewEnderEmit();
            
            /**
             * Gets the "IE" element
             */
            java.lang.String getIE();
            
            /**
             * Gets (as xml) the "IE" element
             */
            br.inf.portalfiscal.nfe.TIe xgetIE();
            
            /**
             * Sets the "IE" element
             */
            void setIE(java.lang.String ie);
            
            /**
             * Sets (as xml) the "IE" element
             */
            void xsetIE(br.inf.portalfiscal.nfe.TIe ie);
            
            /**
             * Gets the "IEST" element
             */
            java.lang.String getIEST();
            
            /**
             * Gets (as xml) the "IEST" element
             */
            br.inf.portalfiscal.nfe.TIeST xgetIEST();
            
            /**
             * True if has "IEST" element
             */
            boolean isSetIEST();
            
            /**
             * Sets the "IEST" element
             */
            void setIEST(java.lang.String iest);
            
            /**
             * Sets (as xml) the "IEST" element
             */
            void xsetIEST(br.inf.portalfiscal.nfe.TIeST iest);
            
            /**
             * Unsets the "IEST" element
             */
            void unsetIEST();
            
            /**
             * Gets the "IM" element
             */
            java.lang.String getIM();
            
            /**
             * Gets (as xml) the "IM" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM xgetIM();
            
            /**
             * True if has "IM" element
             */
            boolean isSetIM();
            
            /**
             * Sets the "IM" element
             */
            void setIM(java.lang.String im);
            
            /**
             * Sets (as xml) the "IM" element
             */
            void xsetIM(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM im);
            
            /**
             * Unsets the "IM" element
             */
            void unsetIM();
            
            /**
             * Gets the "CNAE" element
             */
            java.lang.String getCNAE();
            
            /**
             * Gets (as xml) the "CNAE" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE xgetCNAE();
            
            /**
             * True if has "CNAE" element
             */
            boolean isSetCNAE();
            
            /**
             * Sets the "CNAE" element
             */
            void setCNAE(java.lang.String cnae);
            
            /**
             * Sets (as xml) the "CNAE" element
             */
            void xsetCNAE(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE cnae);
            
            /**
             * Unsets the "CNAE" element
             */
            void unsetCNAE();
            
            /**
             * Gets the "CRT" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT.Enum getCRT();
            
            /**
             * Gets (as xml) the "CRT" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT xgetCRT();
            
            /**
             * Sets the "CRT" element
             */
            void setCRT(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT.Enum crt);
            
            /**
             * Sets (as xml) the "CRT" element
             */
            void xsetCRT(br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT crt);
            
            /**
             * An XML xNome(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$XNome.
             */
            public interface XNome extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XNome.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xnomed4caelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xFant(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$XFant.
             */
            public interface XFant extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XFant.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xfant5b72elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.XFant) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML IM(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$IM.
             */
            public interface IM extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IM.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("im80adelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.IM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML CNAE(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$CNAE.
             */
            public interface CNAE extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CNAE.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cnae1798elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CNAE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML CRT(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$CRT.
             */
            public interface CRT extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CRT.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("crt2bdeelemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_3 = Enum.forString("3");
                
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_3 = Enum.INT_X_3;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Emit$CRT.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_1
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_1 = 1;
                    static final int INT_X_2 = 2;
                    static final int INT_X_3 = 3;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("3", INT_X_3),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit.CRT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Emit) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML avulsa(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Avulsa extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Avulsa.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("avulsad686elemtype");
            
            /**
             * Gets the "CNPJ" element
             */
            java.lang.String getCNPJ();
            
            /**
             * Gets (as xml) the "CNPJ" element
             */
            br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
            
            /**
             * Sets the "CNPJ" element
             */
            void setCNPJ(java.lang.String cnpj);
            
            /**
             * Sets (as xml) the "CNPJ" element
             */
            void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
            
            /**
             * Gets the "xOrgao" element
             */
            java.lang.String getXOrgao();
            
            /**
             * Gets (as xml) the "xOrgao" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao xgetXOrgao();
            
            /**
             * Sets the "xOrgao" element
             */
            void setXOrgao(java.lang.String xOrgao);
            
            /**
             * Sets (as xml) the "xOrgao" element
             */
            void xsetXOrgao(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao xOrgao);
            
            /**
             * Gets the "matr" element
             */
            java.lang.String getMatr();
            
            /**
             * Gets (as xml) the "matr" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr xgetMatr();
            
            /**
             * Sets the "matr" element
             */
            void setMatr(java.lang.String matr);
            
            /**
             * Sets (as xml) the "matr" element
             */
            void xsetMatr(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr matr);
            
            /**
             * Gets the "xAgente" element
             */
            java.lang.String getXAgente();
            
            /**
             * Gets (as xml) the "xAgente" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente xgetXAgente();
            
            /**
             * Sets the "xAgente" element
             */
            void setXAgente(java.lang.String xAgente);
            
            /**
             * Sets (as xml) the "xAgente" element
             */
            void xsetXAgente(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente xAgente);
            
            /**
             * Gets the "fone" element
             */
            java.lang.String getFone();
            
            /**
             * Gets (as xml) the "fone" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone xgetFone();
            
            /**
             * True if has "fone" element
             */
            boolean isSetFone();
            
            /**
             * Sets the "fone" element
             */
            void setFone(java.lang.String fone);
            
            /**
             * Sets (as xml) the "fone" element
             */
            void xsetFone(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone fone);
            
            /**
             * Unsets the "fone" element
             */
            void unsetFone();
            
            /**
             * Gets the "UF" element
             */
            br.inf.portalfiscal.nfe.TUfEmi.Enum getUF();
            
            /**
             * Gets (as xml) the "UF" element
             */
            br.inf.portalfiscal.nfe.TUfEmi xgetUF();
            
            /**
             * Sets the "UF" element
             */
            void setUF(br.inf.portalfiscal.nfe.TUfEmi.Enum uf);
            
            /**
             * Sets (as xml) the "UF" element
             */
            void xsetUF(br.inf.portalfiscal.nfe.TUfEmi uf);
            
            /**
             * Gets the "nDAR" element
             */
            java.lang.String getNDAR();
            
            /**
             * Gets (as xml) the "nDAR" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR xgetNDAR();
            
            /**
             * True if has "nDAR" element
             */
            boolean isSetNDAR();
            
            /**
             * Sets the "nDAR" element
             */
            void setNDAR(java.lang.String ndar);
            
            /**
             * Sets (as xml) the "nDAR" element
             */
            void xsetNDAR(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR ndar);
            
            /**
             * Unsets the "nDAR" element
             */
            void unsetNDAR();
            
            /**
             * Gets the "dEmi" element
             */
            java.lang.String getDEmi();
            
            /**
             * Gets (as xml) the "dEmi" element
             */
            br.inf.portalfiscal.nfe.TData xgetDEmi();
            
            /**
             * True if has "dEmi" element
             */
            boolean isSetDEmi();
            
            /**
             * Sets the "dEmi" element
             */
            void setDEmi(java.lang.String dEmi);
            
            /**
             * Sets (as xml) the "dEmi" element
             */
            void xsetDEmi(br.inf.portalfiscal.nfe.TData dEmi);
            
            /**
             * Unsets the "dEmi" element
             */
            void unsetDEmi();
            
            /**
             * Gets the "vDAR" element
             */
            java.lang.String getVDAR();
            
            /**
             * Gets (as xml) the "vDAR" element
             */
            br.inf.portalfiscal.nfe.TDec1302 xgetVDAR();
            
            /**
             * True if has "vDAR" element
             */
            boolean isSetVDAR();
            
            /**
             * Sets the "vDAR" element
             */
            void setVDAR(java.lang.String vdar);
            
            /**
             * Sets (as xml) the "vDAR" element
             */
            void xsetVDAR(br.inf.portalfiscal.nfe.TDec1302 vdar);
            
            /**
             * Unsets the "vDAR" element
             */
            void unsetVDAR();
            
            /**
             * Gets the "repEmi" element
             */
            java.lang.String getRepEmi();
            
            /**
             * Gets (as xml) the "repEmi" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi xgetRepEmi();
            
            /**
             * Sets the "repEmi" element
             */
            void setRepEmi(java.lang.String repEmi);
            
            /**
             * Sets (as xml) the "repEmi" element
             */
            void xsetRepEmi(br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi repEmi);
            
            /**
             * Gets the "dPag" element
             */
            java.lang.String getDPag();
            
            /**
             * Gets (as xml) the "dPag" element
             */
            br.inf.portalfiscal.nfe.TData xgetDPag();
            
            /**
             * True if has "dPag" element
             */
            boolean isSetDPag();
            
            /**
             * Sets the "dPag" element
             */
            void setDPag(java.lang.String dPag);
            
            /**
             * Sets (as xml) the "dPag" element
             */
            void xsetDPag(br.inf.portalfiscal.nfe.TData dPag);
            
            /**
             * Unsets the "dPag" element
             */
            void unsetDPag();
            
            /**
             * An XML xOrgao(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$XOrgao.
             */
            public interface XOrgao extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XOrgao.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xorgao849celemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XOrgao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML matr(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$Matr.
             */
            public interface Matr extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Matr.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("matr7134elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Matr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xAgente(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$XAgente.
             */
            public interface XAgente extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XAgente.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xagente458aelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.XAgente) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML fone(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$Fone.
             */
            public interface Fone extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Fone.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("fonecd62elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.Fone) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML nDAR(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$NDAR.
             */
            public interface NDAR extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NDAR.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ndar2ce9elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.NDAR) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML repEmi(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Avulsa$RepEmi.
             */
            public interface RepEmi extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RepEmi.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("repemi8406elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa.RepEmi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Avulsa) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML dest(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Dest extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Dest.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("dest09beelemtype");
            
            /**
             * Gets the "CNPJ" element
             */
            java.lang.String getCNPJ();
            
            /**
             * Gets (as xml) the "CNPJ" element
             */
            br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
            
            /**
             * True if has "CNPJ" element
             */
            boolean isSetCNPJ();
            
            /**
             * Sets the "CNPJ" element
             */
            void setCNPJ(java.lang.String cnpj);
            
            /**
             * Sets (as xml) the "CNPJ" element
             */
            void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
            
            /**
             * Unsets the "CNPJ" element
             */
            void unsetCNPJ();
            
            /**
             * Gets the "CPF" element
             */
            java.lang.String getCPF();
            
            /**
             * Gets (as xml) the "CPF" element
             */
            br.inf.portalfiscal.nfe.TCpf xgetCPF();
            
            /**
             * True if has "CPF" element
             */
            boolean isSetCPF();
            
            /**
             * Sets the "CPF" element
             */
            void setCPF(java.lang.String cpf);
            
            /**
             * Sets (as xml) the "CPF" element
             */
            void xsetCPF(br.inf.portalfiscal.nfe.TCpf cpf);
            
            /**
             * Unsets the "CPF" element
             */
            void unsetCPF();
            
            /**
             * Gets the "idEstrangeiro" element
             */
            java.lang.String getIdEstrangeiro();
            
            /**
             * Gets (as xml) the "idEstrangeiro" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro xgetIdEstrangeiro();
            
            /**
             * True if has "idEstrangeiro" element
             */
            boolean isSetIdEstrangeiro();
            
            /**
             * Sets the "idEstrangeiro" element
             */
            void setIdEstrangeiro(java.lang.String idEstrangeiro);
            
            /**
             * Sets (as xml) the "idEstrangeiro" element
             */
            void xsetIdEstrangeiro(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro idEstrangeiro);
            
            /**
             * Unsets the "idEstrangeiro" element
             */
            void unsetIdEstrangeiro();
            
            /**
             * Gets the "xNome" element
             */
            java.lang.String getXNome();
            
            /**
             * Gets (as xml) the "xNome" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome xgetXNome();
            
            /**
             * True if has "xNome" element
             */
            boolean isSetXNome();
            
            /**
             * Sets the "xNome" element
             */
            void setXNome(java.lang.String xNome);
            
            /**
             * Sets (as xml) the "xNome" element
             */
            void xsetXNome(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome xNome);
            
            /**
             * Unsets the "xNome" element
             */
            void unsetXNome();
            
            /**
             * Gets the "enderDest" element
             */
            br.inf.portalfiscal.nfe.TEndereco getEnderDest();
            
            /**
             * True if has "enderDest" element
             */
            boolean isSetEnderDest();
            
            /**
             * Sets the "enderDest" element
             */
            void setEnderDest(br.inf.portalfiscal.nfe.TEndereco enderDest);
            
            /**
             * Appends and returns a new empty "enderDest" element
             */
            br.inf.portalfiscal.nfe.TEndereco addNewEnderDest();
            
            /**
             * Unsets the "enderDest" element
             */
            void unsetEnderDest();
            
            /**
             * Gets the "indIEDest" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest.Enum getIndIEDest();
            
            /**
             * Gets (as xml) the "indIEDest" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest xgetIndIEDest();
            
            /**
             * Sets the "indIEDest" element
             */
            void setIndIEDest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest.Enum indIEDest);
            
            /**
             * Sets (as xml) the "indIEDest" element
             */
            void xsetIndIEDest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest indIEDest);
            
            /**
             * Gets the "IE" element
             */
            java.lang.String getIE();
            
            /**
             * Gets (as xml) the "IE" element
             */
            br.inf.portalfiscal.nfe.TIeDestNaoIsento xgetIE();
            
            /**
             * True if has "IE" element
             */
            boolean isSetIE();
            
            /**
             * Sets the "IE" element
             */
            void setIE(java.lang.String ie);
            
            /**
             * Sets (as xml) the "IE" element
             */
            void xsetIE(br.inf.portalfiscal.nfe.TIeDestNaoIsento ie);
            
            /**
             * Unsets the "IE" element
             */
            void unsetIE();
            
            /**
             * Gets the "ISUF" element
             */
            java.lang.String getISUF();
            
            /**
             * Gets (as xml) the "ISUF" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF xgetISUF();
            
            /**
             * True if has "ISUF" element
             */
            boolean isSetISUF();
            
            /**
             * Sets the "ISUF" element
             */
            void setISUF(java.lang.String isuf);
            
            /**
             * Sets (as xml) the "ISUF" element
             */
            void xsetISUF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF isuf);
            
            /**
             * Unsets the "ISUF" element
             */
            void unsetISUF();
            
            /**
             * Gets the "IM" element
             */
            java.lang.String getIM();
            
            /**
             * Gets (as xml) the "IM" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM xgetIM();
            
            /**
             * True if has "IM" element
             */
            boolean isSetIM();
            
            /**
             * Sets the "IM" element
             */
            void setIM(java.lang.String im);
            
            /**
             * Sets (as xml) the "IM" element
             */
            void xsetIM(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM im);
            
            /**
             * Unsets the "IM" element
             */
            void unsetIM();
            
            /**
             * Gets the "email" element
             */
            java.lang.String getEmail();
            
            /**
             * Gets (as xml) the "email" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email xgetEmail();
            
            /**
             * True if has "email" element
             */
            boolean isSetEmail();
            
            /**
             * Sets the "email" element
             */
            void setEmail(java.lang.String email);
            
            /**
             * Sets (as xml) the "email" element
             */
            void xsetEmail(br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email email);
            
            /**
             * Unsets the "email" element
             */
            void unsetEmail();
            
            /**
             * An XML idEstrangeiro(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$IdEstrangeiro.
             */
            public interface IdEstrangeiro extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IdEstrangeiro.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("idestrangeiro299eelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IdEstrangeiro) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xNome(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$XNome.
             */
            public interface XNome extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XNome.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xnome799belemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML indIEDest(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$IndIEDest.
             */
            public interface IndIEDest extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndIEDest.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indiedest0967elemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_9 = Enum.forString("9");
                
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_9 = Enum.INT_X_9;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$IndIEDest.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_1
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_1 = 1;
                    static final int INT_X_2 = 2;
                    static final int INT_X_9 = 3;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("9", INT_X_9),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IndIEDest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML ISUF(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$ISUF.
             */
            public interface ISUF extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ISUF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("isuf2cd5elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.ISUF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML IM(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$IM.
             */
            public interface IM extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IM.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("im257eelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.IM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML email(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Dest$Email.
             */
            public interface Email extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Email.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("emaild1c6elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest.Email) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Dest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML autXML(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface AutXML extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AutXML.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("autxml4709elemtype");
            
            /**
             * Gets the "CNPJ" element
             */
            java.lang.String getCNPJ();
            
            /**
             * Gets (as xml) the "CNPJ" element
             */
            br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
            
            /**
             * True if has "CNPJ" element
             */
            boolean isSetCNPJ();
            
            /**
             * Sets the "CNPJ" element
             */
            void setCNPJ(java.lang.String cnpj);
            
            /**
             * Sets (as xml) the "CNPJ" element
             */
            void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
            
            /**
             * Unsets the "CNPJ" element
             */
            void unsetCNPJ();
            
            /**
             * Gets the "CPF" element
             */
            java.lang.String getCPF();
            
            /**
             * Gets (as xml) the "CPF" element
             */
            br.inf.portalfiscal.nfe.TCpf xgetCPF();
            
            /**
             * True if has "CPF" element
             */
            boolean isSetCPF();
            
            /**
             * Sets the "CPF" element
             */
            void setCPF(java.lang.String cpf);
            
            /**
             * Sets (as xml) the "CPF" element
             */
            void xsetCPF(br.inf.portalfiscal.nfe.TCpf cpf);
            
            /**
             * Unsets the "CPF" element
             */
            void unsetCPF();
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.AutXML) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML det(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Det extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Det.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("det02ddelemtype");
            
            /**
             * Gets the "prod" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod getProd();
            
            /**
             * Sets the "prod" element
             */
            void setProd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod prod);
            
            /**
             * Appends and returns a new empty "prod" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod addNewProd();
            
            /**
             * Gets the "imposto" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto getImposto();
            
            /**
             * Sets the "imposto" element
             */
            void setImposto(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto imposto);
            
            /**
             * Appends and returns a new empty "imposto" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto addNewImposto();
            
            /**
             * Gets the "impostoDevol" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol getImpostoDevol();
            
            /**
             * True if has "impostoDevol" element
             */
            boolean isSetImpostoDevol();
            
            /**
             * Sets the "impostoDevol" element
             */
            void setImpostoDevol(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol impostoDevol);
            
            /**
             * Appends and returns a new empty "impostoDevol" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol addNewImpostoDevol();
            
            /**
             * Unsets the "impostoDevol" element
             */
            void unsetImpostoDevol();
            
            /**
             * Gets the "infAdProd" element
             */
            java.lang.String getInfAdProd();
            
            /**
             * Gets (as xml) the "infAdProd" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd xgetInfAdProd();
            
            /**
             * True if has "infAdProd" element
             */
            boolean isSetInfAdProd();
            
            /**
             * Sets the "infAdProd" element
             */
            void setInfAdProd(java.lang.String infAdProd);
            
            /**
             * Sets (as xml) the "infAdProd" element
             */
            void xsetInfAdProd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd infAdProd);
            
            /**
             * Unsets the "infAdProd" element
             */
            void unsetInfAdProd();
            
            /**
             * Gets the "nItem" attribute
             */
            java.lang.String getNItem();
            
            /**
             * Gets (as xml) the "nItem" attribute
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem xgetNItem();
            
            /**
             * Sets the "nItem" attribute
             */
            void setNItem(java.lang.String nItem);
            
            /**
             * Sets (as xml) the "nItem" attribute
             */
            void xsetNItem(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem nItem);
            
            /**
             * An XML prod(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Prod extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Prod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("prod364aelemtype");
                
                /**
                 * Gets the "cProd" element
                 */
                java.lang.String getCProd();
                
                /**
                 * Gets (as xml) the "cProd" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd xgetCProd();
                
                /**
                 * Sets the "cProd" element
                 */
                void setCProd(java.lang.String cProd);
                
                /**
                 * Sets (as xml) the "cProd" element
                 */
                void xsetCProd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd cProd);
                
                /**
                 * Gets the "cEAN" element
                 */
                java.lang.String getCEAN();
                
                /**
                 * Gets (as xml) the "cEAN" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN xgetCEAN();
                
                /**
                 * Sets the "cEAN" element
                 */
                void setCEAN(java.lang.String cean);
                
                /**
                 * Sets (as xml) the "cEAN" element
                 */
                void xsetCEAN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN cean);
                
                /**
                 * Gets the "xProd" element
                 */
                java.lang.String getXProd();
                
                /**
                 * Gets (as xml) the "xProd" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd xgetXProd();
                
                /**
                 * Sets the "xProd" element
                 */
                void setXProd(java.lang.String xProd);
                
                /**
                 * Sets (as xml) the "xProd" element
                 */
                void xsetXProd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd xProd);
                
                /**
                 * Gets the "NCM" element
                 */
                java.lang.String getNCM();
                
                /**
                 * Gets (as xml) the "NCM" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM xgetNCM();
                
                /**
                 * Sets the "NCM" element
                 */
                void setNCM(java.lang.String ncm);
                
                /**
                 * Sets (as xml) the "NCM" element
                 */
                void xsetNCM(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM ncm);
                
                /**
                 * Gets array of all "NVE" elements
                 */
                java.lang.String[] getNVEArray();
                
                /**
                 * Gets ith "NVE" element
                 */
                java.lang.String getNVEArray(int i);
                
                /**
                 * Gets (as xml) array of all "NVE" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE[] xgetNVEArray();
                
                /**
                 * Gets (as xml) ith "NVE" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE xgetNVEArray(int i);
                
                /**
                 * Returns number of "NVE" element
                 */
                int sizeOfNVEArray();
                
                /**
                 * Sets array of all "NVE" element
                 */
                void setNVEArray(java.lang.String[] nveArray);
                
                /**
                 * Sets ith "NVE" element
                 */
                void setNVEArray(int i, java.lang.String nve);
                
                /**
                 * Sets (as xml) array of all "NVE" element
                 */
                void xsetNVEArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE[] nveArray);
                
                /**
                 * Sets (as xml) ith "NVE" element
                 */
                void xsetNVEArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE nve);
                
                /**
                 * Inserts the value as the ith "NVE" element
                 */
                void insertNVE(int i, java.lang.String nve);
                
                /**
                 * Appends the value as the last "NVE" element
                 */
                void addNVE(java.lang.String nve);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "NVE" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE insertNewNVE(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "NVE" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE addNewNVE();
                
                /**
                 * Removes the ith "NVE" element
                 */
                void removeNVE(int i);
                
                /**
                 * Gets the "EXTIPI" element
                 */
                java.lang.String getEXTIPI();
                
                /**
                 * Gets (as xml) the "EXTIPI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI xgetEXTIPI();
                
                /**
                 * True if has "EXTIPI" element
                 */
                boolean isSetEXTIPI();
                
                /**
                 * Sets the "EXTIPI" element
                 */
                void setEXTIPI(java.lang.String extipi);
                
                /**
                 * Sets (as xml) the "EXTIPI" element
                 */
                void xsetEXTIPI(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI extipi);
                
                /**
                 * Unsets the "EXTIPI" element
                 */
                void unsetEXTIPI();
                
                /**
                 * Gets the "CFOP" element
                 */
                br.inf.portalfiscal.nfe.TCfop.Enum getCFOP();
                
                /**
                 * Gets (as xml) the "CFOP" element
                 */
                br.inf.portalfiscal.nfe.TCfop xgetCFOP();
                
                /**
                 * Sets the "CFOP" element
                 */
                void setCFOP(br.inf.portalfiscal.nfe.TCfop.Enum cfop);
                
                /**
                 * Sets (as xml) the "CFOP" element
                 */
                void xsetCFOP(br.inf.portalfiscal.nfe.TCfop cfop);
                
                /**
                 * Gets the "uCom" element
                 */
                java.lang.String getUCom();
                
                /**
                 * Gets (as xml) the "uCom" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom xgetUCom();
                
                /**
                 * Sets the "uCom" element
                 */
                void setUCom(java.lang.String uCom);
                
                /**
                 * Sets (as xml) the "uCom" element
                 */
                void xsetUCom(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom uCom);
                
                /**
                 * Gets the "qCom" element
                 */
                java.lang.String getQCom();
                
                /**
                 * Gets (as xml) the "qCom" element
                 */
                br.inf.portalfiscal.nfe.TDec1104V xgetQCom();
                
                /**
                 * Sets the "qCom" element
                 */
                void setQCom(java.lang.String qCom);
                
                /**
                 * Sets (as xml) the "qCom" element
                 */
                void xsetQCom(br.inf.portalfiscal.nfe.TDec1104V qCom);
                
                /**
                 * Gets the "vUnCom" element
                 */
                java.lang.String getVUnCom();
                
                /**
                 * Gets (as xml) the "vUnCom" element
                 */
                br.inf.portalfiscal.nfe.TDec1110V xgetVUnCom();
                
                /**
                 * Sets the "vUnCom" element
                 */
                void setVUnCom(java.lang.String vUnCom);
                
                /**
                 * Sets (as xml) the "vUnCom" element
                 */
                void xsetVUnCom(br.inf.portalfiscal.nfe.TDec1110V vUnCom);
                
                /**
                 * Gets the "vProd" element
                 */
                java.lang.String getVProd();
                
                /**
                 * Gets (as xml) the "vProd" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVProd();
                
                /**
                 * Sets the "vProd" element
                 */
                void setVProd(java.lang.String vProd);
                
                /**
                 * Sets (as xml) the "vProd" element
                 */
                void xsetVProd(br.inf.portalfiscal.nfe.TDec1302 vProd);
                
                /**
                 * Gets the "cEANTrib" element
                 */
                java.lang.String getCEANTrib();
                
                /**
                 * Gets (as xml) the "cEANTrib" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib xgetCEANTrib();
                
                /**
                 * Sets the "cEANTrib" element
                 */
                void setCEANTrib(java.lang.String ceanTrib);
                
                /**
                 * Sets (as xml) the "cEANTrib" element
                 */
                void xsetCEANTrib(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib ceanTrib);
                
                /**
                 * Gets the "uTrib" element
                 */
                java.lang.String getUTrib();
                
                /**
                 * Gets (as xml) the "uTrib" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib xgetUTrib();
                
                /**
                 * Sets the "uTrib" element
                 */
                void setUTrib(java.lang.String uTrib);
                
                /**
                 * Sets (as xml) the "uTrib" element
                 */
                void xsetUTrib(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib uTrib);
                
                /**
                 * Gets the "qTrib" element
                 */
                java.lang.String getQTrib();
                
                /**
                 * Gets (as xml) the "qTrib" element
                 */
                br.inf.portalfiscal.nfe.TDec1104V xgetQTrib();
                
                /**
                 * Sets the "qTrib" element
                 */
                void setQTrib(java.lang.String qTrib);
                
                /**
                 * Sets (as xml) the "qTrib" element
                 */
                void xsetQTrib(br.inf.portalfiscal.nfe.TDec1104V qTrib);
                
                /**
                 * Gets the "vUnTrib" element
                 */
                java.lang.String getVUnTrib();
                
                /**
                 * Gets (as xml) the "vUnTrib" element
                 */
                br.inf.portalfiscal.nfe.TDec1110V xgetVUnTrib();
                
                /**
                 * Sets the "vUnTrib" element
                 */
                void setVUnTrib(java.lang.String vUnTrib);
                
                /**
                 * Sets (as xml) the "vUnTrib" element
                 */
                void xsetVUnTrib(br.inf.portalfiscal.nfe.TDec1110V vUnTrib);
                
                /**
                 * Gets the "vFrete" element
                 */
                java.lang.String getVFrete();
                
                /**
                 * Gets (as xml) the "vFrete" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVFrete();
                
                /**
                 * True if has "vFrete" element
                 */
                boolean isSetVFrete();
                
                /**
                 * Sets the "vFrete" element
                 */
                void setVFrete(java.lang.String vFrete);
                
                /**
                 * Sets (as xml) the "vFrete" element
                 */
                void xsetVFrete(br.inf.portalfiscal.nfe.TDec1302Opc vFrete);
                
                /**
                 * Unsets the "vFrete" element
                 */
                void unsetVFrete();
                
                /**
                 * Gets the "vSeg" element
                 */
                java.lang.String getVSeg();
                
                /**
                 * Gets (as xml) the "vSeg" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVSeg();
                
                /**
                 * True if has "vSeg" element
                 */
                boolean isSetVSeg();
                
                /**
                 * Sets the "vSeg" element
                 */
                void setVSeg(java.lang.String vSeg);
                
                /**
                 * Sets (as xml) the "vSeg" element
                 */
                void xsetVSeg(br.inf.portalfiscal.nfe.TDec1302Opc vSeg);
                
                /**
                 * Unsets the "vSeg" element
                 */
                void unsetVSeg();
                
                /**
                 * Gets the "vDesc" element
                 */
                java.lang.String getVDesc();
                
                /**
                 * Gets (as xml) the "vDesc" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDesc();
                
                /**
                 * True if has "vDesc" element
                 */
                boolean isSetVDesc();
                
                /**
                 * Sets the "vDesc" element
                 */
                void setVDesc(java.lang.String vDesc);
                
                /**
                 * Sets (as xml) the "vDesc" element
                 */
                void xsetVDesc(br.inf.portalfiscal.nfe.TDec1302Opc vDesc);
                
                /**
                 * Unsets the "vDesc" element
                 */
                void unsetVDesc();
                
                /**
                 * Gets the "vOutro" element
                 */
                java.lang.String getVOutro();
                
                /**
                 * Gets (as xml) the "vOutro" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVOutro();
                
                /**
                 * True if has "vOutro" element
                 */
                boolean isSetVOutro();
                
                /**
                 * Sets the "vOutro" element
                 */
                void setVOutro(java.lang.String vOutro);
                
                /**
                 * Sets (as xml) the "vOutro" element
                 */
                void xsetVOutro(br.inf.portalfiscal.nfe.TDec1302Opc vOutro);
                
                /**
                 * Unsets the "vOutro" element
                 */
                void unsetVOutro();
                
                /**
                 * Gets the "indTot" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot.Enum getIndTot();
                
                /**
                 * Gets (as xml) the "indTot" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot xgetIndTot();
                
                /**
                 * Sets the "indTot" element
                 */
                void setIndTot(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot.Enum indTot);
                
                /**
                 * Sets (as xml) the "indTot" element
                 */
                void xsetIndTot(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot indTot);
                
                /**
                 * Gets array of all "DI" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI[] getDIArray();
                
                /**
                 * Gets ith "DI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI getDIArray(int i);
                
                /**
                 * Returns number of "DI" element
                 */
                int sizeOfDIArray();
                
                /**
                 * Sets array of all "DI" element
                 */
                void setDIArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI[] diArray);
                
                /**
                 * Sets ith "DI" element
                 */
                void setDIArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI di);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "DI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI insertNewDI(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "DI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI addNewDI();
                
                /**
                 * Removes the ith "DI" element
                 */
                void removeDI(int i);
                
                /**
                 * Gets array of all "detExport" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport[] getDetExportArray();
                
                /**
                 * Gets ith "detExport" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport getDetExportArray(int i);
                
                /**
                 * Returns number of "detExport" element
                 */
                int sizeOfDetExportArray();
                
                /**
                 * Sets array of all "detExport" element
                 */
                void setDetExportArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport[] detExportArray);
                
                /**
                 * Sets ith "detExport" element
                 */
                void setDetExportArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport detExport);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "detExport" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport insertNewDetExport(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "detExport" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport addNewDetExport();
                
                /**
                 * Removes the ith "detExport" element
                 */
                void removeDetExport(int i);
                
                /**
                 * Gets the "xPed" element
                 */
                java.lang.String getXPed();
                
                /**
                 * Gets (as xml) the "xPed" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed xgetXPed();
                
                /**
                 * True if has "xPed" element
                 */
                boolean isSetXPed();
                
                /**
                 * Sets the "xPed" element
                 */
                void setXPed(java.lang.String xPed);
                
                /**
                 * Sets (as xml) the "xPed" element
                 */
                void xsetXPed(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed xPed);
                
                /**
                 * Unsets the "xPed" element
                 */
                void unsetXPed();
                
                /**
                 * Gets the "nItemPed" element
                 */
                java.lang.String getNItemPed();
                
                /**
                 * Gets (as xml) the "nItemPed" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed xgetNItemPed();
                
                /**
                 * True if has "nItemPed" element
                 */
                boolean isSetNItemPed();
                
                /**
                 * Sets the "nItemPed" element
                 */
                void setNItemPed(java.lang.String nItemPed);
                
                /**
                 * Sets (as xml) the "nItemPed" element
                 */
                void xsetNItemPed(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed nItemPed);
                
                /**
                 * Unsets the "nItemPed" element
                 */
                void unsetNItemPed();
                
                /**
                 * Gets the "nFCI" element
                 */
                java.lang.String getNFCI();
                
                /**
                 * Gets (as xml) the "nFCI" element
                 */
                br.inf.portalfiscal.nfe.TGuid xgetNFCI();
                
                /**
                 * True if has "nFCI" element
                 */
                boolean isSetNFCI();
                
                /**
                 * Sets the "nFCI" element
                 */
                void setNFCI(java.lang.String nfci);
                
                /**
                 * Sets (as xml) the "nFCI" element
                 */
                void xsetNFCI(br.inf.portalfiscal.nfe.TGuid nfci);
                
                /**
                 * Unsets the "nFCI" element
                 */
                void unsetNFCI();
                
                /**
                 * Gets the "veicProd" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd getVeicProd();
                
                /**
                 * True if has "veicProd" element
                 */
                boolean isSetVeicProd();
                
                /**
                 * Sets the "veicProd" element
                 */
                void setVeicProd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd veicProd);
                
                /**
                 * Appends and returns a new empty "veicProd" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd addNewVeicProd();
                
                /**
                 * Unsets the "veicProd" element
                 */
                void unsetVeicProd();
                
                /**
                 * Gets array of all "med" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med[] getMedArray();
                
                /**
                 * Gets ith "med" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med getMedArray(int i);
                
                /**
                 * Returns number of "med" element
                 */
                int sizeOfMedArray();
                
                /**
                 * Sets array of all "med" element
                 */
                void setMedArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med[] medArray);
                
                /**
                 * Sets ith "med" element
                 */
                void setMedArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med med);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "med" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med insertNewMed(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "med" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med addNewMed();
                
                /**
                 * Removes the ith "med" element
                 */
                void removeMed(int i);
                
                /**
                 * Gets array of all "arma" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma[] getArmaArray();
                
                /**
                 * Gets ith "arma" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma getArmaArray(int i);
                
                /**
                 * Returns number of "arma" element
                 */
                int sizeOfArmaArray();
                
                /**
                 * Sets array of all "arma" element
                 */
                void setArmaArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma[] armaArray);
                
                /**
                 * Sets ith "arma" element
                 */
                void setArmaArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma arma);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "arma" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma insertNewArma(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "arma" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma addNewArma();
                
                /**
                 * Removes the ith "arma" element
                 */
                void removeArma(int i);
                
                /**
                 * Gets the "comb" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb getComb();
                
                /**
                 * True if has "comb" element
                 */
                boolean isSetComb();
                
                /**
                 * Sets the "comb" element
                 */
                void setComb(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb comb);
                
                /**
                 * Appends and returns a new empty "comb" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb addNewComb();
                
                /**
                 * Unsets the "comb" element
                 */
                void unsetComb();
                
                /**
                 * Gets the "nRECOPI" element
                 */
                java.lang.String getNRECOPI();
                
                /**
                 * Gets (as xml) the "nRECOPI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI xgetNRECOPI();
                
                /**
                 * True if has "nRECOPI" element
                 */
                boolean isSetNRECOPI();
                
                /**
                 * Sets the "nRECOPI" element
                 */
                void setNRECOPI(java.lang.String nrecopi);
                
                /**
                 * Sets (as xml) the "nRECOPI" element
                 */
                void xsetNRECOPI(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI nrecopi);
                
                /**
                 * Unsets the "nRECOPI" element
                 */
                void unsetNRECOPI();
                
                /**
                 * An XML cProd(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$CProd.
                 */
                public interface CProd extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CProd.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cprodcb10elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML cEAN(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$CEAN.
                 */
                public interface CEAN extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CEAN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cean66d5elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEAN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xProd(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$XProd.
                 */
                public interface XProd extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XProd.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xprod90a5elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML NCM(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$NCM.
                 */
                public interface NCM extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NCM.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ncm53eeelemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NCM) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML NVE(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$NVE.
                 */
                public interface NVE extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NVE.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nveae33elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NVE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML EXTIPI(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$EXTIPI.
                 */
                public interface EXTIPI extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(EXTIPI.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("extipic747elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.EXTIPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML uCom(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$UCom.
                 */
                public interface UCom extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(UCom.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ucom2bb2elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UCom) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML cEANTrib(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$CEANTrib.
                 */
                public interface CEANTrib extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CEANTrib.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ceantrib7b8celemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.CEANTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML uTrib(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$UTrib.
                 */
                public interface UTrib extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(UTrib.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("utribb2e2elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.UTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML indTot(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$IndTot.
                 */
                public interface IndTot extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndTot.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indtot6de0elemtype");
                    
                    org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                    void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                    
                    static final Enum X_0 = Enum.forString("0");
                    static final Enum X_1 = Enum.forString("1");
                    
                    static final int INT_X_0 = Enum.INT_X_0;
                    static final int INT_X_1 = Enum.INT_X_1;
                    
                    /**
                     * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$IndTot.
                     * These enum values can be used as follows:
                     * <pre>
                     * enum.toString(); // returns the string value of the enum
                     * enum.intValue(); // returns an int value, useful for switches
                     * // e.g., case Enum.INT_X_0
                     * Enum.forString(s); // returns the enum value for a string
                     * Enum.forInt(i); // returns the enum value for an int
                     * </pre>
                     * Enumeration objects are immutable singleton objects that
                     * can be compared using == object equality. They have no
                     * public constructor. See the constants defined within this
                     * class for all the valid values.
                     */
                    static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                    {
                      /**
                       * Returns the enum value for a string, or null if none.
                       */
                      public static Enum forString(java.lang.String s)
                          { return (Enum)table.forString(s); }
                      /**
                       * Returns the enum value corresponding to an int, or null if none.
                       */
                      public static Enum forInt(int i)
                          { return (Enum)table.forInt(i); }
                      
                      private Enum(java.lang.String s, int i)
                          { super(s, i); }
                      
                      static final int INT_X_0 = 1;
                      static final int INT_X_1 = 2;
                      
                      public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                          new org.apache.xmlbeans.StringEnumAbstractBase.Table
                      (
                        new Enum[]
                        {
                          new Enum("0", INT_X_0),
                          new Enum("1", INT_X_1),
                        }
                      );
                      private static final long serialVersionUID = 1L;
                      private java.lang.Object readResolve() { return forInt(intValue()); } 
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.IndTot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML DI(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface DI extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(DI.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("dif96belemtype");
                    
                    /**
                     * Gets the "nDI" element
                     */
                    java.lang.String getNDI();
                    
                    /**
                     * Gets (as xml) the "nDI" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI xgetNDI();
                    
                    /**
                     * Sets the "nDI" element
                     */
                    void setNDI(java.lang.String ndi);
                    
                    /**
                     * Sets (as xml) the "nDI" element
                     */
                    void xsetNDI(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI ndi);
                    
                    /**
                     * Gets the "dDI" element
                     */
                    java.lang.String getDDI();
                    
                    /**
                     * Gets (as xml) the "dDI" element
                     */
                    br.inf.portalfiscal.nfe.TData xgetDDI();
                    
                    /**
                     * Sets the "dDI" element
                     */
                    void setDDI(java.lang.String ddi);
                    
                    /**
                     * Sets (as xml) the "dDI" element
                     */
                    void xsetDDI(br.inf.portalfiscal.nfe.TData ddi);
                    
                    /**
                     * Gets the "xLocDesemb" element
                     */
                    java.lang.String getXLocDesemb();
                    
                    /**
                     * Gets (as xml) the "xLocDesemb" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb xgetXLocDesemb();
                    
                    /**
                     * Sets the "xLocDesemb" element
                     */
                    void setXLocDesemb(java.lang.String xLocDesemb);
                    
                    /**
                     * Sets (as xml) the "xLocDesemb" element
                     */
                    void xsetXLocDesemb(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb xLocDesemb);
                    
                    /**
                     * Gets the "UFDesemb" element
                     */
                    br.inf.portalfiscal.nfe.TUfEmi.Enum getUFDesemb();
                    
                    /**
                     * Gets (as xml) the "UFDesemb" element
                     */
                    br.inf.portalfiscal.nfe.TUfEmi xgetUFDesemb();
                    
                    /**
                     * Sets the "UFDesemb" element
                     */
                    void setUFDesemb(br.inf.portalfiscal.nfe.TUfEmi.Enum ufDesemb);
                    
                    /**
                     * Sets (as xml) the "UFDesemb" element
                     */
                    void xsetUFDesemb(br.inf.portalfiscal.nfe.TUfEmi ufDesemb);
                    
                    /**
                     * Gets the "dDesemb" element
                     */
                    java.lang.String getDDesemb();
                    
                    /**
                     * Gets (as xml) the "dDesemb" element
                     */
                    br.inf.portalfiscal.nfe.TData xgetDDesemb();
                    
                    /**
                     * Sets the "dDesemb" element
                     */
                    void setDDesemb(java.lang.String dDesemb);
                    
                    /**
                     * Sets (as xml) the "dDesemb" element
                     */
                    void xsetDDesemb(br.inf.portalfiscal.nfe.TData dDesemb);
                    
                    /**
                     * Gets the "tpViaTransp" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp.Enum getTpViaTransp();
                    
                    /**
                     * Gets (as xml) the "tpViaTransp" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp xgetTpViaTransp();
                    
                    /**
                     * Sets the "tpViaTransp" element
                     */
                    void setTpViaTransp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp.Enum tpViaTransp);
                    
                    /**
                     * Sets (as xml) the "tpViaTransp" element
                     */
                    void xsetTpViaTransp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp tpViaTransp);
                    
                    /**
                     * Gets the "vAFRMM" element
                     */
                    java.lang.String getVAFRMM();
                    
                    /**
                     * Gets (as xml) the "vAFRMM" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVAFRMM();
                    
                    /**
                     * True if has "vAFRMM" element
                     */
                    boolean isSetVAFRMM();
                    
                    /**
                     * Sets the "vAFRMM" element
                     */
                    void setVAFRMM(java.lang.String vafrmm);
                    
                    /**
                     * Sets (as xml) the "vAFRMM" element
                     */
                    void xsetVAFRMM(br.inf.portalfiscal.nfe.TDec1302Opc vafrmm);
                    
                    /**
                     * Unsets the "vAFRMM" element
                     */
                    void unsetVAFRMM();
                    
                    /**
                     * Gets the "tpIntermedio" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio.Enum getTpIntermedio();
                    
                    /**
                     * Gets (as xml) the "tpIntermedio" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio xgetTpIntermedio();
                    
                    /**
                     * Sets the "tpIntermedio" element
                     */
                    void setTpIntermedio(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio.Enum tpIntermedio);
                    
                    /**
                     * Sets (as xml) the "tpIntermedio" element
                     */
                    void xsetTpIntermedio(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio tpIntermedio);
                    
                    /**
                     * Gets the "CNPJ" element
                     */
                    java.lang.String getCNPJ();
                    
                    /**
                     * Gets (as xml) the "CNPJ" element
                     */
                    br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
                    
                    /**
                     * True if has "CNPJ" element
                     */
                    boolean isSetCNPJ();
                    
                    /**
                     * Sets the "CNPJ" element
                     */
                    void setCNPJ(java.lang.String cnpj);
                    
                    /**
                     * Sets (as xml) the "CNPJ" element
                     */
                    void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
                    
                    /**
                     * Unsets the "CNPJ" element
                     */
                    void unsetCNPJ();
                    
                    /**
                     * Gets the "UFTerceiro" element
                     */
                    br.inf.portalfiscal.nfe.TUfEmi.Enum getUFTerceiro();
                    
                    /**
                     * Gets (as xml) the "UFTerceiro" element
                     */
                    br.inf.portalfiscal.nfe.TUfEmi xgetUFTerceiro();
                    
                    /**
                     * True if has "UFTerceiro" element
                     */
                    boolean isSetUFTerceiro();
                    
                    /**
                     * Sets the "UFTerceiro" element
                     */
                    void setUFTerceiro(br.inf.portalfiscal.nfe.TUfEmi.Enum ufTerceiro);
                    
                    /**
                     * Sets (as xml) the "UFTerceiro" element
                     */
                    void xsetUFTerceiro(br.inf.portalfiscal.nfe.TUfEmi ufTerceiro);
                    
                    /**
                     * Unsets the "UFTerceiro" element
                     */
                    void unsetUFTerceiro();
                    
                    /**
                     * Gets the "cExportador" element
                     */
                    java.lang.String getCExportador();
                    
                    /**
                     * Gets (as xml) the "cExportador" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador xgetCExportador();
                    
                    /**
                     * Sets the "cExportador" element
                     */
                    void setCExportador(java.lang.String cExportador);
                    
                    /**
                     * Sets (as xml) the "cExportador" element
                     */
                    void xsetCExportador(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador cExportador);
                    
                    /**
                     * Gets array of all "adi" elements
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi[] getAdiArray();
                    
                    /**
                     * Gets ith "adi" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi getAdiArray(int i);
                    
                    /**
                     * Returns number of "adi" element
                     */
                    int sizeOfAdiArray();
                    
                    /**
                     * Sets array of all "adi" element
                     */
                    void setAdiArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi[] adiArray);
                    
                    /**
                     * Sets ith "adi" element
                     */
                    void setAdiArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi adi);
                    
                    /**
                     * Inserts and returns a new empty value (as xml) as the ith "adi" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi insertNewAdi(int i);
                    
                    /**
                     * Appends and returns a new empty value (as xml) as the last "adi" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi addNewAdi();
                    
                    /**
                     * Removes the ith "adi" element
                     */
                    void removeAdi(int i);
                    
                    /**
                     * An XML nDI(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$NDI.
                     */
                    public interface NDI extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NDI.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ndi8eecelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.NDI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML xLocDesemb(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$XLocDesemb.
                     */
                    public interface XLocDesemb extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XLocDesemb.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xlocdesembb51felemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.XLocDesemb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpViaTransp(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$TpViaTransp.
                     */
                    public interface TpViaTransp extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpViaTransp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpviatransp3b65elemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      static final Enum X_4 = Enum.forString("4");
                      static final Enum X_5 = Enum.forString("5");
                      static final Enum X_6 = Enum.forString("6");
                      static final Enum X_7 = Enum.forString("7");
                      static final Enum X_8 = Enum.forString("8");
                      static final Enum X_9 = Enum.forString("9");
                      static final Enum X_10 = Enum.forString("10");
                      
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      static final int INT_X_4 = Enum.INT_X_4;
                      static final int INT_X_5 = Enum.INT_X_5;
                      static final int INT_X_6 = Enum.INT_X_6;
                      static final int INT_X_7 = Enum.INT_X_7;
                      static final int INT_X_8 = Enum.INT_X_8;
                      static final int INT_X_9 = Enum.INT_X_9;
                      static final int INT_X_10 = Enum.INT_X_10;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$TpViaTransp.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_1
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_1 = 1;
                        static final int INT_X_2 = 2;
                        static final int INT_X_3 = 3;
                        static final int INT_X_4 = 4;
                        static final int INT_X_5 = 5;
                        static final int INT_X_6 = 6;
                        static final int INT_X_7 = 7;
                        static final int INT_X_8 = 8;
                        static final int INT_X_9 = 9;
                        static final int INT_X_10 = 10;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                            new Enum("4", INT_X_4),
                            new Enum("5", INT_X_5),
                            new Enum("6", INT_X_6),
                            new Enum("7", INT_X_7),
                            new Enum("8", INT_X_8),
                            new Enum("9", INT_X_9),
                            new Enum("10", INT_X_10),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpViaTransp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpIntermedio(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$TpIntermedio.
                     */
                    public interface TpIntermedio extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpIntermedio.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpintermedio215delemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$TpIntermedio.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_1
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_1 = 1;
                        static final int INT_X_2 = 2;
                        static final int INT_X_3 = 3;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.TpIntermedio) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cExportador(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$CExportador.
                     */
                    public interface CExportador extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CExportador.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cexportador16e2elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.CExportador) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML adi(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface Adi extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Adi.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("adidb99elemtype");
                      
                      /**
                       * Gets the "nAdicao" element
                       */
                      java.lang.String getNAdicao();
                      
                      /**
                       * Gets (as xml) the "nAdicao" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao xgetNAdicao();
                      
                      /**
                       * Sets the "nAdicao" element
                       */
                      void setNAdicao(java.lang.String nAdicao);
                      
                      /**
                       * Sets (as xml) the "nAdicao" element
                       */
                      void xsetNAdicao(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao nAdicao);
                      
                      /**
                       * Gets the "nSeqAdic" element
                       */
                      java.lang.String getNSeqAdic();
                      
                      /**
                       * Gets (as xml) the "nSeqAdic" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic xgetNSeqAdic();
                      
                      /**
                       * Sets the "nSeqAdic" element
                       */
                      void setNSeqAdic(java.lang.String nSeqAdic);
                      
                      /**
                       * Sets (as xml) the "nSeqAdic" element
                       */
                      void xsetNSeqAdic(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic nSeqAdic);
                      
                      /**
                       * Gets the "cFabricante" element
                       */
                      java.lang.String getCFabricante();
                      
                      /**
                       * Gets (as xml) the "cFabricante" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante xgetCFabricante();
                      
                      /**
                       * Sets the "cFabricante" element
                       */
                      void setCFabricante(java.lang.String cFabricante);
                      
                      /**
                       * Sets (as xml) the "cFabricante" element
                       */
                      void xsetCFabricante(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante cFabricante);
                      
                      /**
                       * Gets the "vDescDI" element
                       */
                      java.lang.String getVDescDI();
                      
                      /**
                       * Gets (as xml) the "vDescDI" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302Opc xgetVDescDI();
                      
                      /**
                       * True if has "vDescDI" element
                       */
                      boolean isSetVDescDI();
                      
                      /**
                       * Sets the "vDescDI" element
                       */
                      void setVDescDI(java.lang.String vDescDI);
                      
                      /**
                       * Sets (as xml) the "vDescDI" element
                       */
                      void xsetVDescDI(br.inf.portalfiscal.nfe.TDec1302Opc vDescDI);
                      
                      /**
                       * Unsets the "vDescDI" element
                       */
                      void unsetVDescDI();
                      
                      /**
                       * Gets the "nDraw" element
                       */
                      java.lang.String getNDraw();
                      
                      /**
                       * Gets (as xml) the "nDraw" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw xgetNDraw();
                      
                      /**
                       * True if has "nDraw" element
                       */
                      boolean isSetNDraw();
                      
                      /**
                       * Sets the "nDraw" element
                       */
                      void setNDraw(java.lang.String nDraw);
                      
                      /**
                       * Sets (as xml) the "nDraw" element
                       */
                      void xsetNDraw(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw nDraw);
                      
                      /**
                       * Unsets the "nDraw" element
                       */
                      void unsetNDraw();
                      
                      /**
                       * An XML nAdicao(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$Adi$NAdicao.
                       */
                      public interface NAdicao extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NAdicao.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nadicao1694elemtype");
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NAdicao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML nSeqAdic(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$Adi$NSeqAdic.
                       */
                      public interface NSeqAdic extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NSeqAdic.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nseqadic338felemtype");
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NSeqAdic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML cFabricante(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$Adi$CFabricante.
                       */
                      public interface CFabricante extends br.inf.portalfiscal.nfe.TString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CFabricante.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cfabricante9da7elemtype");
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.CFabricante) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML nDraw(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DI$Adi$NDraw.
                       */
                      public interface NDraw extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NDraw.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ndrawe79belemtype");
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi.NDraw) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI.Adi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML detExport(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface DetExport extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(DetExport.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("detexport2a5delemtype");
                    
                    /**
                     * Gets the "nDraw" element
                     */
                    java.lang.String getNDraw();
                    
                    /**
                     * Gets (as xml) the "nDraw" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw xgetNDraw();
                    
                    /**
                     * True if has "nDraw" element
                     */
                    boolean isSetNDraw();
                    
                    /**
                     * Sets the "nDraw" element
                     */
                    void setNDraw(java.lang.String nDraw);
                    
                    /**
                     * Sets (as xml) the "nDraw" element
                     */
                    void xsetNDraw(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw nDraw);
                    
                    /**
                     * Unsets the "nDraw" element
                     */
                    void unsetNDraw();
                    
                    /**
                     * Gets the "exportInd" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd getExportInd();
                    
                    /**
                     * True if has "exportInd" element
                     */
                    boolean isSetExportInd();
                    
                    /**
                     * Sets the "exportInd" element
                     */
                    void setExportInd(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd exportInd);
                    
                    /**
                     * Appends and returns a new empty "exportInd" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd addNewExportInd();
                    
                    /**
                     * Unsets the "exportInd" element
                     */
                    void unsetExportInd();
                    
                    /**
                     * An XML nDraw(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DetExport$NDraw.
                     */
                    public interface NDraw extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NDraw.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ndraw9e9belemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.NDraw) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML exportInd(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ExportInd extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ExportInd.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("exportindd9d4elemtype");
                      
                      /**
                       * Gets the "nRE" element
                       */
                      java.lang.String getNRE();
                      
                      /**
                       * Gets (as xml) the "nRE" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE xgetNRE();
                      
                      /**
                       * Sets the "nRE" element
                       */
                      void setNRE(java.lang.String nre);
                      
                      /**
                       * Sets (as xml) the "nRE" element
                       */
                      void xsetNRE(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE nre);
                      
                      /**
                       * Gets the "chNFe" element
                       */
                      java.lang.String getChNFe();
                      
                      /**
                       * Gets (as xml) the "chNFe" element
                       */
                      br.inf.portalfiscal.nfe.TChNFe xgetChNFe();
                      
                      /**
                       * Sets the "chNFe" element
                       */
                      void setChNFe(java.lang.String chNFe);
                      
                      /**
                       * Sets (as xml) the "chNFe" element
                       */
                      void xsetChNFe(br.inf.portalfiscal.nfe.TChNFe chNFe);
                      
                      /**
                       * Gets the "qExport" element
                       */
                      java.lang.String getQExport();
                      
                      /**
                       * Gets (as xml) the "qExport" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104V xgetQExport();
                      
                      /**
                       * Sets the "qExport" element
                       */
                      void setQExport(java.lang.String qExport);
                      
                      /**
                       * Sets (as xml) the "qExport" element
                       */
                      void xsetQExport(br.inf.portalfiscal.nfe.TDec1104V qExport);
                      
                      /**
                       * An XML nRE(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$DetExport$ExportInd$NRE.
                       */
                      public interface NRE extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NRE.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nre1261elemtype");
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd.NRE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport.ExportInd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.DetExport) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xPed(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$XPed.
                 */
                public interface XPed extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XPed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xpede05delemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.XPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML nItemPed(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$NItemPed.
                 */
                public interface NItemPed extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NItemPed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nitemped3794elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NItemPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML veicProd(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface VeicProd extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(VeicProd.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("veicprod5de6elemtype");
                    
                    /**
                     * Gets the "tpOp" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp.Enum getTpOp();
                    
                    /**
                     * Gets (as xml) the "tpOp" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp xgetTpOp();
                    
                    /**
                     * Sets the "tpOp" element
                     */
                    void setTpOp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp.Enum tpOp);
                    
                    /**
                     * Sets (as xml) the "tpOp" element
                     */
                    void xsetTpOp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp tpOp);
                    
                    /**
                     * Gets the "chassi" element
                     */
                    java.lang.String getChassi();
                    
                    /**
                     * Gets (as xml) the "chassi" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi xgetChassi();
                    
                    /**
                     * Sets the "chassi" element
                     */
                    void setChassi(java.lang.String chassi);
                    
                    /**
                     * Sets (as xml) the "chassi" element
                     */
                    void xsetChassi(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi chassi);
                    
                    /**
                     * Gets the "cCor" element
                     */
                    java.lang.String getCCor();
                    
                    /**
                     * Gets (as xml) the "cCor" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor xgetCCor();
                    
                    /**
                     * Sets the "cCor" element
                     */
                    void setCCor(java.lang.String cCor);
                    
                    /**
                     * Sets (as xml) the "cCor" element
                     */
                    void xsetCCor(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor cCor);
                    
                    /**
                     * Gets the "xCor" element
                     */
                    java.lang.String getXCor();
                    
                    /**
                     * Gets (as xml) the "xCor" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor xgetXCor();
                    
                    /**
                     * Sets the "xCor" element
                     */
                    void setXCor(java.lang.String xCor);
                    
                    /**
                     * Sets (as xml) the "xCor" element
                     */
                    void xsetXCor(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor xCor);
                    
                    /**
                     * Gets the "pot" element
                     */
                    java.lang.String getPot();
                    
                    /**
                     * Gets (as xml) the "pot" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot xgetPot();
                    
                    /**
                     * Sets the "pot" element
                     */
                    void setPot(java.lang.String pot);
                    
                    /**
                     * Sets (as xml) the "pot" element
                     */
                    void xsetPot(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot pot);
                    
                    /**
                     * Gets the "cilin" element
                     */
                    java.lang.String getCilin();
                    
                    /**
                     * Gets (as xml) the "cilin" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin xgetCilin();
                    
                    /**
                     * Sets the "cilin" element
                     */
                    void setCilin(java.lang.String cilin);
                    
                    /**
                     * Sets (as xml) the "cilin" element
                     */
                    void xsetCilin(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin cilin);
                    
                    /**
                     * Gets the "pesoL" element
                     */
                    java.lang.String getPesoL();
                    
                    /**
                     * Gets (as xml) the "pesoL" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL xgetPesoL();
                    
                    /**
                     * Sets the "pesoL" element
                     */
                    void setPesoL(java.lang.String pesoL);
                    
                    /**
                     * Sets (as xml) the "pesoL" element
                     */
                    void xsetPesoL(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL pesoL);
                    
                    /**
                     * Gets the "pesoB" element
                     */
                    java.lang.String getPesoB();
                    
                    /**
                     * Gets (as xml) the "pesoB" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB xgetPesoB();
                    
                    /**
                     * Sets the "pesoB" element
                     */
                    void setPesoB(java.lang.String pesoB);
                    
                    /**
                     * Sets (as xml) the "pesoB" element
                     */
                    void xsetPesoB(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB pesoB);
                    
                    /**
                     * Gets the "nSerie" element
                     */
                    java.lang.String getNSerie();
                    
                    /**
                     * Gets (as xml) the "nSerie" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie xgetNSerie();
                    
                    /**
                     * Sets the "nSerie" element
                     */
                    void setNSerie(java.lang.String nSerie);
                    
                    /**
                     * Sets (as xml) the "nSerie" element
                     */
                    void xsetNSerie(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie nSerie);
                    
                    /**
                     * Gets the "tpComb" element
                     */
                    java.lang.String getTpComb();
                    
                    /**
                     * Gets (as xml) the "tpComb" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb xgetTpComb();
                    
                    /**
                     * Sets the "tpComb" element
                     */
                    void setTpComb(java.lang.String tpComb);
                    
                    /**
                     * Sets (as xml) the "tpComb" element
                     */
                    void xsetTpComb(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb tpComb);
                    
                    /**
                     * Gets the "nMotor" element
                     */
                    java.lang.String getNMotor();
                    
                    /**
                     * Gets (as xml) the "nMotor" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor xgetNMotor();
                    
                    /**
                     * Sets the "nMotor" element
                     */
                    void setNMotor(java.lang.String nMotor);
                    
                    /**
                     * Sets (as xml) the "nMotor" element
                     */
                    void xsetNMotor(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor nMotor);
                    
                    /**
                     * Gets the "CMT" element
                     */
                    java.lang.String getCMT();
                    
                    /**
                     * Gets (as xml) the "CMT" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT xgetCMT();
                    
                    /**
                     * Sets the "CMT" element
                     */
                    void setCMT(java.lang.String cmt);
                    
                    /**
                     * Sets (as xml) the "CMT" element
                     */
                    void xsetCMT(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT cmt);
                    
                    /**
                     * Gets the "dist" element
                     */
                    java.lang.String getDist();
                    
                    /**
                     * Gets (as xml) the "dist" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist xgetDist();
                    
                    /**
                     * Sets the "dist" element
                     */
                    void setDist(java.lang.String dist);
                    
                    /**
                     * Sets (as xml) the "dist" element
                     */
                    void xsetDist(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist dist);
                    
                    /**
                     * Gets the "anoMod" element
                     */
                    java.lang.String getAnoMod();
                    
                    /**
                     * Gets (as xml) the "anoMod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod xgetAnoMod();
                    
                    /**
                     * Sets the "anoMod" element
                     */
                    void setAnoMod(java.lang.String anoMod);
                    
                    /**
                     * Sets (as xml) the "anoMod" element
                     */
                    void xsetAnoMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod anoMod);
                    
                    /**
                     * Gets the "anoFab" element
                     */
                    java.lang.String getAnoFab();
                    
                    /**
                     * Gets (as xml) the "anoFab" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab xgetAnoFab();
                    
                    /**
                     * Sets the "anoFab" element
                     */
                    void setAnoFab(java.lang.String anoFab);
                    
                    /**
                     * Sets (as xml) the "anoFab" element
                     */
                    void xsetAnoFab(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab anoFab);
                    
                    /**
                     * Gets the "tpPint" element
                     */
                    java.lang.String getTpPint();
                    
                    /**
                     * Gets (as xml) the "tpPint" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint xgetTpPint();
                    
                    /**
                     * Sets the "tpPint" element
                     */
                    void setTpPint(java.lang.String tpPint);
                    
                    /**
                     * Sets (as xml) the "tpPint" element
                     */
                    void xsetTpPint(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint tpPint);
                    
                    /**
                     * Gets the "tpVeic" element
                     */
                    java.lang.String getTpVeic();
                    
                    /**
                     * Gets (as xml) the "tpVeic" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic xgetTpVeic();
                    
                    /**
                     * Sets the "tpVeic" element
                     */
                    void setTpVeic(java.lang.String tpVeic);
                    
                    /**
                     * Sets (as xml) the "tpVeic" element
                     */
                    void xsetTpVeic(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic tpVeic);
                    
                    /**
                     * Gets the "espVeic" element
                     */
                    java.lang.String getEspVeic();
                    
                    /**
                     * Gets (as xml) the "espVeic" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic xgetEspVeic();
                    
                    /**
                     * Sets the "espVeic" element
                     */
                    void setEspVeic(java.lang.String espVeic);
                    
                    /**
                     * Sets (as xml) the "espVeic" element
                     */
                    void xsetEspVeic(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic espVeic);
                    
                    /**
                     * Gets the "VIN" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN.Enum getVIN();
                    
                    /**
                     * Gets (as xml) the "VIN" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN xgetVIN();
                    
                    /**
                     * Sets the "VIN" element
                     */
                    void setVIN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN.Enum vin);
                    
                    /**
                     * Sets (as xml) the "VIN" element
                     */
                    void xsetVIN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN vin);
                    
                    /**
                     * Gets the "condVeic" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic.Enum getCondVeic();
                    
                    /**
                     * Gets (as xml) the "condVeic" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic xgetCondVeic();
                    
                    /**
                     * Sets the "condVeic" element
                     */
                    void setCondVeic(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic.Enum condVeic);
                    
                    /**
                     * Sets (as xml) the "condVeic" element
                     */
                    void xsetCondVeic(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic condVeic);
                    
                    /**
                     * Gets the "cMod" element
                     */
                    java.lang.String getCMod();
                    
                    /**
                     * Gets (as xml) the "cMod" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod xgetCMod();
                    
                    /**
                     * Sets the "cMod" element
                     */
                    void setCMod(java.lang.String cMod);
                    
                    /**
                     * Sets (as xml) the "cMod" element
                     */
                    void xsetCMod(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod cMod);
                    
                    /**
                     * Gets the "cCorDENATRAN" element
                     */
                    java.lang.String getCCorDENATRAN();
                    
                    /**
                     * Gets (as xml) the "cCorDENATRAN" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN xgetCCorDENATRAN();
                    
                    /**
                     * Sets the "cCorDENATRAN" element
                     */
                    void setCCorDENATRAN(java.lang.String cCorDENATRAN);
                    
                    /**
                     * Sets (as xml) the "cCorDENATRAN" element
                     */
                    void xsetCCorDENATRAN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN cCorDENATRAN);
                    
                    /**
                     * Gets the "lota" element
                     */
                    java.lang.String getLota();
                    
                    /**
                     * Gets (as xml) the "lota" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota xgetLota();
                    
                    /**
                     * Sets the "lota" element
                     */
                    void setLota(java.lang.String lota);
                    
                    /**
                     * Sets (as xml) the "lota" element
                     */
                    void xsetLota(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota lota);
                    
                    /**
                     * Gets the "tpRest" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest.Enum getTpRest();
                    
                    /**
                     * Gets (as xml) the "tpRest" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest xgetTpRest();
                    
                    /**
                     * Sets the "tpRest" element
                     */
                    void setTpRest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest.Enum tpRest);
                    
                    /**
                     * Sets (as xml) the "tpRest" element
                     */
                    void xsetTpRest(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest tpRest);
                    
                    /**
                     * An XML tpOp(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpOp.
                     */
                    public interface TpOp extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpOp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpopa62delemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_0 = Enum.forString("0");
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      
                      static final int INT_X_0 = Enum.INT_X_0;
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpOp.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_0
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_0 = 1;
                        static final int INT_X_1 = 2;
                        static final int INT_X_2 = 3;
                        static final int INT_X_3 = 4;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("0", INT_X_0),
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpOp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML chassi(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$Chassi.
                     */
                    public interface Chassi extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Chassi.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("chassi87bdelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Chassi) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cCor(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CCor.
                     */
                    public interface CCor extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CCor.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ccor71c7elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML xCor(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$XCor.
                     */
                    public interface XCor extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XCor.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xcor011celemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.XCor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML pot(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$Pot.
                     */
                    public interface Pot extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Pot.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pot9085elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Pot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cilin(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$Cilin.
                     */
                    public interface Cilin extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Cilin.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cilin2eafelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Cilin) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML pesoL(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$PesoL.
                     */
                    public interface PesoL extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PesoL.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pesolfdbfelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoL) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML pesoB(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$PesoB.
                     */
                    public interface PesoB extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PesoB.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pesob3809elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.PesoB) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nSerie(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$NSerie.
                     */
                    public interface NSerie extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NSerie.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nserie6f5celemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NSerie) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpComb(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpComb.
                     */
                    public interface TpComb extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpComb.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpcomb6e0delemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpComb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nMotor(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$NMotor.
                     */
                    public interface NMotor extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NMotor.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nmotorcac3elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.NMotor) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML CMT(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CMT.
                     */
                    public interface CMT extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CMT.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cmtbe90elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML dist(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$Dist.
                     */
                    public interface Dist extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Dist.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("distc664elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Dist) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML anoMod(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$AnoMod.
                     */
                    public interface AnoMod extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AnoMod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("anomoda40aelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoMod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML anoFab(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$AnoFab.
                     */
                    public interface AnoFab extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(AnoFab.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("anofab22e5elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.AnoFab) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpPint(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpPint.
                     */
                    public interface TpPint extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpPint.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tppintb0cfelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpPint) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpVeic(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpVeic.
                     */
                    public interface TpVeic extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpVeic.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpveic3c05elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML espVeic(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$EspVeic.
                     */
                    public interface EspVeic extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(EspVeic.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("espveic1c6felemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.EspVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML VIN(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$VIN.
                     */
                    public interface VIN extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(VIN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("vinc31felemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum R = Enum.forString("R");
                      static final Enum N = Enum.forString("N");
                      
                      static final int INT_R = Enum.INT_R;
                      static final int INT_N = Enum.INT_N;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$VIN.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_R
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_R = 1;
                        static final int INT_N = 2;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("R", INT_R),
                            new Enum("N", INT_N),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.VIN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML condVeic(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CondVeic.
                     */
                    public interface CondVeic extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CondVeic.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("condveicb09felemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CondVeic.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_1
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_1 = 1;
                        static final int INT_X_2 = 2;
                        static final int INT_X_3 = 3;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CondVeic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cMod(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CMod.
                     */
                    public interface CMod extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CMod.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cmod26cbelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CMod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cCorDENATRAN(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$CCorDENATRAN.
                     */
                    public interface CCorDENATRAN extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CCorDENATRAN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ccordenatran1448elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.CCorDENATRAN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML lota(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$Lota.
                     */
                    public interface Lota extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Lota.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("lotae29aelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.Lota) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML tpRest(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpRest.
                     */
                    public interface TpRest extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpRest.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpresta75aelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_0 = Enum.forString("0");
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      static final Enum X_4 = Enum.forString("4");
                      static final Enum X_9 = Enum.forString("9");
                      
                      static final int INT_X_0 = Enum.INT_X_0;
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      static final int INT_X_4 = Enum.INT_X_4;
                      static final int INT_X_9 = Enum.INT_X_9;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$VeicProd$TpRest.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_0
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_0 = 1;
                        static final int INT_X_1 = 2;
                        static final int INT_X_2 = 3;
                        static final int INT_X_3 = 4;
                        static final int INT_X_4 = 5;
                        static final int INT_X_9 = 6;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("0", INT_X_0),
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                            new Enum("4", INT_X_4),
                            new Enum("9", INT_X_9),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd.TpRest) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.VeicProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML med(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface Med extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Med.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("med2c82elemtype");
                    
                    /**
                     * Gets the "nLote" element
                     */
                    java.lang.String getNLote();
                    
                    /**
                     * Gets (as xml) the "nLote" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote xgetNLote();
                    
                    /**
                     * Sets the "nLote" element
                     */
                    void setNLote(java.lang.String nLote);
                    
                    /**
                     * Sets (as xml) the "nLote" element
                     */
                    void xsetNLote(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote nLote);
                    
                    /**
                     * Gets the "qLote" element
                     */
                    java.lang.String getQLote();
                    
                    /**
                     * Gets (as xml) the "qLote" element
                     */
                    br.inf.portalfiscal.nfe.TDec0803V xgetQLote();
                    
                    /**
                     * Sets the "qLote" element
                     */
                    void setQLote(java.lang.String qLote);
                    
                    /**
                     * Sets (as xml) the "qLote" element
                     */
                    void xsetQLote(br.inf.portalfiscal.nfe.TDec0803V qLote);
                    
                    /**
                     * Gets the "dFab" element
                     */
                    java.lang.String getDFab();
                    
                    /**
                     * Gets (as xml) the "dFab" element
                     */
                    br.inf.portalfiscal.nfe.TData xgetDFab();
                    
                    /**
                     * Sets the "dFab" element
                     */
                    void setDFab(java.lang.String dFab);
                    
                    /**
                     * Sets (as xml) the "dFab" element
                     */
                    void xsetDFab(br.inf.portalfiscal.nfe.TData dFab);
                    
                    /**
                     * Gets the "dVal" element
                     */
                    java.lang.String getDVal();
                    
                    /**
                     * Gets (as xml) the "dVal" element
                     */
                    br.inf.portalfiscal.nfe.TData xgetDVal();
                    
                    /**
                     * Sets the "dVal" element
                     */
                    void setDVal(java.lang.String dVal);
                    
                    /**
                     * Sets (as xml) the "dVal" element
                     */
                    void xsetDVal(br.inf.portalfiscal.nfe.TData dVal);
                    
                    /**
                     * Gets the "vPMC" element
                     */
                    java.lang.String getVPMC();
                    
                    /**
                     * Gets (as xml) the "vPMC" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVPMC();
                    
                    /**
                     * Sets the "vPMC" element
                     */
                    void setVPMC(java.lang.String vpmc);
                    
                    /**
                     * Sets (as xml) the "vPMC" element
                     */
                    void xsetVPMC(br.inf.portalfiscal.nfe.TDec1302 vpmc);
                    
                    /**
                     * An XML nLote(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Med$NLote.
                     */
                    public interface NLote extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NLote.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nlote0d30elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med.NLote) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Med) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML arma(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface Arma extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Arma.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("arma7c6belemtype");
                    
                    /**
                     * Gets the "tpArma" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma.Enum getTpArma();
                    
                    /**
                     * Gets (as xml) the "tpArma" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma xgetTpArma();
                    
                    /**
                     * Sets the "tpArma" element
                     */
                    void setTpArma(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma.Enum tpArma);
                    
                    /**
                     * Sets (as xml) the "tpArma" element
                     */
                    void xsetTpArma(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma tpArma);
                    
                    /**
                     * Gets the "nSerie" element
                     */
                    java.lang.String getNSerie();
                    
                    /**
                     * Gets (as xml) the "nSerie" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie xgetNSerie();
                    
                    /**
                     * Sets the "nSerie" element
                     */
                    void setNSerie(java.lang.String nSerie);
                    
                    /**
                     * Sets (as xml) the "nSerie" element
                     */
                    void xsetNSerie(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie nSerie);
                    
                    /**
                     * Gets the "nCano" element
                     */
                    java.lang.String getNCano();
                    
                    /**
                     * Gets (as xml) the "nCano" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano xgetNCano();
                    
                    /**
                     * Sets the "nCano" element
                     */
                    void setNCano(java.lang.String nCano);
                    
                    /**
                     * Sets (as xml) the "nCano" element
                     */
                    void xsetNCano(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano nCano);
                    
                    /**
                     * Gets the "descr" element
                     */
                    java.lang.String getDescr();
                    
                    /**
                     * Gets (as xml) the "descr" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr xgetDescr();
                    
                    /**
                     * Sets the "descr" element
                     */
                    void setDescr(java.lang.String descr);
                    
                    /**
                     * Sets (as xml) the "descr" element
                     */
                    void xsetDescr(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr descr);
                    
                    /**
                     * An XML tpArma(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Arma$TpArma.
                     */
                    public interface TpArma extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TpArma.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tparma990eelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_0 = Enum.forString("0");
                      static final Enum X_1 = Enum.forString("1");
                      
                      static final int INT_X_0 = Enum.INT_X_0;
                      static final int INT_X_1 = Enum.INT_X_1;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Arma$TpArma.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_0
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_0 = 1;
                        static final int INT_X_1 = 2;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("0", INT_X_0),
                            new Enum("1", INT_X_1),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.TpArma) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nSerie(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Arma$NSerie.
                     */
                    public interface NSerie extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NSerie.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nserieb8e1elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NSerie) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nCano(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Arma$NCano.
                     */
                    public interface NCano extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NCano.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ncano37b2elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.NCano) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML descr(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Arma$Descr.
                     */
                    public interface Descr extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Descr.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("descrd55eelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma.Descr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Arma) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML comb(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface Comb extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Comb.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("comb79e7elemtype");
                    
                    /**
                     * Gets the "cProdANP" element
                     */
                    br.inf.portalfiscal.nfe.TcProdANP.Enum getCProdANP();
                    
                    /**
                     * Gets (as xml) the "cProdANP" element
                     */
                    br.inf.portalfiscal.nfe.TcProdANP xgetCProdANP();
                    
                    /**
                     * Sets the "cProdANP" element
                     */
                    void setCProdANP(br.inf.portalfiscal.nfe.TcProdANP.Enum cProdANP);
                    
                    /**
                     * Sets (as xml) the "cProdANP" element
                     */
                    void xsetCProdANP(br.inf.portalfiscal.nfe.TcProdANP cProdANP);
                    
                    /**
                     * Gets the "pMixGN" element
                     */
                    java.lang.String getPMixGN();
                    
                    /**
                     * Gets (as xml) the "pMixGN" element
                     */
                    br.inf.portalfiscal.nfe.TDec0204V xgetPMixGN();
                    
                    /**
                     * True if has "pMixGN" element
                     */
                    boolean isSetPMixGN();
                    
                    /**
                     * Sets the "pMixGN" element
                     */
                    void setPMixGN(java.lang.String pMixGN);
                    
                    /**
                     * Sets (as xml) the "pMixGN" element
                     */
                    void xsetPMixGN(br.inf.portalfiscal.nfe.TDec0204V pMixGN);
                    
                    /**
                     * Unsets the "pMixGN" element
                     */
                    void unsetPMixGN();
                    
                    /**
                     * Gets the "CODIF" element
                     */
                    java.lang.String getCODIF();
                    
                    /**
                     * Gets (as xml) the "CODIF" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF xgetCODIF();
                    
                    /**
                     * True if has "CODIF" element
                     */
                    boolean isSetCODIF();
                    
                    /**
                     * Sets the "CODIF" element
                     */
                    void setCODIF(java.lang.String codif);
                    
                    /**
                     * Sets (as xml) the "CODIF" element
                     */
                    void xsetCODIF(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF codif);
                    
                    /**
                     * Unsets the "CODIF" element
                     */
                    void unsetCODIF();
                    
                    /**
                     * Gets the "qTemp" element
                     */
                    java.lang.String getQTemp();
                    
                    /**
                     * Gets (as xml) the "qTemp" element
                     */
                    br.inf.portalfiscal.nfe.TDec1204Temperatura xgetQTemp();
                    
                    /**
                     * True if has "qTemp" element
                     */
                    boolean isSetQTemp();
                    
                    /**
                     * Sets the "qTemp" element
                     */
                    void setQTemp(java.lang.String qTemp);
                    
                    /**
                     * Sets (as xml) the "qTemp" element
                     */
                    void xsetQTemp(br.inf.portalfiscal.nfe.TDec1204Temperatura qTemp);
                    
                    /**
                     * Unsets the "qTemp" element
                     */
                    void unsetQTemp();
                    
                    /**
                     * Gets the "UFCons" element
                     */
                    br.inf.portalfiscal.nfe.TUf.Enum getUFCons();
                    
                    /**
                     * Gets (as xml) the "UFCons" element
                     */
                    br.inf.portalfiscal.nfe.TUf xgetUFCons();
                    
                    /**
                     * Sets the "UFCons" element
                     */
                    void setUFCons(br.inf.portalfiscal.nfe.TUf.Enum ufCons);
                    
                    /**
                     * Sets (as xml) the "UFCons" element
                     */
                    void xsetUFCons(br.inf.portalfiscal.nfe.TUf ufCons);
                    
                    /**
                     * Gets the "CIDE" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE getCIDE();
                    
                    /**
                     * True if has "CIDE" element
                     */
                    boolean isSetCIDE();
                    
                    /**
                     * Sets the "CIDE" element
                     */
                    void setCIDE(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE cide);
                    
                    /**
                     * Appends and returns a new empty "CIDE" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE addNewCIDE();
                    
                    /**
                     * Unsets the "CIDE" element
                     */
                    void unsetCIDE();
                    
                    /**
                     * An XML CODIF(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$Comb$CODIF.
                     */
                    public interface CODIF extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CODIF.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("codif03e6elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CODIF) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML CIDE(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface CIDE extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CIDE.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cide8c84elemtype");
                      
                      /**
                       * Gets the "qBCProd" element
                       */
                      java.lang.String getQBCProd();
                      
                      /**
                       * Gets (as xml) the "qBCProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1204V xgetQBCProd();
                      
                      /**
                       * Sets the "qBCProd" element
                       */
                      void setQBCProd(java.lang.String qbcProd);
                      
                      /**
                       * Sets (as xml) the "qBCProd" element
                       */
                      void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204V qbcProd);
                      
                      /**
                       * Gets the "vAliqProd" element
                       */
                      java.lang.String getVAliqProd();
                      
                      /**
                       * Gets (as xml) the "vAliqProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104 xgetVAliqProd();
                      
                      /**
                       * Sets the "vAliqProd" element
                       */
                      void setVAliqProd(java.lang.String vAliqProd);
                      
                      /**
                       * Sets (as xml) the "vAliqProd" element
                       */
                      void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104 vAliqProd);
                      
                      /**
                       * Gets the "vCIDE" element
                       */
                      java.lang.String getVCIDE();
                      
                      /**
                       * Gets (as xml) the "vCIDE" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCIDE();
                      
                      /**
                       * Sets the "vCIDE" element
                       */
                      void setVCIDE(java.lang.String vcide);
                      
                      /**
                       * Sets (as xml) the "vCIDE" element
                       */
                      void xsetVCIDE(br.inf.portalfiscal.nfe.TDec1302 vcide);
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb.CIDE) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.Comb) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML nRECOPI(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Prod$NRECOPI.
                 */
                public interface NRECOPI extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NRECOPI.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nrecopi18bcelemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod.NRECOPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Prod) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML imposto(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Imposto extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Imposto.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("imposto2526elemtype");
                
                /**
                 * Gets the "vTotTrib" element
                 */
                java.lang.String getVTotTrib();
                
                /**
                 * Gets (as xml) the "vTotTrib" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVTotTrib();
                
                /**
                 * True if has "vTotTrib" element
                 */
                boolean isSetVTotTrib();
                
                /**
                 * Sets the "vTotTrib" element
                 */
                void setVTotTrib(java.lang.String vTotTrib);
                
                /**
                 * Sets (as xml) the "vTotTrib" element
                 */
                void xsetVTotTrib(br.inf.portalfiscal.nfe.TDec1302 vTotTrib);
                
                /**
                 * Unsets the "vTotTrib" element
                 */
                void unsetVTotTrib();
                
                /**
                 * Gets the "ICMS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS getICMS();
                
                /**
                 * True if has "ICMS" element
                 */
                boolean isSetICMS();
                
                /**
                 * Sets the "ICMS" element
                 */
                void setICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS icms);
                
                /**
                 * Appends and returns a new empty "ICMS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS addNewICMS();
                
                /**
                 * Unsets the "ICMS" element
                 */
                void unsetICMS();
                
                /**
                 * Gets the "IPI" element
                 */
                br.inf.portalfiscal.nfe.TIpi getIPI();
                
                /**
                 * True if has "IPI" element
                 */
                boolean isSetIPI();
                
                /**
                 * Sets the "IPI" element
                 */
                void setIPI(br.inf.portalfiscal.nfe.TIpi ipi);
                
                /**
                 * Appends and returns a new empty "IPI" element
                 */
                br.inf.portalfiscal.nfe.TIpi addNewIPI();
                
                /**
                 * Unsets the "IPI" element
                 */
                void unsetIPI();
                
                /**
                 * Gets the "II" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II getII();
                
                /**
                 * True if has "II" element
                 */
                boolean isSetII();
                
                /**
                 * Sets the "II" element
                 */
                void setII(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II ii);
                
                /**
                 * Appends and returns a new empty "II" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II addNewII();
                
                /**
                 * Unsets the "II" element
                 */
                void unsetII();
                
                /**
                 * Gets the "ISSQN" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN getISSQN();
                
                /**
                 * True if has "ISSQN" element
                 */
                boolean isSetISSQN();
                
                /**
                 * Sets the "ISSQN" element
                 */
                void setISSQN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN issqn);
                
                /**
                 * Appends and returns a new empty "ISSQN" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN addNewISSQN();
                
                /**
                 * Unsets the "ISSQN" element
                 */
                void unsetISSQN();
                
                /**
                 * Gets the "PIS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS getPIS();
                
                /**
                 * True if has "PIS" element
                 */
                boolean isSetPIS();
                
                /**
                 * Sets the "PIS" element
                 */
                void setPIS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS pis);
                
                /**
                 * Appends and returns a new empty "PIS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS addNewPIS();
                
                /**
                 * Unsets the "PIS" element
                 */
                void unsetPIS();
                
                /**
                 * Gets the "PISST" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST getPISST();
                
                /**
                 * True if has "PISST" element
                 */
                boolean isSetPISST();
                
                /**
                 * Sets the "PISST" element
                 */
                void setPISST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST pisst);
                
                /**
                 * Appends and returns a new empty "PISST" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST addNewPISST();
                
                /**
                 * Unsets the "PISST" element
                 */
                void unsetPISST();
                
                /**
                 * Gets the "COFINS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS getCOFINS();
                
                /**
                 * True if has "COFINS" element
                 */
                boolean isSetCOFINS();
                
                /**
                 * Sets the "COFINS" element
                 */
                void setCOFINS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS cofins);
                
                /**
                 * Appends and returns a new empty "COFINS" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS addNewCOFINS();
                
                /**
                 * Unsets the "COFINS" element
                 */
                void unsetCOFINS();
                
                /**
                 * Gets the "COFINSST" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST getCOFINSST();
                
                /**
                 * True if has "COFINSST" element
                 */
                boolean isSetCOFINSST();
                
                /**
                 * Sets the "COFINSST" element
                 */
                void setCOFINSST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST cofinsst);
                
                /**
                 * Appends and returns a new empty "COFINSST" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST addNewCOFINSST();
                
                /**
                 * Unsets the "COFINSST" element
                 */
                void unsetCOFINSST();
                
                /**
                 * An XML ICMS(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface ICMS extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmsd6caelemtype");
                    
                    /**
                     * Gets the "ICMS00" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00 getICMS00();
                    
                    /**
                     * True if has "ICMS00" element
                     */
                    boolean isSetICMS00();
                    
                    /**
                     * Sets the "ICMS00" element
                     */
                    void setICMS00(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00 icms00);
                    
                    /**
                     * Appends and returns a new empty "ICMS00" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00 addNewICMS00();
                    
                    /**
                     * Unsets the "ICMS00" element
                     */
                    void unsetICMS00();
                    
                    /**
                     * Gets the "ICMS10" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10 getICMS10();
                    
                    /**
                     * True if has "ICMS10" element
                     */
                    boolean isSetICMS10();
                    
                    /**
                     * Sets the "ICMS10" element
                     */
                    void setICMS10(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10 icms10);
                    
                    /**
                     * Appends and returns a new empty "ICMS10" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10 addNewICMS10();
                    
                    /**
                     * Unsets the "ICMS10" element
                     */
                    void unsetICMS10();
                    
                    /**
                     * Gets the "ICMS20" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20 getICMS20();
                    
                    /**
                     * True if has "ICMS20" element
                     */
                    boolean isSetICMS20();
                    
                    /**
                     * Sets the "ICMS20" element
                     */
                    void setICMS20(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20 icms20);
                    
                    /**
                     * Appends and returns a new empty "ICMS20" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20 addNewICMS20();
                    
                    /**
                     * Unsets the "ICMS20" element
                     */
                    void unsetICMS20();
                    
                    /**
                     * Gets the "ICMS30" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30 getICMS30();
                    
                    /**
                     * True if has "ICMS30" element
                     */
                    boolean isSetICMS30();
                    
                    /**
                     * Sets the "ICMS30" element
                     */
                    void setICMS30(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30 icms30);
                    
                    /**
                     * Appends and returns a new empty "ICMS30" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30 addNewICMS30();
                    
                    /**
                     * Unsets the "ICMS30" element
                     */
                    void unsetICMS30();
                    
                    /**
                     * Gets the "ICMS40" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40 getICMS40();
                    
                    /**
                     * True if has "ICMS40" element
                     */
                    boolean isSetICMS40();
                    
                    /**
                     * Sets the "ICMS40" element
                     */
                    void setICMS40(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40 icms40);
                    
                    /**
                     * Appends and returns a new empty "ICMS40" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40 addNewICMS40();
                    
                    /**
                     * Unsets the "ICMS40" element
                     */
                    void unsetICMS40();
                    
                    /**
                     * Gets the "ICMS51" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51 getICMS51();
                    
                    /**
                     * True if has "ICMS51" element
                     */
                    boolean isSetICMS51();
                    
                    /**
                     * Sets the "ICMS51" element
                     */
                    void setICMS51(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51 icms51);
                    
                    /**
                     * Appends and returns a new empty "ICMS51" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51 addNewICMS51();
                    
                    /**
                     * Unsets the "ICMS51" element
                     */
                    void unsetICMS51();
                    
                    /**
                     * Gets the "ICMS60" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60 getICMS60();
                    
                    /**
                     * True if has "ICMS60" element
                     */
                    boolean isSetICMS60();
                    
                    /**
                     * Sets the "ICMS60" element
                     */
                    void setICMS60(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60 icms60);
                    
                    /**
                     * Appends and returns a new empty "ICMS60" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60 addNewICMS60();
                    
                    /**
                     * Unsets the "ICMS60" element
                     */
                    void unsetICMS60();
                    
                    /**
                     * Gets the "ICMS70" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70 getICMS70();
                    
                    /**
                     * True if has "ICMS70" element
                     */
                    boolean isSetICMS70();
                    
                    /**
                     * Sets the "ICMS70" element
                     */
                    void setICMS70(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70 icms70);
                    
                    /**
                     * Appends and returns a new empty "ICMS70" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70 addNewICMS70();
                    
                    /**
                     * Unsets the "ICMS70" element
                     */
                    void unsetICMS70();
                    
                    /**
                     * Gets the "ICMS90" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90 getICMS90();
                    
                    /**
                     * True if has "ICMS90" element
                     */
                    boolean isSetICMS90();
                    
                    /**
                     * Sets the "ICMS90" element
                     */
                    void setICMS90(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90 icms90);
                    
                    /**
                     * Appends and returns a new empty "ICMS90" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90 addNewICMS90();
                    
                    /**
                     * Unsets the "ICMS90" element
                     */
                    void unsetICMS90();
                    
                    /**
                     * Gets the "ICMSPart" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart getICMSPart();
                    
                    /**
                     * True if has "ICMSPart" element
                     */
                    boolean isSetICMSPart();
                    
                    /**
                     * Sets the "ICMSPart" element
                     */
                    void setICMSPart(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart icmsPart);
                    
                    /**
                     * Appends and returns a new empty "ICMSPart" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart addNewICMSPart();
                    
                    /**
                     * Unsets the "ICMSPart" element
                     */
                    void unsetICMSPart();
                    
                    /**
                     * Gets the "ICMSST" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST getICMSST();
                    
                    /**
                     * True if has "ICMSST" element
                     */
                    boolean isSetICMSST();
                    
                    /**
                     * Sets the "ICMSST" element
                     */
                    void setICMSST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST icmsst);
                    
                    /**
                     * Appends and returns a new empty "ICMSST" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST addNewICMSST();
                    
                    /**
                     * Unsets the "ICMSST" element
                     */
                    void unsetICMSST();
                    
                    /**
                     * Gets the "ICMSSN101" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101 getICMSSN101();
                    
                    /**
                     * True if has "ICMSSN101" element
                     */
                    boolean isSetICMSSN101();
                    
                    /**
                     * Sets the "ICMSSN101" element
                     */
                    void setICMSSN101(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101 icmssn101);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN101" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101 addNewICMSSN101();
                    
                    /**
                     * Unsets the "ICMSSN101" element
                     */
                    void unsetICMSSN101();
                    
                    /**
                     * Gets the "ICMSSN102" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102 getICMSSN102();
                    
                    /**
                     * True if has "ICMSSN102" element
                     */
                    boolean isSetICMSSN102();
                    
                    /**
                     * Sets the "ICMSSN102" element
                     */
                    void setICMSSN102(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102 icmssn102);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN102" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102 addNewICMSSN102();
                    
                    /**
                     * Unsets the "ICMSSN102" element
                     */
                    void unsetICMSSN102();
                    
                    /**
                     * Gets the "ICMSSN201" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201 getICMSSN201();
                    
                    /**
                     * True if has "ICMSSN201" element
                     */
                    boolean isSetICMSSN201();
                    
                    /**
                     * Sets the "ICMSSN201" element
                     */
                    void setICMSSN201(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201 icmssn201);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN201" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201 addNewICMSSN201();
                    
                    /**
                     * Unsets the "ICMSSN201" element
                     */
                    void unsetICMSSN201();
                    
                    /**
                     * Gets the "ICMSSN202" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202 getICMSSN202();
                    
                    /**
                     * True if has "ICMSSN202" element
                     */
                    boolean isSetICMSSN202();
                    
                    /**
                     * Sets the "ICMSSN202" element
                     */
                    void setICMSSN202(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202 icmssn202);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN202" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202 addNewICMSSN202();
                    
                    /**
                     * Unsets the "ICMSSN202" element
                     */
                    void unsetICMSSN202();
                    
                    /**
                     * Gets the "ICMSSN500" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500 getICMSSN500();
                    
                    /**
                     * True if has "ICMSSN500" element
                     */
                    boolean isSetICMSSN500();
                    
                    /**
                     * Sets the "ICMSSN500" element
                     */
                    void setICMSSN500(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500 icmssn500);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN500" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500 addNewICMSSN500();
                    
                    /**
                     * Unsets the "ICMSSN500" element
                     */
                    void unsetICMSSN500();
                    
                    /**
                     * Gets the "ICMSSN900" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900 getICMSSN900();
                    
                    /**
                     * True if has "ICMSSN900" element
                     */
                    boolean isSetICMSSN900();
                    
                    /**
                     * Sets the "ICMSSN900" element
                     */
                    void setICMSSN900(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900 icmssn900);
                    
                    /**
                     * Appends and returns a new empty "ICMSSN900" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900 addNewICMSSN900();
                    
                    /**
                     * Unsets the "ICMSSN900" element
                     */
                    void unsetICMSSN900();
                    
                    /**
                     * An XML ICMS00(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS00 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS00.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms00f4a6elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC xgetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC modBC);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS00$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst9c56elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_00 = Enum.forString("00");
                        
                        static final int INT_X_00 = Enum.INT_X_00;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS00$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_00
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_00 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("00", INT_X_00),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS00$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbc9b17elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS00$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS00) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS10(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS10 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS10.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms102205elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC xgetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC modBC);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstc9b5elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_10 = Enum.forString("10");
                        
                        static final int INT_X_10 = Enum.INT_X_10;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_10
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_10 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("10", INT_X_10),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcc876elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcstd735elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS10$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS10) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS20(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS20 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS20.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms204f64elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC xgetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC modBC);
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04 pRedBC);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Gets the "vICMSDeson" element
                       */
                      java.lang.String getVICMSDeson();
                      
                      /**
                       * Gets (as xml) the "vICMSDeson" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                      
                      /**
                       * True if has "vICMSDeson" element
                       */
                      boolean isSetVICMSDeson();
                      
                      /**
                       * Sets the "vICMSDeson" element
                       */
                      void setVICMSDeson(java.lang.String vicmsDeson);
                      
                      /**
                       * Sets (as xml) the "vICMSDeson" element
                       */
                      void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                      
                      /**
                       * Unsets the "vICMSDeson" element
                       */
                      void unsetVICMSDeson();
                      
                      /**
                       * Gets the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS.Enum getMotDesICMS();
                      
                      /**
                       * Gets (as xml) the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS xgetMotDesICMS();
                      
                      /**
                       * True if has "motDesICMS" element
                       */
                      boolean isSetMotDesICMS();
                      
                      /**
                       * Sets the "motDesICMS" element
                       */
                      void setMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS.Enum motDesICMS);
                      
                      /**
                       * Sets (as xml) the "motDesICMS" element
                       */
                      void xsetMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS motDesICMS);
                      
                      /**
                       * Unsets the "motDesICMS" element
                       */
                      void unsetMotDesICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstf714elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_20 = Enum.forString("20");
                        
                        static final int INT_X_20 = Enum.INT_X_20;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_20
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_20 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("20", INT_X_20),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcf5d5elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML motDesICMS(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$MotDesICMS.
                       */
                      public interface MotDesICMS extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(MotDesICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("motdesicms0368elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_9 = Enum.forString("9");
                        static final Enum X_12 = Enum.forString("12");
                        
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_9 = Enum.INT_X_9;
                        static final int INT_X_12 = Enum.INT_X_12;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS20$MotDesICMS.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_3
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_3 = 1;
                          static final int INT_X_9 = 2;
                          static final int INT_X_12 = 3;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("3", INT_X_3),
                              new Enum("9", INT_X_9),
                              new Enum("12", INT_X_12),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS20) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS30(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS30 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS30.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms307cc3elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST cst);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Gets the "vICMSDeson" element
                       */
                      java.lang.String getVICMSDeson();
                      
                      /**
                       * Gets (as xml) the "vICMSDeson" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                      
                      /**
                       * True if has "vICMSDeson" element
                       */
                      boolean isSetVICMSDeson();
                      
                      /**
                       * Sets the "vICMSDeson" element
                       */
                      void setVICMSDeson(java.lang.String vicmsDeson);
                      
                      /**
                       * Sets (as xml) the "vICMSDeson" element
                       */
                      void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                      
                      /**
                       * Unsets the "vICMSDeson" element
                       */
                      void unsetVICMSDeson();
                      
                      /**
                       * Gets the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS.Enum getMotDesICMS();
                      
                      /**
                       * Gets (as xml) the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS xgetMotDesICMS();
                      
                      /**
                       * True if has "motDesICMS" element
                       */
                      boolean isSetMotDesICMS();
                      
                      /**
                       * Sets the "motDesICMS" element
                       */
                      void setMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS.Enum motDesICMS);
                      
                      /**
                       * Sets (as xml) the "motDesICMS" element
                       */
                      void xsetMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS motDesICMS);
                      
                      /**
                       * Unsets the "motDesICMS" element
                       */
                      void unsetMotDesICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst2473elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_30 = Enum.forString("30");
                        
                        static final int INT_X_30 = Enum.INT_X_30;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_30
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_30 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("30", INT_X_30),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcst31f3elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML motDesICMS(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$MotDesICMS.
                       */
                      public interface MotDesICMS extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(MotDesICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("motdesicms30c7elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_6 = Enum.forString("6");
                        static final Enum X_7 = Enum.forString("7");
                        static final Enum X_9 = Enum.forString("9");
                        
                        static final int INT_X_6 = Enum.INT_X_6;
                        static final int INT_X_7 = Enum.INT_X_7;
                        static final int INT_X_9 = Enum.INT_X_9;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS30$MotDesICMS.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_6
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_6 = 1;
                          static final int INT_X_7 = 2;
                          static final int INT_X_9 = 3;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("6", INT_X_6),
                              new Enum("7", INT_X_7),
                              new Enum("9", INT_X_9),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS30) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS40(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS40 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS40.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms40aa22elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST cst);
                      
                      /**
                       * Gets the "vICMSDeson" element
                       */
                      java.lang.String getVICMSDeson();
                      
                      /**
                       * Gets (as xml) the "vICMSDeson" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                      
                      /**
                       * True if has "vICMSDeson" element
                       */
                      boolean isSetVICMSDeson();
                      
                      /**
                       * Sets the "vICMSDeson" element
                       */
                      void setVICMSDeson(java.lang.String vicmsDeson);
                      
                      /**
                       * Sets (as xml) the "vICMSDeson" element
                       */
                      void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                      
                      /**
                       * Unsets the "vICMSDeson" element
                       */
                      void unsetVICMSDeson();
                      
                      /**
                       * Gets the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS.Enum getMotDesICMS();
                      
                      /**
                       * Gets (as xml) the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS xgetMotDesICMS();
                      
                      /**
                       * True if has "motDesICMS" element
                       */
                      boolean isSetMotDesICMS();
                      
                      /**
                       * Sets the "motDesICMS" element
                       */
                      void setMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS.Enum motDesICMS);
                      
                      /**
                       * Sets (as xml) the "motDesICMS" element
                       */
                      void xsetMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS motDesICMS);
                      
                      /**
                       * Unsets the "motDesICMS" element
                       */
                      void unsetMotDesICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS40$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst51d2elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_40 = Enum.forString("40");
                        static final Enum X_41 = Enum.forString("41");
                        static final Enum X_50 = Enum.forString("50");
                        
                        static final int INT_X_40 = Enum.INT_X_40;
                        static final int INT_X_41 = Enum.INT_X_41;
                        static final int INT_X_50 = Enum.INT_X_50;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS40$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_40
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_40 = 1;
                          static final int INT_X_41 = 2;
                          static final int INT_X_50 = 3;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("40", INT_X_40),
                              new Enum("41", INT_X_41),
                              new Enum("50", INT_X_50),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML motDesICMS(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS40$MotDesICMS.
                       */
                      public interface MotDesICMS extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(MotDesICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("motdesicms5e26elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        static final Enum X_6 = Enum.forString("6");
                        static final Enum X_7 = Enum.forString("7");
                        static final Enum X_8 = Enum.forString("8");
                        static final Enum X_9 = Enum.forString("9");
                        static final Enum X_10 = Enum.forString("10");
                        static final Enum X_11 = Enum.forString("11");
                        
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        static final int INT_X_6 = Enum.INT_X_6;
                        static final int INT_X_7 = Enum.INT_X_7;
                        static final int INT_X_8 = Enum.INT_X_8;
                        static final int INT_X_9 = Enum.INT_X_9;
                        static final int INT_X_10 = Enum.INT_X_10;
                        static final int INT_X_11 = Enum.INT_X_11;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS40$MotDesICMS.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_1
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_1 = 1;
                          static final int INT_X_3 = 2;
                          static final int INT_X_4 = 3;
                          static final int INT_X_5 = 4;
                          static final int INT_X_6 = 5;
                          static final int INT_X_7 = 6;
                          static final int INT_X_8 = 7;
                          static final int INT_X_9 = 8;
                          static final int INT_X_10 = 9;
                          static final int INT_X_11 = 10;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("1", INT_X_1),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                              new Enum("6", INT_X_6),
                              new Enum("7", INT_X_7),
                              new Enum("8", INT_X_8),
                              new Enum("9", INT_X_9),
                              new Enum("10", INT_X_10),
                              new Enum("11", INT_X_11),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS40) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS51(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS51 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS51.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms510242elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC xgetModBC();
                      
                      /**
                       * True if has "modBC" element
                       */
                      boolean isSetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC modBC);
                      
                      /**
                       * Unsets the "modBC" element
                       */
                      void unsetModBC();
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBC();
                      
                      /**
                       * True if has "pRedBC" element
                       */
                      boolean isSetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBC);
                      
                      /**
                       * Unsets the "pRedBC" element
                       */
                      void unsetPRedBC();
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302Opc xgetVBC();
                      
                      /**
                       * True if has "vBC" element
                       */
                      boolean isSetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302Opc vbc);
                      
                      /**
                       * Unsets the "vBC" element
                       */
                      void unsetVBC();
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPICMS();
                      
                      /**
                       * True if has "pICMS" element
                       */
                      boolean isSetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04Opc picms);
                      
                      /**
                       * Unsets the "pICMS" element
                       */
                      void unsetPICMS();
                      
                      /**
                       * Gets the "vICMSOp" element
                       */
                      java.lang.String getVICMSOp();
                      
                      /**
                       * Gets (as xml) the "vICMSOp" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302Opc xgetVICMSOp();
                      
                      /**
                       * True if has "vICMSOp" element
                       */
                      boolean isSetVICMSOp();
                      
                      /**
                       * Sets the "vICMSOp" element
                       */
                      void setVICMSOp(java.lang.String vicmsOp);
                      
                      /**
                       * Sets (as xml) the "vICMSOp" element
                       */
                      void xsetVICMSOp(br.inf.portalfiscal.nfe.TDec1302Opc vicmsOp);
                      
                      /**
                       * Unsets the "vICMSOp" element
                       */
                      void unsetVICMSOp();
                      
                      /**
                       * Gets the "pDif" element
                       */
                      java.lang.String getPDif();
                      
                      /**
                       * Gets (as xml) the "pDif" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04OpcMax100 xgetPDif();
                      
                      /**
                       * True if has "pDif" element
                       */
                      boolean isSetPDif();
                      
                      /**
                       * Sets the "pDif" element
                       */
                      void setPDif(java.lang.String pDif);
                      
                      /**
                       * Sets (as xml) the "pDif" element
                       */
                      void xsetPDif(br.inf.portalfiscal.nfe.TDec0302A04OpcMax100 pDif);
                      
                      /**
                       * Unsets the "pDif" element
                       */
                      void unsetPDif();
                      
                      /**
                       * Gets the "vICMSDif" element
                       */
                      java.lang.String getVICMSDif();
                      
                      /**
                       * Gets (as xml) the "vICMSDif" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302Opc xgetVICMSDif();
                      
                      /**
                       * True if has "vICMSDif" element
                       */
                      boolean isSetVICMSDif();
                      
                      /**
                       * Sets the "vICMSDif" element
                       */
                      void setVICMSDif(java.lang.String vicmsDif);
                      
                      /**
                       * Sets (as xml) the "vICMSDif" element
                       */
                      void xsetVICMSDif(br.inf.portalfiscal.nfe.TDec1302Opc vicmsDif);
                      
                      /**
                       * Unsets the "vICMSDif" element
                       */
                      void unsetVICMSDif();
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302Opc xgetVICMS();
                      
                      /**
                       * True if has "vICMS" element
                       */
                      boolean isSetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302Opc vicms);
                      
                      /**
                       * Unsets the "vICMS" element
                       */
                      void unsetVICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS51$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csta9f2elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_51 = Enum.forString("51");
                        
                        static final int INT_X_51 = Enum.INT_X_51;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS51$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_51
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_51 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("51", INT_X_51),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS51$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbca8b3elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS51$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS51) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS60(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS60 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS60.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms6004e0elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST cst);
                      
                      /**
                       * Gets the "vBCSTRet" element
                       */
                      java.lang.String getVBCSTRet();
                      
                      /**
                       * Gets (as xml) the "vBCSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCSTRet();
                      
                      /**
                       * True if has "vBCSTRet" element
                       */
                      boolean isSetVBCSTRet();
                      
                      /**
                       * Sets the "vBCSTRet" element
                       */
                      void setVBCSTRet(java.lang.String vbcstRet);
                      
                      /**
                       * Sets (as xml) the "vBCSTRet" element
                       */
                      void xsetVBCSTRet(br.inf.portalfiscal.nfe.TDec1302 vbcstRet);
                      
                      /**
                       * Unsets the "vBCSTRet" element
                       */
                      void unsetVBCSTRet();
                      
                      /**
                       * Gets the "vICMSSTRet" element
                       */
                      java.lang.String getVICMSSTRet();
                      
                      /**
                       * Gets (as xml) the "vICMSSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSSTRet();
                      
                      /**
                       * True if has "vICMSSTRet" element
                       */
                      boolean isSetVICMSSTRet();
                      
                      /**
                       * Sets the "vICMSSTRet" element
                       */
                      void setVICMSSTRet(java.lang.String vicmsstRet);
                      
                      /**
                       * Sets (as xml) the "vICMSSTRet" element
                       */
                      void xsetVICMSSTRet(br.inf.portalfiscal.nfe.TDec1302 vicmsstRet);
                      
                      /**
                       * Unsets the "vICMSSTRet" element
                       */
                      void unsetVICMSSTRet();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS60$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstac90elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_60 = Enum.forString("60");
                        
                        static final int INT_X_60 = Enum.INT_X_60;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS60$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_60
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_60 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("60", INT_X_60),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS60) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS70(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS70 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS70.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms70323felemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC xgetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC modBC);
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04 pRedBC);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Gets the "vICMSDeson" element
                       */
                      java.lang.String getVICMSDeson();
                      
                      /**
                       * Gets (as xml) the "vICMSDeson" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                      
                      /**
                       * True if has "vICMSDeson" element
                       */
                      boolean isSetVICMSDeson();
                      
                      /**
                       * Sets the "vICMSDeson" element
                       */
                      void setVICMSDeson(java.lang.String vicmsDeson);
                      
                      /**
                       * Sets (as xml) the "vICMSDeson" element
                       */
                      void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                      
                      /**
                       * Unsets the "vICMSDeson" element
                       */
                      void unsetVICMSDeson();
                      
                      /**
                       * Gets the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS.Enum getMotDesICMS();
                      
                      /**
                       * Gets (as xml) the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS xgetMotDesICMS();
                      
                      /**
                       * True if has "motDesICMS" element
                       */
                      boolean isSetMotDesICMS();
                      
                      /**
                       * Sets the "motDesICMS" element
                       */
                      void setMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS.Enum motDesICMS);
                      
                      /**
                       * Sets (as xml) the "motDesICMS" element
                       */
                      void xsetMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS motDesICMS);
                      
                      /**
                       * Unsets the "motDesICMS" element
                       */
                      void unsetMotDesICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstd9efelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_70 = Enum.forString("70");
                        
                        static final int INT_X_70 = Enum.INT_X_70;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_70
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_70 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("70", INT_X_70),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcd8b0elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcste76felemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML motDesICMS(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$MotDesICMS.
                       */
                      public interface MotDesICMS extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(MotDesICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("motdesicmse643elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_9 = Enum.forString("9");
                        static final Enum X_12 = Enum.forString("12");
                        
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_9 = Enum.INT_X_9;
                        static final int INT_X_12 = Enum.INT_X_12;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS70$MotDesICMS.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_3
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_3 = 1;
                          static final int INT_X_9 = 2;
                          static final int INT_X_12 = 3;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("3", INT_X_3),
                              new Enum("9", INT_X_9),
                              new Enum("12", INT_X_12),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS70) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMS90(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMS90 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMS90.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icms908cfdelemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC xgetModBC();
                      
                      /**
                       * True if has "modBC" element
                       */
                      boolean isSetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC modBC);
                      
                      /**
                       * Unsets the "modBC" element
                       */
                      void unsetModBC();
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * True if has "vBC" element
                       */
                      boolean isSetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Unsets the "vBC" element
                       */
                      void unsetVBC();
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBC();
                      
                      /**
                       * True if has "pRedBC" element
                       */
                      boolean isSetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBC);
                      
                      /**
                       * Unsets the "pRedBC" element
                       */
                      void unsetPRedBC();
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * True if has "pICMS" element
                       */
                      boolean isSetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Unsets the "pICMS" element
                       */
                      void unsetPICMS();
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * True if has "vICMS" element
                       */
                      boolean isSetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Unsets the "vICMS" element
                       */
                      void unsetVICMS();
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST xgetModBCST();
                      
                      /**
                       * True if has "modBCST" element
                       */
                      boolean isSetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST modBCST);
                      
                      /**
                       * Unsets the "modBCST" element
                       */
                      void unsetModBCST();
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * True if has "vBCST" element
                       */
                      boolean isSetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Unsets the "vBCST" element
                       */
                      void unsetVBCST();
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * True if has "pICMSST" element
                       */
                      boolean isSetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Unsets the "pICMSST" element
                       */
                      void unsetPICMSST();
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * True if has "vICMSST" element
                       */
                      boolean isSetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Unsets the "vICMSST" element
                       */
                      void unsetVICMSST();
                      
                      /**
                       * Gets the "vICMSDeson" element
                       */
                      java.lang.String getVICMSDeson();
                      
                      /**
                       * Gets (as xml) the "vICMSDeson" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                      
                      /**
                       * True if has "vICMSDeson" element
                       */
                      boolean isSetVICMSDeson();
                      
                      /**
                       * Sets the "vICMSDeson" element
                       */
                      void setVICMSDeson(java.lang.String vicmsDeson);
                      
                      /**
                       * Sets (as xml) the "vICMSDeson" element
                       */
                      void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                      
                      /**
                       * Unsets the "vICMSDeson" element
                       */
                      void unsetVICMSDeson();
                      
                      /**
                       * Gets the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS.Enum getMotDesICMS();
                      
                      /**
                       * Gets (as xml) the "motDesICMS" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS xgetMotDesICMS();
                      
                      /**
                       * True if has "motDesICMS" element
                       */
                      boolean isSetMotDesICMS();
                      
                      /**
                       * Sets the "motDesICMS" element
                       */
                      void setMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS.Enum motDesICMS);
                      
                      /**
                       * Sets (as xml) the "motDesICMS" element
                       */
                      void xsetMotDesICMS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS motDesICMS);
                      
                      /**
                       * Unsets the "motDesICMS" element
                       */
                      void unsetMotDesICMS();
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst34adelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_90 = Enum.forString("90");
                        
                        static final int INT_X_90 = Enum.INT_X_90;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_90
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_90 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("90", INT_X_90),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbc336eelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcst422delemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML motDesICMS(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$MotDesICMS.
                       */
                      public interface MotDesICMS extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(MotDesICMS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("motdesicms4101elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_9 = Enum.forString("9");
                        static final Enum X_12 = Enum.forString("12");
                        
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_9 = Enum.INT_X_9;
                        static final int INT_X_12 = Enum.INT_X_12;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMS90$MotDesICMS.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_3
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_3 = 1;
                          static final int INT_X_9 = 2;
                          static final int INT_X_12 = 3;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("3", INT_X_3),
                              new Enum("9", INT_X_9),
                              new Enum("12", INT_X_12),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90.MotDesICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMS90) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSPart(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSPart extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSPart.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmspart9cf9elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST cst);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC xgetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC modBC);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBC();
                      
                      /**
                       * True if has "pRedBC" element
                       */
                      boolean isSetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBC);
                      
                      /**
                       * Unsets the "pRedBC" element
                       */
                      void unsetPRedBC();
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Gets the "pBCOp" element
                       */
                      java.lang.String getPBCOp();
                      
                      /**
                       * Gets (as xml) the "pBCOp" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPBCOp();
                      
                      /**
                       * Sets the "pBCOp" element
                       */
                      void setPBCOp(java.lang.String pbcOp);
                      
                      /**
                       * Sets (as xml) the "pBCOp" element
                       */
                      void xsetPBCOp(br.inf.portalfiscal.nfe.TDec0302A04Opc pbcOp);
                      
                      /**
                       * Gets the "UFST" element
                       */
                      br.inf.portalfiscal.nfe.TUf.Enum getUFST();
                      
                      /**
                       * Gets (as xml) the "UFST" element
                       */
                      br.inf.portalfiscal.nfe.TUf xgetUFST();
                      
                      /**
                       * Sets the "UFST" element
                       */
                      void setUFST(br.inf.portalfiscal.nfe.TUf.Enum ufst);
                      
                      /**
                       * Sets (as xml) the "UFST" element
                       */
                      void xsetUFST(br.inf.portalfiscal.nfe.TUf ufst);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst18a9elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_10 = Enum.forString("10");
                        static final Enum X_90 = Enum.forString("90");
                        
                        static final int INT_X_10 = Enum.INT_X_10;
                        static final int INT_X_90 = Enum.INT_X_90;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_10
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_10 = 1;
                          static final int INT_X_90 = 2;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("10", INT_X_10),
                              new Enum("90", INT_X_90),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbc6b2aelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcstc629elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSPart$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSPart) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSST(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSST extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmsst2bc7elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST cst);
                      
                      /**
                       * Gets the "vBCSTRet" element
                       */
                      java.lang.String getVBCSTRet();
                      
                      /**
                       * Gets (as xml) the "vBCSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCSTRet();
                      
                      /**
                       * Sets the "vBCSTRet" element
                       */
                      void setVBCSTRet(java.lang.String vbcstRet);
                      
                      /**
                       * Sets (as xml) the "vBCSTRet" element
                       */
                      void xsetVBCSTRet(br.inf.portalfiscal.nfe.TDec1302 vbcstRet);
                      
                      /**
                       * Gets the "vICMSSTRet" element
                       */
                      java.lang.String getVICMSSTRet();
                      
                      /**
                       * Gets (as xml) the "vICMSSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSSTRet();
                      
                      /**
                       * Sets the "vICMSSTRet" element
                       */
                      void setVICMSSTRet(java.lang.String vicmsstRet);
                      
                      /**
                       * Sets (as xml) the "vICMSSTRet" element
                       */
                      void xsetVICMSSTRet(br.inf.portalfiscal.nfe.TDec1302 vicmsstRet);
                      
                      /**
                       * Gets the "vBCSTDest" element
                       */
                      java.lang.String getVBCSTDest();
                      
                      /**
                       * Gets (as xml) the "vBCSTDest" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCSTDest();
                      
                      /**
                       * Sets the "vBCSTDest" element
                       */
                      void setVBCSTDest(java.lang.String vbcstDest);
                      
                      /**
                       * Sets (as xml) the "vBCSTDest" element
                       */
                      void xsetVBCSTDest(br.inf.portalfiscal.nfe.TDec1302 vbcstDest);
                      
                      /**
                       * Gets the "vICMSSTDest" element
                       */
                      java.lang.String getVICMSSTDest();
                      
                      /**
                       * Gets (as xml) the "vICMSSTDest" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSSTDest();
                      
                      /**
                       * Sets the "vICMSSTDest" element
                       */
                      void setVICMSSTDest(java.lang.String vicmsstDest);
                      
                      /**
                       * Sets (as xml) the "vICMSSTDest" element
                       */
                      void xsetVICMSSTDest(br.inf.portalfiscal.nfe.TDec1302 vicmsstDest);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSST$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstd377elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_41 = Enum.forString("41");
                        
                        static final int INT_X_41 = Enum.INT_X_41;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSST$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_41
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_41 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("41", INT_X_41),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN101(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN101 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN101.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn10166edelemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN csosn);
                      
                      /**
                       * Gets the "pCredSN" element
                       */
                      java.lang.String getPCredSN();
                      
                      /**
                       * Gets (as xml) the "pCredSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPCredSN();
                      
                      /**
                       * Sets the "pCredSN" element
                       */
                      void setPCredSN(java.lang.String pCredSN);
                      
                      /**
                       * Sets (as xml) the "pCredSN" element
                       */
                      void xsetPCredSN(br.inf.portalfiscal.nfe.TDec0302A04 pCredSN);
                      
                      /**
                       * Gets the "vCredICMSSN" element
                       */
                      java.lang.String getVCredICMSSN();
                      
                      /**
                       * Gets (as xml) the "vCredICMSSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCredICMSSN();
                      
                      /**
                       * Sets the "vCredICMSSN" element
                       */
                      void setVCredICMSSN(java.lang.String vCredICMSSN);
                      
                      /**
                       * Sets (as xml) the "vCredICMSSN" element
                       */
                      void xsetVCredICMSSN(br.inf.portalfiscal.nfe.TDec1302 vCredICMSSN);
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN101$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosn1153elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_101 = Enum.forString("101");
                        
                        static final int INT_X_101 = Enum.INT_X_101;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN101$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_101
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_101 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("101", INT_X_101),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN101) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN102(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN102 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN102.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn10291aeelemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN csosn);
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN102$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosn3c14elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_102 = Enum.forString("102");
                        static final Enum X_103 = Enum.forString("103");
                        static final Enum X_300 = Enum.forString("300");
                        static final Enum X_400 = Enum.forString("400");
                        
                        static final int INT_X_102 = Enum.INT_X_102;
                        static final int INT_X_103 = Enum.INT_X_103;
                        static final int INT_X_300 = Enum.INT_X_300;
                        static final int INT_X_400 = Enum.INT_X_400;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN102$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_102
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_102 = 1;
                          static final int INT_X_103 = 2;
                          static final int INT_X_300 = 3;
                          static final int INT_X_400 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("102", INT_X_102),
                              new Enum("103", INT_X_103),
                              new Enum("300", INT_X_300),
                              new Enum("400", INT_X_400),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN102) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN201(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN201 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN201.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn201e56eelemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN csosn);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Gets the "pCredSN" element
                       */
                      java.lang.String getPCredSN();
                      
                      /**
                       * Gets (as xml) the "pCredSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPCredSN();
                      
                      /**
                       * Sets the "pCredSN" element
                       */
                      void setPCredSN(java.lang.String pCredSN);
                      
                      /**
                       * Sets (as xml) the "pCredSN" element
                       */
                      void xsetPCredSN(br.inf.portalfiscal.nfe.TDec0302A04 pCredSN);
                      
                      /**
                       * Gets the "vCredICMSSN" element
                       */
                      java.lang.String getVCredICMSSN();
                      
                      /**
                       * Gets (as xml) the "vCredICMSSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCredICMSSN();
                      
                      /**
                       * Sets the "vCredICMSSN" element
                       */
                      void setVCredICMSSN(java.lang.String vCredICMSSN);
                      
                      /**
                       * Sets (as xml) the "vCredICMSSN" element
                       */
                      void xsetVCredICMSSN(br.inf.portalfiscal.nfe.TDec1302 vCredICMSSN);
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN201$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosn8fd4elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_201 = Enum.forString("201");
                        
                        static final int INT_X_201 = Enum.INT_X_201;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN201$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_201
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_201 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("201", INT_X_201),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN201$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcste23eelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN201$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN201) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN202(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN202 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN202.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn202102felemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN csosn);
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST xgetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST modBCST);
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN202$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosnba95elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_202 = Enum.forString("202");
                        static final Enum X_203 = Enum.forString("203");
                        
                        static final int INT_X_202 = Enum.INT_X_202;
                        static final int INT_X_203 = Enum.INT_X_203;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN202$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_202
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_202 = 1;
                          static final int INT_X_203 = 2;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("202", INT_X_202),
                              new Enum("203", INT_X_203),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN202$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcst0cffelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN202$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN202) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN500(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN500 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN500.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn5003630elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN csosn);
                      
                      /**
                       * Gets the "vBCSTRet" element
                       */
                      java.lang.String getVBCSTRet();
                      
                      /**
                       * Gets (as xml) the "vBCSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCSTRet();
                      
                      /**
                       * True if has "vBCSTRet" element
                       */
                      boolean isSetVBCSTRet();
                      
                      /**
                       * Sets the "vBCSTRet" element
                       */
                      void setVBCSTRet(java.lang.String vbcstRet);
                      
                      /**
                       * Sets (as xml) the "vBCSTRet" element
                       */
                      void xsetVBCSTRet(br.inf.portalfiscal.nfe.TDec1302 vbcstRet);
                      
                      /**
                       * Unsets the "vBCSTRet" element
                       */
                      void unsetVBCSTRet();
                      
                      /**
                       * Gets the "vICMSSTRet" element
                       */
                      java.lang.String getVICMSSTRet();
                      
                      /**
                       * Gets (as xml) the "vICMSSTRet" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSSTRet();
                      
                      /**
                       * True if has "vICMSSTRet" element
                       */
                      boolean isSetVICMSSTRet();
                      
                      /**
                       * Sets the "vICMSSTRet" element
                       */
                      void setVICMSSTRet(java.lang.String vicmsstRet);
                      
                      /**
                       * Sets (as xml) the "vICMSSTRet" element
                       */
                      void xsetVICMSSTRet(br.inf.portalfiscal.nfe.TDec1302 vicmsstRet);
                      
                      /**
                       * Unsets the "vICMSSTRet" element
                       */
                      void unsetVICMSSTRet();
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN500$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosne096elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_500 = Enum.forString("500");
                        
                        static final int INT_X_500 = Enum.INT_X_500;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN500$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_500
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_500 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("500", INT_X_500),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN500) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML ICMSSN900(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface ICMSSN900 extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSSN900.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmssn9003034elemtype");
                      
                      /**
                       * Gets the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig.Enum getOrig();
                      
                      /**
                       * Gets (as xml) the "orig" element
                       */
                      br.inf.portalfiscal.nfe.Torig xgetOrig();
                      
                      /**
                       * Sets the "orig" element
                       */
                      void setOrig(br.inf.portalfiscal.nfe.Torig.Enum orig);
                      
                      /**
                       * Sets (as xml) the "orig" element
                       */
                      void xsetOrig(br.inf.portalfiscal.nfe.Torig orig);
                      
                      /**
                       * Gets the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN.Enum getCSOSN();
                      
                      /**
                       * Gets (as xml) the "CSOSN" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN xgetCSOSN();
                      
                      /**
                       * Sets the "CSOSN" element
                       */
                      void setCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN.Enum csosn);
                      
                      /**
                       * Sets (as xml) the "CSOSN" element
                       */
                      void xsetCSOSN(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN csosn);
                      
                      /**
                       * Gets the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC.Enum getModBC();
                      
                      /**
                       * Gets (as xml) the "modBC" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC xgetModBC();
                      
                      /**
                       * True if has "modBC" element
                       */
                      boolean isSetModBC();
                      
                      /**
                       * Sets the "modBC" element
                       */
                      void setModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC.Enum modBC);
                      
                      /**
                       * Sets (as xml) the "modBC" element
                       */
                      void xsetModBC(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC modBC);
                      
                      /**
                       * Unsets the "modBC" element
                       */
                      void unsetModBC();
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * True if has "vBC" element
                       */
                      boolean isSetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Unsets the "vBC" element
                       */
                      void unsetVBC();
                      
                      /**
                       * Gets the "pRedBC" element
                       */
                      java.lang.String getPRedBC();
                      
                      /**
                       * Gets (as xml) the "pRedBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBC();
                      
                      /**
                       * True if has "pRedBC" element
                       */
                      boolean isSetPRedBC();
                      
                      /**
                       * Sets the "pRedBC" element
                       */
                      void setPRedBC(java.lang.String pRedBC);
                      
                      /**
                       * Sets (as xml) the "pRedBC" element
                       */
                      void xsetPRedBC(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBC);
                      
                      /**
                       * Unsets the "pRedBC" element
                       */
                      void unsetPRedBC();
                      
                      /**
                       * Gets the "pICMS" element
                       */
                      java.lang.String getPICMS();
                      
                      /**
                       * Gets (as xml) the "pICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMS();
                      
                      /**
                       * True if has "pICMS" element
                       */
                      boolean isSetPICMS();
                      
                      /**
                       * Sets the "pICMS" element
                       */
                      void setPICMS(java.lang.String picms);
                      
                      /**
                       * Sets (as xml) the "pICMS" element
                       */
                      void xsetPICMS(br.inf.portalfiscal.nfe.TDec0302A04 picms);
                      
                      /**
                       * Unsets the "pICMS" element
                       */
                      void unsetPICMS();
                      
                      /**
                       * Gets the "vICMS" element
                       */
                      java.lang.String getVICMS();
                      
                      /**
                       * Gets (as xml) the "vICMS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                      
                      /**
                       * True if has "vICMS" element
                       */
                      boolean isSetVICMS();
                      
                      /**
                       * Sets the "vICMS" element
                       */
                      void setVICMS(java.lang.String vicms);
                      
                      /**
                       * Sets (as xml) the "vICMS" element
                       */
                      void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                      
                      /**
                       * Unsets the "vICMS" element
                       */
                      void unsetVICMS();
                      
                      /**
                       * Gets the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST.Enum getModBCST();
                      
                      /**
                       * Gets (as xml) the "modBCST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST xgetModBCST();
                      
                      /**
                       * True if has "modBCST" element
                       */
                      boolean isSetModBCST();
                      
                      /**
                       * Sets the "modBCST" element
                       */
                      void setModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST.Enum modBCST);
                      
                      /**
                       * Sets (as xml) the "modBCST" element
                       */
                      void xsetModBCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST modBCST);
                      
                      /**
                       * Unsets the "modBCST" element
                       */
                      void unsetModBCST();
                      
                      /**
                       * Gets the "pMVAST" element
                       */
                      java.lang.String getPMVAST();
                      
                      /**
                       * Gets (as xml) the "pMVAST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPMVAST();
                      
                      /**
                       * True if has "pMVAST" element
                       */
                      boolean isSetPMVAST();
                      
                      /**
                       * Sets the "pMVAST" element
                       */
                      void setPMVAST(java.lang.String pmvast);
                      
                      /**
                       * Sets (as xml) the "pMVAST" element
                       */
                      void xsetPMVAST(br.inf.portalfiscal.nfe.TDec0302A04Opc pmvast);
                      
                      /**
                       * Unsets the "pMVAST" element
                       */
                      void unsetPMVAST();
                      
                      /**
                       * Gets the "pRedBCST" element
                       */
                      java.lang.String getPRedBCST();
                      
                      /**
                       * Gets (as xml) the "pRedBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04Opc xgetPRedBCST();
                      
                      /**
                       * True if has "pRedBCST" element
                       */
                      boolean isSetPRedBCST();
                      
                      /**
                       * Sets the "pRedBCST" element
                       */
                      void setPRedBCST(java.lang.String pRedBCST);
                      
                      /**
                       * Sets (as xml) the "pRedBCST" element
                       */
                      void xsetPRedBCST(br.inf.portalfiscal.nfe.TDec0302A04Opc pRedBCST);
                      
                      /**
                       * Unsets the "pRedBCST" element
                       */
                      void unsetPRedBCST();
                      
                      /**
                       * Gets the "vBCST" element
                       */
                      java.lang.String getVBCST();
                      
                      /**
                       * Gets (as xml) the "vBCST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                      
                      /**
                       * True if has "vBCST" element
                       */
                      boolean isSetVBCST();
                      
                      /**
                       * Sets the "vBCST" element
                       */
                      void setVBCST(java.lang.String vbcst);
                      
                      /**
                       * Sets (as xml) the "vBCST" element
                       */
                      void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                      
                      /**
                       * Unsets the "vBCST" element
                       */
                      void unsetVBCST();
                      
                      /**
                       * Gets the "pICMSST" element
                       */
                      java.lang.String getPICMSST();
                      
                      /**
                       * Gets (as xml) the "pICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSST();
                      
                      /**
                       * True if has "pICMSST" element
                       */
                      boolean isSetPICMSST();
                      
                      /**
                       * Sets the "pICMSST" element
                       */
                      void setPICMSST(java.lang.String picmsst);
                      
                      /**
                       * Sets (as xml) the "pICMSST" element
                       */
                      void xsetPICMSST(br.inf.portalfiscal.nfe.TDec0302A04 picmsst);
                      
                      /**
                       * Unsets the "pICMSST" element
                       */
                      void unsetPICMSST();
                      
                      /**
                       * Gets the "vICMSST" element
                       */
                      java.lang.String getVICMSST();
                      
                      /**
                       * Gets (as xml) the "vICMSST" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVICMSST();
                      
                      /**
                       * True if has "vICMSST" element
                       */
                      boolean isSetVICMSST();
                      
                      /**
                       * Sets the "vICMSST" element
                       */
                      void setVICMSST(java.lang.String vicmsst);
                      
                      /**
                       * Sets (as xml) the "vICMSST" element
                       */
                      void xsetVICMSST(br.inf.portalfiscal.nfe.TDec1302 vicmsst);
                      
                      /**
                       * Unsets the "vICMSST" element
                       */
                      void unsetVICMSST();
                      
                      /**
                       * Gets the "pCredSN" element
                       */
                      java.lang.String getPCredSN();
                      
                      /**
                       * Gets (as xml) the "pCredSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPCredSN();
                      
                      /**
                       * True if has "pCredSN" element
                       */
                      boolean isSetPCredSN();
                      
                      /**
                       * Sets the "pCredSN" element
                       */
                      void setPCredSN(java.lang.String pCredSN);
                      
                      /**
                       * Sets (as xml) the "pCredSN" element
                       */
                      void xsetPCredSN(br.inf.portalfiscal.nfe.TDec0302A04 pCredSN);
                      
                      /**
                       * Unsets the "pCredSN" element
                       */
                      void unsetPCredSN();
                      
                      /**
                       * Gets the "vCredICMSSN" element
                       */
                      java.lang.String getVCredICMSSN();
                      
                      /**
                       * Gets (as xml) the "vCredICMSSN" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCredICMSSN();
                      
                      /**
                       * True if has "vCredICMSSN" element
                       */
                      boolean isSetVCredICMSSN();
                      
                      /**
                       * Sets the "vCredICMSSN" element
                       */
                      void setVCredICMSSN(java.lang.String vCredICMSSN);
                      
                      /**
                       * Sets (as xml) the "vCredICMSSN" element
                       */
                      void xsetVCredICMSSN(br.inf.portalfiscal.nfe.TDec1302 vCredICMSSN);
                      
                      /**
                       * Unsets the "vCredICMSSN" element
                       */
                      void unsetVCredICMSSN();
                      
                      /**
                       * An XML CSOSN(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$CSOSN.
                       */
                      public interface CSOSN extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CSOSN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csosnda9aelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_900 = Enum.forString("900");
                        
                        static final int INT_X_900 = Enum.INT_X_900;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$CSOSN.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_900
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_900 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("900", INT_X_900),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.CSOSN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBC(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$ModBC.
                       */
                      public interface ModBC extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBC.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbc2823elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$ModBC.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBC) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * An XML modBCST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$ModBCST.
                       */
                      public interface ModBCST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModBCST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modbcst2d04elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_0 = Enum.forString("0");
                        static final Enum X_1 = Enum.forString("1");
                        static final Enum X_2 = Enum.forString("2");
                        static final Enum X_3 = Enum.forString("3");
                        static final Enum X_4 = Enum.forString("4");
                        static final Enum X_5 = Enum.forString("5");
                        
                        static final int INT_X_0 = Enum.INT_X_0;
                        static final int INT_X_1 = Enum.INT_X_1;
                        static final int INT_X_2 = Enum.INT_X_2;
                        static final int INT_X_3 = Enum.INT_X_3;
                        static final int INT_X_4 = Enum.INT_X_4;
                        static final int INT_X_5 = Enum.INT_X_5;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ICMS$ICMSSN900$ModBCST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_0
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_0 = 1;
                          static final int INT_X_1 = 2;
                          static final int INT_X_2 = 3;
                          static final int INT_X_3 = 4;
                          static final int INT_X_4 = 5;
                          static final int INT_X_5 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("0", INT_X_0),
                              new Enum("1", INT_X_1),
                              new Enum("2", INT_X_2),
                              new Enum("3", INT_X_3),
                              new Enum("4", INT_X_4),
                              new Enum("5", INT_X_5),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900.ModBCST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900 newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900 newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS.ICMSSN900) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ICMS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML II(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface II extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(II.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ii4feaelemtype");
                    
                    /**
                     * Gets the "vBC" element
                     */
                    java.lang.String getVBC();
                    
                    /**
                     * Gets (as xml) the "vBC" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                    
                    /**
                     * Sets the "vBC" element
                     */
                    void setVBC(java.lang.String vbc);
                    
                    /**
                     * Sets (as xml) the "vBC" element
                     */
                    void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                    
                    /**
                     * Gets the "vDespAdu" element
                     */
                    java.lang.String getVDespAdu();
                    
                    /**
                     * Gets (as xml) the "vDespAdu" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVDespAdu();
                    
                    /**
                     * Sets the "vDespAdu" element
                     */
                    void setVDespAdu(java.lang.String vDespAdu);
                    
                    /**
                     * Sets (as xml) the "vDespAdu" element
                     */
                    void xsetVDespAdu(br.inf.portalfiscal.nfe.TDec1302 vDespAdu);
                    
                    /**
                     * Gets the "vII" element
                     */
                    java.lang.String getVII();
                    
                    /**
                     * Gets (as xml) the "vII" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVII();
                    
                    /**
                     * Sets the "vII" element
                     */
                    void setVII(java.lang.String vii);
                    
                    /**
                     * Sets (as xml) the "vII" element
                     */
                    void xsetVII(br.inf.portalfiscal.nfe.TDec1302 vii);
                    
                    /**
                     * Gets the "vIOF" element
                     */
                    java.lang.String getVIOF();
                    
                    /**
                     * Gets (as xml) the "vIOF" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVIOF();
                    
                    /**
                     * Sets the "vIOF" element
                     */
                    void setVIOF(java.lang.String viof);
                    
                    /**
                     * Sets (as xml) the "vIOF" element
                     */
                    void xsetVIOF(br.inf.portalfiscal.nfe.TDec1302 viof);
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.II) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML ISSQN(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface ISSQN extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ISSQN.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("issqn9934elemtype");
                    
                    /**
                     * Gets the "vBC" element
                     */
                    java.lang.String getVBC();
                    
                    /**
                     * Gets (as xml) the "vBC" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                    
                    /**
                     * Sets the "vBC" element
                     */
                    void setVBC(java.lang.String vbc);
                    
                    /**
                     * Sets (as xml) the "vBC" element
                     */
                    void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                    
                    /**
                     * Gets the "vAliq" element
                     */
                    java.lang.String getVAliq();
                    
                    /**
                     * Gets (as xml) the "vAliq" element
                     */
                    br.inf.portalfiscal.nfe.TDec0302A04 xgetVAliq();
                    
                    /**
                     * Sets the "vAliq" element
                     */
                    void setVAliq(java.lang.String vAliq);
                    
                    /**
                     * Sets (as xml) the "vAliq" element
                     */
                    void xsetVAliq(br.inf.portalfiscal.nfe.TDec0302A04 vAliq);
                    
                    /**
                     * Gets the "vISSQN" element
                     */
                    java.lang.String getVISSQN();
                    
                    /**
                     * Gets (as xml) the "vISSQN" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVISSQN();
                    
                    /**
                     * Sets the "vISSQN" element
                     */
                    void setVISSQN(java.lang.String vissqn);
                    
                    /**
                     * Sets (as xml) the "vISSQN" element
                     */
                    void xsetVISSQN(br.inf.portalfiscal.nfe.TDec1302 vissqn);
                    
                    /**
                     * Gets the "cMunFG" element
                     */
                    java.lang.String getCMunFG();
                    
                    /**
                     * Gets (as xml) the "cMunFG" element
                     */
                    br.inf.portalfiscal.nfe.TCodMunIBGE xgetCMunFG();
                    
                    /**
                     * Sets the "cMunFG" element
                     */
                    void setCMunFG(java.lang.String cMunFG);
                    
                    /**
                     * Sets (as xml) the "cMunFG" element
                     */
                    void xsetCMunFG(br.inf.portalfiscal.nfe.TCodMunIBGE cMunFG);
                    
                    /**
                     * Gets the "cListServ" element
                     */
                    br.inf.portalfiscal.nfe.TCListServ.Enum getCListServ();
                    
                    /**
                     * Gets (as xml) the "cListServ" element
                     */
                    br.inf.portalfiscal.nfe.TCListServ xgetCListServ();
                    
                    /**
                     * Sets the "cListServ" element
                     */
                    void setCListServ(br.inf.portalfiscal.nfe.TCListServ.Enum cListServ);
                    
                    /**
                     * Sets (as xml) the "cListServ" element
                     */
                    void xsetCListServ(br.inf.portalfiscal.nfe.TCListServ cListServ);
                    
                    /**
                     * Gets the "vDeducao" element
                     */
                    java.lang.String getVDeducao();
                    
                    /**
                     * Gets (as xml) the "vDeducao" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVDeducao();
                    
                    /**
                     * True if has "vDeducao" element
                     */
                    boolean isSetVDeducao();
                    
                    /**
                     * Sets the "vDeducao" element
                     */
                    void setVDeducao(java.lang.String vDeducao);
                    
                    /**
                     * Sets (as xml) the "vDeducao" element
                     */
                    void xsetVDeducao(br.inf.portalfiscal.nfe.TDec1302Opc vDeducao);
                    
                    /**
                     * Unsets the "vDeducao" element
                     */
                    void unsetVDeducao();
                    
                    /**
                     * Gets the "vOutro" element
                     */
                    java.lang.String getVOutro();
                    
                    /**
                     * Gets (as xml) the "vOutro" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVOutro();
                    
                    /**
                     * True if has "vOutro" element
                     */
                    boolean isSetVOutro();
                    
                    /**
                     * Sets the "vOutro" element
                     */
                    void setVOutro(java.lang.String vOutro);
                    
                    /**
                     * Sets (as xml) the "vOutro" element
                     */
                    void xsetVOutro(br.inf.portalfiscal.nfe.TDec1302Opc vOutro);
                    
                    /**
                     * Unsets the "vOutro" element
                     */
                    void unsetVOutro();
                    
                    /**
                     * Gets the "vDescIncond" element
                     */
                    java.lang.String getVDescIncond();
                    
                    /**
                     * Gets (as xml) the "vDescIncond" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVDescIncond();
                    
                    /**
                     * True if has "vDescIncond" element
                     */
                    boolean isSetVDescIncond();
                    
                    /**
                     * Sets the "vDescIncond" element
                     */
                    void setVDescIncond(java.lang.String vDescIncond);
                    
                    /**
                     * Sets (as xml) the "vDescIncond" element
                     */
                    void xsetVDescIncond(br.inf.portalfiscal.nfe.TDec1302Opc vDescIncond);
                    
                    /**
                     * Unsets the "vDescIncond" element
                     */
                    void unsetVDescIncond();
                    
                    /**
                     * Gets the "vDescCond" element
                     */
                    java.lang.String getVDescCond();
                    
                    /**
                     * Gets (as xml) the "vDescCond" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVDescCond();
                    
                    /**
                     * True if has "vDescCond" element
                     */
                    boolean isSetVDescCond();
                    
                    /**
                     * Sets the "vDescCond" element
                     */
                    void setVDescCond(java.lang.String vDescCond);
                    
                    /**
                     * Sets (as xml) the "vDescCond" element
                     */
                    void xsetVDescCond(br.inf.portalfiscal.nfe.TDec1302Opc vDescCond);
                    
                    /**
                     * Unsets the "vDescCond" element
                     */
                    void unsetVDescCond();
                    
                    /**
                     * Gets the "vISSRet" element
                     */
                    java.lang.String getVISSRet();
                    
                    /**
                     * Gets (as xml) the "vISSRet" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVISSRet();
                    
                    /**
                     * True if has "vISSRet" element
                     */
                    boolean isSetVISSRet();
                    
                    /**
                     * Sets the "vISSRet" element
                     */
                    void setVISSRet(java.lang.String vissRet);
                    
                    /**
                     * Sets (as xml) the "vISSRet" element
                     */
                    void xsetVISSRet(br.inf.portalfiscal.nfe.TDec1302Opc vissRet);
                    
                    /**
                     * Unsets the "vISSRet" element
                     */
                    void unsetVISSRet();
                    
                    /**
                     * Gets the "indISS" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS.Enum getIndISS();
                    
                    /**
                     * Gets (as xml) the "indISS" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS xgetIndISS();
                    
                    /**
                     * Sets the "indISS" element
                     */
                    void setIndISS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS.Enum indISS);
                    
                    /**
                     * Sets (as xml) the "indISS" element
                     */
                    void xsetIndISS(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS indISS);
                    
                    /**
                     * Gets the "cServico" element
                     */
                    java.lang.String getCServico();
                    
                    /**
                     * Gets (as xml) the "cServico" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico xgetCServico();
                    
                    /**
                     * True if has "cServico" element
                     */
                    boolean isSetCServico();
                    
                    /**
                     * Sets the "cServico" element
                     */
                    void setCServico(java.lang.String cServico);
                    
                    /**
                     * Sets (as xml) the "cServico" element
                     */
                    void xsetCServico(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico cServico);
                    
                    /**
                     * Unsets the "cServico" element
                     */
                    void unsetCServico();
                    
                    /**
                     * Gets the "cMun" element
                     */
                    java.lang.String getCMun();
                    
                    /**
                     * Gets (as xml) the "cMun" element
                     */
                    br.inf.portalfiscal.nfe.TCodMunIBGE xgetCMun();
                    
                    /**
                     * True if has "cMun" element
                     */
                    boolean isSetCMun();
                    
                    /**
                     * Sets the "cMun" element
                     */
                    void setCMun(java.lang.String cMun);
                    
                    /**
                     * Sets (as xml) the "cMun" element
                     */
                    void xsetCMun(br.inf.portalfiscal.nfe.TCodMunIBGE cMun);
                    
                    /**
                     * Unsets the "cMun" element
                     */
                    void unsetCMun();
                    
                    /**
                     * Gets the "cPais" element
                     */
                    br.inf.portalfiscal.nfe.Tpais.Enum getCPais();
                    
                    /**
                     * Gets (as xml) the "cPais" element
                     */
                    br.inf.portalfiscal.nfe.Tpais xgetCPais();
                    
                    /**
                     * True if has "cPais" element
                     */
                    boolean isSetCPais();
                    
                    /**
                     * Sets the "cPais" element
                     */
                    void setCPais(br.inf.portalfiscal.nfe.Tpais.Enum cPais);
                    
                    /**
                     * Sets (as xml) the "cPais" element
                     */
                    void xsetCPais(br.inf.portalfiscal.nfe.Tpais cPais);
                    
                    /**
                     * Unsets the "cPais" element
                     */
                    void unsetCPais();
                    
                    /**
                     * Gets the "nProcesso" element
                     */
                    java.lang.String getNProcesso();
                    
                    /**
                     * Gets (as xml) the "nProcesso" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso xgetNProcesso();
                    
                    /**
                     * True if has "nProcesso" element
                     */
                    boolean isSetNProcesso();
                    
                    /**
                     * Sets the "nProcesso" element
                     */
                    void setNProcesso(java.lang.String nProcesso);
                    
                    /**
                     * Sets (as xml) the "nProcesso" element
                     */
                    void xsetNProcesso(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso nProcesso);
                    
                    /**
                     * Unsets the "nProcesso" element
                     */
                    void unsetNProcesso();
                    
                    /**
                     * Gets the "indIncentivo" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo.Enum getIndIncentivo();
                    
                    /**
                     * Gets (as xml) the "indIncentivo" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo xgetIndIncentivo();
                    
                    /**
                     * Sets the "indIncentivo" element
                     */
                    void setIndIncentivo(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo.Enum indIncentivo);
                    
                    /**
                     * Sets (as xml) the "indIncentivo" element
                     */
                    void xsetIndIncentivo(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo indIncentivo);
                    
                    /**
                     * An XML indISS(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$IndISS.
                     */
                    public interface IndISS extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndISS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indissb6aeelemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      static final Enum X_3 = Enum.forString("3");
                      static final Enum X_4 = Enum.forString("4");
                      static final Enum X_5 = Enum.forString("5");
                      static final Enum X_6 = Enum.forString("6");
                      static final Enum X_7 = Enum.forString("7");
                      
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      static final int INT_X_3 = Enum.INT_X_3;
                      static final int INT_X_4 = Enum.INT_X_4;
                      static final int INT_X_5 = Enum.INT_X_5;
                      static final int INT_X_6 = Enum.INT_X_6;
                      static final int INT_X_7 = Enum.INT_X_7;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$IndISS.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_1
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_1 = 1;
                        static final int INT_X_2 = 2;
                        static final int INT_X_3 = 3;
                        static final int INT_X_4 = 4;
                        static final int INT_X_5 = 5;
                        static final int INT_X_6 = 6;
                        static final int INT_X_7 = 7;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                            new Enum("3", INT_X_3),
                            new Enum("4", INT_X_4),
                            new Enum("5", INT_X_5),
                            new Enum("6", INT_X_6),
                            new Enum("7", INT_X_7),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndISS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML cServico(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$CServico.
                     */
                    public interface CServico extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CServico.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cservico94bcelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.CServico) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML nProcesso(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$NProcesso.
                     */
                    public interface NProcesso extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NProcesso.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nprocesso541aelemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.NProcesso) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML indIncentivo(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$IndIncentivo.
                     */
                    public interface IndIncentivo extends org.apache.xmlbeans.XmlString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndIncentivo.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indincentivo8902elemtype");
                      
                      org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                      void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                      
                      static final Enum X_1 = Enum.forString("1");
                      static final Enum X_2 = Enum.forString("2");
                      
                      static final int INT_X_1 = Enum.INT_X_1;
                      static final int INT_X_2 = Enum.INT_X_2;
                      
                      /**
                       * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$ISSQN$IndIncentivo.
                       * These enum values can be used as follows:
                       * <pre>
                       * enum.toString(); // returns the string value of the enum
                       * enum.intValue(); // returns an int value, useful for switches
                       * // e.g., case Enum.INT_X_1
                       * Enum.forString(s); // returns the enum value for a string
                       * Enum.forInt(i); // returns the enum value for an int
                       * </pre>
                       * Enumeration objects are immutable singleton objects that
                       * can be compared using == object equality. They have no
                       * public constructor. See the constants defined within this
                       * class for all the valid values.
                       */
                      static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                      {
                        /**
                         * Returns the enum value for a string, or null if none.
                         */
                        public static Enum forString(java.lang.String s)
                            { return (Enum)table.forString(s); }
                        /**
                         * Returns the enum value corresponding to an int, or null if none.
                         */
                        public static Enum forInt(int i)
                            { return (Enum)table.forInt(i); }
                        
                        private Enum(java.lang.String s, int i)
                            { super(s, i); }
                        
                        static final int INT_X_1 = 1;
                        static final int INT_X_2 = 2;
                        
                        public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                            new org.apache.xmlbeans.StringEnumAbstractBase.Table
                        (
                          new Enum[]
                          {
                            new Enum("1", INT_X_1),
                            new Enum("2", INT_X_2),
                          }
                        );
                        private static final long serialVersionUID = 1L;
                        private java.lang.Object readResolve() { return forInt(intValue()); } 
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN.IndIncentivo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.ISSQN) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML PIS(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface PIS extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PIS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pis7d80elemtype");
                    
                    /**
                     * Gets the "PISAliq" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq getPISAliq();
                    
                    /**
                     * True if has "PISAliq" element
                     */
                    boolean isSetPISAliq();
                    
                    /**
                     * Sets the "PISAliq" element
                     */
                    void setPISAliq(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq pisAliq);
                    
                    /**
                     * Appends and returns a new empty "PISAliq" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq addNewPISAliq();
                    
                    /**
                     * Unsets the "PISAliq" element
                     */
                    void unsetPISAliq();
                    
                    /**
                     * Gets the "PISQtde" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde getPISQtde();
                    
                    /**
                     * True if has "PISQtde" element
                     */
                    boolean isSetPISQtde();
                    
                    /**
                     * Sets the "PISQtde" element
                     */
                    void setPISQtde(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde pisQtde);
                    
                    /**
                     * Appends and returns a new empty "PISQtde" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde addNewPISQtde();
                    
                    /**
                     * Unsets the "PISQtde" element
                     */
                    void unsetPISQtde();
                    
                    /**
                     * Gets the "PISNT" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT getPISNT();
                    
                    /**
                     * True if has "PISNT" element
                     */
                    boolean isSetPISNT();
                    
                    /**
                     * Sets the "PISNT" element
                     */
                    void setPISNT(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT pisnt);
                    
                    /**
                     * Appends and returns a new empty "PISNT" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT addNewPISNT();
                    
                    /**
                     * Unsets the "PISNT" element
                     */
                    void unsetPISNT();
                    
                    /**
                     * Gets the "PISOutr" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr getPISOutr();
                    
                    /**
                     * True if has "PISOutr" element
                     */
                    boolean isSetPISOutr();
                    
                    /**
                     * Sets the "PISOutr" element
                     */
                    void setPISOutr(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr pisOutr);
                    
                    /**
                     * Appends and returns a new empty "PISOutr" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr addNewPISOutr();
                    
                    /**
                     * Unsets the "PISOutr" element
                     */
                    void unsetPISOutr();
                    
                    /**
                     * An XML PISAliq(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface PISAliq extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PISAliq.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pisaliq0e07elemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST cst);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pPIS" element
                       */
                      java.lang.String getPPIS();
                      
                      /**
                       * Gets (as xml) the "pPIS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPPIS();
                      
                      /**
                       * Sets the "pPIS" element
                       */
                      void setPPIS(java.lang.String ppis);
                      
                      /**
                       * Sets (as xml) the "pPIS" element
                       */
                      void xsetPPIS(br.inf.portalfiscal.nfe.TDec0302A04 ppis);
                      
                      /**
                       * Gets the "vPIS" element
                       */
                      java.lang.String getVPIS();
                      
                      /**
                       * Gets (as xml) the "vPIS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVPIS();
                      
                      /**
                       * Sets the "vPIS" element
                       */
                      void setVPIS(java.lang.String vpis);
                      
                      /**
                       * Sets (as xml) the "vPIS" element
                       */
                      void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302 vpis);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISAliq$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstb5b7elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_01 = Enum.forString("01");
                        static final Enum X_02 = Enum.forString("02");
                        
                        static final int INT_X_01 = Enum.INT_X_01;
                        static final int INT_X_02 = Enum.INT_X_02;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISAliq$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_01
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_01 = 1;
                          static final int INT_X_02 = 2;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("01", INT_X_01),
                              new Enum("02", INT_X_02),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML PISQtde(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface PISQtde extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PISQtde.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pisqtdeddd6elemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST cst);
                      
                      /**
                       * Gets the "qBCProd" element
                       */
                      java.lang.String getQBCProd();
                      
                      /**
                       * Gets (as xml) the "qBCProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1204V xgetQBCProd();
                      
                      /**
                       * Sets the "qBCProd" element
                       */
                      void setQBCProd(java.lang.String qbcProd);
                      
                      /**
                       * Sets (as xml) the "qBCProd" element
                       */
                      void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204V qbcProd);
                      
                      /**
                       * Gets the "vAliqProd" element
                       */
                      java.lang.String getVAliqProd();
                      
                      /**
                       * Gets (as xml) the "vAliqProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104V xgetVAliqProd();
                      
                      /**
                       * Sets the "vAliqProd" element
                       */
                      void setVAliqProd(java.lang.String vAliqProd);
                      
                      /**
                       * Sets (as xml) the "vAliqProd" element
                       */
                      void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104V vAliqProd);
                      
                      /**
                       * Gets the "vPIS" element
                       */
                      java.lang.String getVPIS();
                      
                      /**
                       * Gets (as xml) the "vPIS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVPIS();
                      
                      /**
                       * Sets the "vPIS" element
                       */
                      void setVPIS(java.lang.String vpis);
                      
                      /**
                       * Sets (as xml) the "vPIS" element
                       */
                      void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302 vpis);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISQtde$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst8586elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_03 = Enum.forString("03");
                        
                        static final int INT_X_03 = Enum.INT_X_03;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISQtde$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_03
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_03 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("03", INT_X_03),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISQtde) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML PISNT(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface PISNT extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PISNT.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pisntcfd4elemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST cst);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISNT$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csta384elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_04 = Enum.forString("04");
                        static final Enum X_05 = Enum.forString("05");
                        static final Enum X_06 = Enum.forString("06");
                        static final Enum X_07 = Enum.forString("07");
                        static final Enum X_08 = Enum.forString("08");
                        static final Enum X_09 = Enum.forString("09");
                        
                        static final int INT_X_04 = Enum.INT_X_04;
                        static final int INT_X_05 = Enum.INT_X_05;
                        static final int INT_X_06 = Enum.INT_X_06;
                        static final int INT_X_07 = Enum.INT_X_07;
                        static final int INT_X_08 = Enum.INT_X_08;
                        static final int INT_X_09 = Enum.INT_X_09;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISNT$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_04
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_04 = 1;
                          static final int INT_X_05 = 2;
                          static final int INT_X_06 = 3;
                          static final int INT_X_07 = 4;
                          static final int INT_X_08 = 5;
                          static final int INT_X_09 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("04", INT_X_04),
                              new Enum("05", INT_X_05),
                              new Enum("06", INT_X_06),
                              new Enum("07", INT_X_07),
                              new Enum("08", INT_X_08),
                              new Enum("09", INT_X_09),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISNT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML PISOutr(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface PISOutr extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PISOutr.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pisoutr60d6elemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST cst);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * True if has "vBC" element
                       */
                      boolean isSetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Unsets the "vBC" element
                       */
                      void unsetVBC();
                      
                      /**
                       * Gets the "pPIS" element
                       */
                      java.lang.String getPPIS();
                      
                      /**
                       * Gets (as xml) the "pPIS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPPIS();
                      
                      /**
                       * True if has "pPIS" element
                       */
                      boolean isSetPPIS();
                      
                      /**
                       * Sets the "pPIS" element
                       */
                      void setPPIS(java.lang.String ppis);
                      
                      /**
                       * Sets (as xml) the "pPIS" element
                       */
                      void xsetPPIS(br.inf.portalfiscal.nfe.TDec0302A04 ppis);
                      
                      /**
                       * Unsets the "pPIS" element
                       */
                      void unsetPPIS();
                      
                      /**
                       * Gets the "qBCProd" element
                       */
                      java.lang.String getQBCProd();
                      
                      /**
                       * Gets (as xml) the "qBCProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1204V xgetQBCProd();
                      
                      /**
                       * True if has "qBCProd" element
                       */
                      boolean isSetQBCProd();
                      
                      /**
                       * Sets the "qBCProd" element
                       */
                      void setQBCProd(java.lang.String qbcProd);
                      
                      /**
                       * Sets (as xml) the "qBCProd" element
                       */
                      void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204V qbcProd);
                      
                      /**
                       * Unsets the "qBCProd" element
                       */
                      void unsetQBCProd();
                      
                      /**
                       * Gets the "vAliqProd" element
                       */
                      java.lang.String getVAliqProd();
                      
                      /**
                       * Gets (as xml) the "vAliqProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104V xgetVAliqProd();
                      
                      /**
                       * True if has "vAliqProd" element
                       */
                      boolean isSetVAliqProd();
                      
                      /**
                       * Sets the "vAliqProd" element
                       */
                      void setVAliqProd(java.lang.String vAliqProd);
                      
                      /**
                       * Sets (as xml) the "vAliqProd" element
                       */
                      void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104V vAliqProd);
                      
                      /**
                       * Unsets the "vAliqProd" element
                       */
                      void unsetVAliqProd();
                      
                      /**
                       * Gets the "vPIS" element
                       */
                      java.lang.String getVPIS();
                      
                      /**
                       * Gets (as xml) the "vPIS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVPIS();
                      
                      /**
                       * Sets the "vPIS" element
                       */
                      void setVPIS(java.lang.String vpis);
                      
                      /**
                       * Sets (as xml) the "vPIS" element
                       */
                      void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302 vpis);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISOutr$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst0886elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_49 = Enum.forString("49");
                        static final Enum X_50 = Enum.forString("50");
                        static final Enum X_51 = Enum.forString("51");
                        static final Enum X_52 = Enum.forString("52");
                        static final Enum X_53 = Enum.forString("53");
                        static final Enum X_54 = Enum.forString("54");
                        static final Enum X_55 = Enum.forString("55");
                        static final Enum X_56 = Enum.forString("56");
                        static final Enum X_60 = Enum.forString("60");
                        static final Enum X_61 = Enum.forString("61");
                        static final Enum X_62 = Enum.forString("62");
                        static final Enum X_63 = Enum.forString("63");
                        static final Enum X_64 = Enum.forString("64");
                        static final Enum X_65 = Enum.forString("65");
                        static final Enum X_66 = Enum.forString("66");
                        static final Enum X_67 = Enum.forString("67");
                        static final Enum X_70 = Enum.forString("70");
                        static final Enum X_71 = Enum.forString("71");
                        static final Enum X_72 = Enum.forString("72");
                        static final Enum X_73 = Enum.forString("73");
                        static final Enum X_74 = Enum.forString("74");
                        static final Enum X_75 = Enum.forString("75");
                        static final Enum X_98 = Enum.forString("98");
                        static final Enum X_99 = Enum.forString("99");
                        
                        static final int INT_X_49 = Enum.INT_X_49;
                        static final int INT_X_50 = Enum.INT_X_50;
                        static final int INT_X_51 = Enum.INT_X_51;
                        static final int INT_X_52 = Enum.INT_X_52;
                        static final int INT_X_53 = Enum.INT_X_53;
                        static final int INT_X_54 = Enum.INT_X_54;
                        static final int INT_X_55 = Enum.INT_X_55;
                        static final int INT_X_56 = Enum.INT_X_56;
                        static final int INT_X_60 = Enum.INT_X_60;
                        static final int INT_X_61 = Enum.INT_X_61;
                        static final int INT_X_62 = Enum.INT_X_62;
                        static final int INT_X_63 = Enum.INT_X_63;
                        static final int INT_X_64 = Enum.INT_X_64;
                        static final int INT_X_65 = Enum.INT_X_65;
                        static final int INT_X_66 = Enum.INT_X_66;
                        static final int INT_X_67 = Enum.INT_X_67;
                        static final int INT_X_70 = Enum.INT_X_70;
                        static final int INT_X_71 = Enum.INT_X_71;
                        static final int INT_X_72 = Enum.INT_X_72;
                        static final int INT_X_73 = Enum.INT_X_73;
                        static final int INT_X_74 = Enum.INT_X_74;
                        static final int INT_X_75 = Enum.INT_X_75;
                        static final int INT_X_98 = Enum.INT_X_98;
                        static final int INT_X_99 = Enum.INT_X_99;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$PIS$PISOutr$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_49
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_49 = 1;
                          static final int INT_X_50 = 2;
                          static final int INT_X_51 = 3;
                          static final int INT_X_52 = 4;
                          static final int INT_X_53 = 5;
                          static final int INT_X_54 = 6;
                          static final int INT_X_55 = 7;
                          static final int INT_X_56 = 8;
                          static final int INT_X_60 = 9;
                          static final int INT_X_61 = 10;
                          static final int INT_X_62 = 11;
                          static final int INT_X_63 = 12;
                          static final int INT_X_64 = 13;
                          static final int INT_X_65 = 14;
                          static final int INT_X_66 = 15;
                          static final int INT_X_67 = 16;
                          static final int INT_X_70 = 17;
                          static final int INT_X_71 = 18;
                          static final int INT_X_72 = 19;
                          static final int INT_X_73 = 20;
                          static final int INT_X_74 = 21;
                          static final int INT_X_75 = 22;
                          static final int INT_X_98 = 23;
                          static final int INT_X_99 = 24;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("49", INT_X_49),
                              new Enum("50", INT_X_50),
                              new Enum("51", INT_X_51),
                              new Enum("52", INT_X_52),
                              new Enum("53", INT_X_53),
                              new Enum("54", INT_X_54),
                              new Enum("55", INT_X_55),
                              new Enum("56", INT_X_56),
                              new Enum("60", INT_X_60),
                              new Enum("61", INT_X_61),
                              new Enum("62", INT_X_62),
                              new Enum("63", INT_X_63),
                              new Enum("64", INT_X_64),
                              new Enum("65", INT_X_65),
                              new Enum("66", INT_X_66),
                              new Enum("67", INT_X_67),
                              new Enum("70", INT_X_70),
                              new Enum("71", INT_X_71),
                              new Enum("72", INT_X_72),
                              new Enum("73", INT_X_73),
                              new Enum("74", INT_X_74),
                              new Enum("75", INT_X_75),
                              new Enum("98", INT_X_98),
                              new Enum("99", INT_X_99),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS.PISOutr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PIS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML PISST(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface PISST extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(PISST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pisst93ffelemtype");
                    
                    /**
                     * Gets the "vBC" element
                     */
                    java.lang.String getVBC();
                    
                    /**
                     * Gets (as xml) the "vBC" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302Opc xgetVBC();
                    
                    /**
                     * True if has "vBC" element
                     */
                    boolean isSetVBC();
                    
                    /**
                     * Sets the "vBC" element
                     */
                    void setVBC(java.lang.String vbc);
                    
                    /**
                     * Sets (as xml) the "vBC" element
                     */
                    void xsetVBC(br.inf.portalfiscal.nfe.TDec1302Opc vbc);
                    
                    /**
                     * Unsets the "vBC" element
                     */
                    void unsetVBC();
                    
                    /**
                     * Gets the "pPIS" element
                     */
                    java.lang.String getPPIS();
                    
                    /**
                     * Gets (as xml) the "pPIS" element
                     */
                    br.inf.portalfiscal.nfe.TDec0302A04 xgetPPIS();
                    
                    /**
                     * True if has "pPIS" element
                     */
                    boolean isSetPPIS();
                    
                    /**
                     * Sets the "pPIS" element
                     */
                    void setPPIS(java.lang.String ppis);
                    
                    /**
                     * Sets (as xml) the "pPIS" element
                     */
                    void xsetPPIS(br.inf.portalfiscal.nfe.TDec0302A04 ppis);
                    
                    /**
                     * Unsets the "pPIS" element
                     */
                    void unsetPPIS();
                    
                    /**
                     * Gets the "qBCProd" element
                     */
                    java.lang.String getQBCProd();
                    
                    /**
                     * Gets (as xml) the "qBCProd" element
                     */
                    br.inf.portalfiscal.nfe.TDec1204 xgetQBCProd();
                    
                    /**
                     * True if has "qBCProd" element
                     */
                    boolean isSetQBCProd();
                    
                    /**
                     * Sets the "qBCProd" element
                     */
                    void setQBCProd(java.lang.String qbcProd);
                    
                    /**
                     * Sets (as xml) the "qBCProd" element
                     */
                    void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204 qbcProd);
                    
                    /**
                     * Unsets the "qBCProd" element
                     */
                    void unsetQBCProd();
                    
                    /**
                     * Gets the "vAliqProd" element
                     */
                    java.lang.String getVAliqProd();
                    
                    /**
                     * Gets (as xml) the "vAliqProd" element
                     */
                    br.inf.portalfiscal.nfe.TDec1104 xgetVAliqProd();
                    
                    /**
                     * True if has "vAliqProd" element
                     */
                    boolean isSetVAliqProd();
                    
                    /**
                     * Sets the "vAliqProd" element
                     */
                    void setVAliqProd(java.lang.String vAliqProd);
                    
                    /**
                     * Sets (as xml) the "vAliqProd" element
                     */
                    void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104 vAliqProd);
                    
                    /**
                     * Unsets the "vAliqProd" element
                     */
                    void unsetVAliqProd();
                    
                    /**
                     * Gets the "vPIS" element
                     */
                    java.lang.String getVPIS();
                    
                    /**
                     * Gets (as xml) the "vPIS" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVPIS();
                    
                    /**
                     * Sets the "vPIS" element
                     */
                    void setVPIS(java.lang.String vpis);
                    
                    /**
                     * Sets (as xml) the "vPIS" element
                     */
                    void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302 vpis);
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.PISST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML COFINS(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface COFINS extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINS.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofins5c56elemtype");
                    
                    /**
                     * Gets the "COFINSAliq" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq getCOFINSAliq();
                    
                    /**
                     * True if has "COFINSAliq" element
                     */
                    boolean isSetCOFINSAliq();
                    
                    /**
                     * Sets the "COFINSAliq" element
                     */
                    void setCOFINSAliq(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq cofinsAliq);
                    
                    /**
                     * Appends and returns a new empty "COFINSAliq" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq addNewCOFINSAliq();
                    
                    /**
                     * Unsets the "COFINSAliq" element
                     */
                    void unsetCOFINSAliq();
                    
                    /**
                     * Gets the "COFINSQtde" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde getCOFINSQtde();
                    
                    /**
                     * True if has "COFINSQtde" element
                     */
                    boolean isSetCOFINSQtde();
                    
                    /**
                     * Sets the "COFINSQtde" element
                     */
                    void setCOFINSQtde(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde cofinsQtde);
                    
                    /**
                     * Appends and returns a new empty "COFINSQtde" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde addNewCOFINSQtde();
                    
                    /**
                     * Unsets the "COFINSQtde" element
                     */
                    void unsetCOFINSQtde();
                    
                    /**
                     * Gets the "COFINSNT" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT getCOFINSNT();
                    
                    /**
                     * True if has "COFINSNT" element
                     */
                    boolean isSetCOFINSNT();
                    
                    /**
                     * Sets the "COFINSNT" element
                     */
                    void setCOFINSNT(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT cofinsnt);
                    
                    /**
                     * Appends and returns a new empty "COFINSNT" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT addNewCOFINSNT();
                    
                    /**
                     * Unsets the "COFINSNT" element
                     */
                    void unsetCOFINSNT();
                    
                    /**
                     * Gets the "COFINSOutr" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr getCOFINSOutr();
                    
                    /**
                     * True if has "COFINSOutr" element
                     */
                    boolean isSetCOFINSOutr();
                    
                    /**
                     * Sets the "COFINSOutr" element
                     */
                    void setCOFINSOutr(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr cofinsOutr);
                    
                    /**
                     * Appends and returns a new empty "COFINSOutr" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr addNewCOFINSOutr();
                    
                    /**
                     * Unsets the "COFINSOutr" element
                     */
                    void unsetCOFINSOutr();
                    
                    /**
                     * An XML COFINSAliq(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface COFINSAliq extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINSAliq.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofinsaliq9759elemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST cst);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Gets the "pCOFINS" element
                       */
                      java.lang.String getPCOFINS();
                      
                      /**
                       * Gets (as xml) the "pCOFINS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPCOFINS();
                      
                      /**
                       * Sets the "pCOFINS" element
                       */
                      void setPCOFINS(java.lang.String pcofins);
                      
                      /**
                       * Sets (as xml) the "pCOFINS" element
                       */
                      void xsetPCOFINS(br.inf.portalfiscal.nfe.TDec0302A04 pcofins);
                      
                      /**
                       * Gets the "vCOFINS" element
                       */
                      java.lang.String getVCOFINS();
                      
                      /**
                       * Gets (as xml) the "vCOFINS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCOFINS();
                      
                      /**
                       * Sets the "vCOFINS" element
                       */
                      void setVCOFINS(java.lang.String vcofins);
                      
                      /**
                       * Sets (as xml) the "vCOFINS" element
                       */
                      void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302 vcofins);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSAliq$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cstbb09elemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_01 = Enum.forString("01");
                        static final Enum X_02 = Enum.forString("02");
                        
                        static final int INT_X_01 = Enum.INT_X_01;
                        static final int INT_X_02 = Enum.INT_X_02;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSAliq$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_01
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_01 = 1;
                          static final int INT_X_02 = 2;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("01", INT_X_01),
                              new Enum("02", INT_X_02),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML COFINSQtde(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface COFINSQtde extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINSQtde.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofinsqtde812aelemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST cst);
                      
                      /**
                       * Gets the "qBCProd" element
                       */
                      java.lang.String getQBCProd();
                      
                      /**
                       * Gets (as xml) the "qBCProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1204V xgetQBCProd();
                      
                      /**
                       * Sets the "qBCProd" element
                       */
                      void setQBCProd(java.lang.String qbcProd);
                      
                      /**
                       * Sets (as xml) the "qBCProd" element
                       */
                      void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204V qbcProd);
                      
                      /**
                       * Gets the "vAliqProd" element
                       */
                      java.lang.String getVAliqProd();
                      
                      /**
                       * Gets (as xml) the "vAliqProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104V xgetVAliqProd();
                      
                      /**
                       * Sets the "vAliqProd" element
                       */
                      void setVAliqProd(java.lang.String vAliqProd);
                      
                      /**
                       * Sets (as xml) the "vAliqProd" element
                       */
                      void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104V vAliqProd);
                      
                      /**
                       * Gets the "vCOFINS" element
                       */
                      java.lang.String getVCOFINS();
                      
                      /**
                       * Gets (as xml) the "vCOFINS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCOFINS();
                      
                      /**
                       * Sets the "vCOFINS" element
                       */
                      void setVCOFINS(java.lang.String vcofins);
                      
                      /**
                       * Sets (as xml) the "vCOFINS" element
                       */
                      void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302 vcofins);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSQtde$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("csta4daelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_03 = Enum.forString("03");
                        
                        static final int INT_X_03 = Enum.INT_X_03;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSQtde$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_03
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_03 = 1;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("03", INT_X_03),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSQtde) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML COFINSNT(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface COFINSNT extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINSNT.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofinsnt98ecelemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST cst);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSNT$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cste89celemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_04 = Enum.forString("04");
                        static final Enum X_05 = Enum.forString("05");
                        static final Enum X_06 = Enum.forString("06");
                        static final Enum X_07 = Enum.forString("07");
                        static final Enum X_08 = Enum.forString("08");
                        static final Enum X_09 = Enum.forString("09");
                        
                        static final int INT_X_04 = Enum.INT_X_04;
                        static final int INT_X_05 = Enum.INT_X_05;
                        static final int INT_X_06 = Enum.INT_X_06;
                        static final int INT_X_07 = Enum.INT_X_07;
                        static final int INT_X_08 = Enum.INT_X_08;
                        static final int INT_X_09 = Enum.INT_X_09;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSNT$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_04
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_04 = 1;
                          static final int INT_X_05 = 2;
                          static final int INT_X_06 = 3;
                          static final int INT_X_07 = 4;
                          static final int INT_X_08 = 5;
                          static final int INT_X_09 = 6;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("04", INT_X_04),
                              new Enum("05", INT_X_05),
                              new Enum("06", INT_X_06),
                              new Enum("07", INT_X_07),
                              new Enum("08", INT_X_08),
                              new Enum("09", INT_X_09),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSNT) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * An XML COFINSOutr(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is a complex type.
                     */
                    public interface COFINSOutr extends org.apache.xmlbeans.XmlObject
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINSOutr.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofinsoutr1e2aelemtype");
                      
                      /**
                       * Gets the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST.Enum getCST();
                      
                      /**
                       * Gets (as xml) the "CST" element
                       */
                      br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST xgetCST();
                      
                      /**
                       * Sets the "CST" element
                       */
                      void setCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST.Enum cst);
                      
                      /**
                       * Sets (as xml) the "CST" element
                       */
                      void xsetCST(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST cst);
                      
                      /**
                       * Gets the "vBC" element
                       */
                      java.lang.String getVBC();
                      
                      /**
                       * Gets (as xml) the "vBC" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                      
                      /**
                       * True if has "vBC" element
                       */
                      boolean isSetVBC();
                      
                      /**
                       * Sets the "vBC" element
                       */
                      void setVBC(java.lang.String vbc);
                      
                      /**
                       * Sets (as xml) the "vBC" element
                       */
                      void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                      
                      /**
                       * Unsets the "vBC" element
                       */
                      void unsetVBC();
                      
                      /**
                       * Gets the "pCOFINS" element
                       */
                      java.lang.String getPCOFINS();
                      
                      /**
                       * Gets (as xml) the "pCOFINS" element
                       */
                      br.inf.portalfiscal.nfe.TDec0302A04 xgetPCOFINS();
                      
                      /**
                       * True if has "pCOFINS" element
                       */
                      boolean isSetPCOFINS();
                      
                      /**
                       * Sets the "pCOFINS" element
                       */
                      void setPCOFINS(java.lang.String pcofins);
                      
                      /**
                       * Sets (as xml) the "pCOFINS" element
                       */
                      void xsetPCOFINS(br.inf.portalfiscal.nfe.TDec0302A04 pcofins);
                      
                      /**
                       * Unsets the "pCOFINS" element
                       */
                      void unsetPCOFINS();
                      
                      /**
                       * Gets the "qBCProd" element
                       */
                      java.lang.String getQBCProd();
                      
                      /**
                       * Gets (as xml) the "qBCProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1204V xgetQBCProd();
                      
                      /**
                       * True if has "qBCProd" element
                       */
                      boolean isSetQBCProd();
                      
                      /**
                       * Sets the "qBCProd" element
                       */
                      void setQBCProd(java.lang.String qbcProd);
                      
                      /**
                       * Sets (as xml) the "qBCProd" element
                       */
                      void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204V qbcProd);
                      
                      /**
                       * Unsets the "qBCProd" element
                       */
                      void unsetQBCProd();
                      
                      /**
                       * Gets the "vAliqProd" element
                       */
                      java.lang.String getVAliqProd();
                      
                      /**
                       * Gets (as xml) the "vAliqProd" element
                       */
                      br.inf.portalfiscal.nfe.TDec1104V xgetVAliqProd();
                      
                      /**
                       * True if has "vAliqProd" element
                       */
                      boolean isSetVAliqProd();
                      
                      /**
                       * Sets the "vAliqProd" element
                       */
                      void setVAliqProd(java.lang.String vAliqProd);
                      
                      /**
                       * Sets (as xml) the "vAliqProd" element
                       */
                      void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104V vAliqProd);
                      
                      /**
                       * Unsets the "vAliqProd" element
                       */
                      void unsetVAliqProd();
                      
                      /**
                       * Gets the "vCOFINS" element
                       */
                      java.lang.String getVCOFINS();
                      
                      /**
                       * Gets (as xml) the "vCOFINS" element
                       */
                      br.inf.portalfiscal.nfe.TDec1302 xgetVCOFINS();
                      
                      /**
                       * Sets the "vCOFINS" element
                       */
                      void setVCOFINS(java.lang.String vcofins);
                      
                      /**
                       * Sets (as xml) the "vCOFINS" element
                       */
                      void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302 vcofins);
                      
                      /**
                       * An XML CST(@http://www.portalfiscal.inf.br/nfe).
                       *
                       * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSOutr$CST.
                       */
                      public interface CST extends org.apache.xmlbeans.XmlString
                      {
                        public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                          org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cst41daelemtype");
                        
                        org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                        void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                        
                        static final Enum X_49 = Enum.forString("49");
                        static final Enum X_50 = Enum.forString("50");
                        static final Enum X_51 = Enum.forString("51");
                        static final Enum X_52 = Enum.forString("52");
                        static final Enum X_53 = Enum.forString("53");
                        static final Enum X_54 = Enum.forString("54");
                        static final Enum X_55 = Enum.forString("55");
                        static final Enum X_56 = Enum.forString("56");
                        static final Enum X_60 = Enum.forString("60");
                        static final Enum X_61 = Enum.forString("61");
                        static final Enum X_62 = Enum.forString("62");
                        static final Enum X_63 = Enum.forString("63");
                        static final Enum X_64 = Enum.forString("64");
                        static final Enum X_65 = Enum.forString("65");
                        static final Enum X_66 = Enum.forString("66");
                        static final Enum X_67 = Enum.forString("67");
                        static final Enum X_70 = Enum.forString("70");
                        static final Enum X_71 = Enum.forString("71");
                        static final Enum X_72 = Enum.forString("72");
                        static final Enum X_73 = Enum.forString("73");
                        static final Enum X_74 = Enum.forString("74");
                        static final Enum X_75 = Enum.forString("75");
                        static final Enum X_98 = Enum.forString("98");
                        static final Enum X_99 = Enum.forString("99");
                        
                        static final int INT_X_49 = Enum.INT_X_49;
                        static final int INT_X_50 = Enum.INT_X_50;
                        static final int INT_X_51 = Enum.INT_X_51;
                        static final int INT_X_52 = Enum.INT_X_52;
                        static final int INT_X_53 = Enum.INT_X_53;
                        static final int INT_X_54 = Enum.INT_X_54;
                        static final int INT_X_55 = Enum.INT_X_55;
                        static final int INT_X_56 = Enum.INT_X_56;
                        static final int INT_X_60 = Enum.INT_X_60;
                        static final int INT_X_61 = Enum.INT_X_61;
                        static final int INT_X_62 = Enum.INT_X_62;
                        static final int INT_X_63 = Enum.INT_X_63;
                        static final int INT_X_64 = Enum.INT_X_64;
                        static final int INT_X_65 = Enum.INT_X_65;
                        static final int INT_X_66 = Enum.INT_X_66;
                        static final int INT_X_67 = Enum.INT_X_67;
                        static final int INT_X_70 = Enum.INT_X_70;
                        static final int INT_X_71 = Enum.INT_X_71;
                        static final int INT_X_72 = Enum.INT_X_72;
                        static final int INT_X_73 = Enum.INT_X_73;
                        static final int INT_X_74 = Enum.INT_X_74;
                        static final int INT_X_75 = Enum.INT_X_75;
                        static final int INT_X_98 = Enum.INT_X_98;
                        static final int INT_X_99 = Enum.INT_X_99;
                        
                        /**
                         * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$Imposto$COFINS$COFINSOutr$CST.
                         * These enum values can be used as follows:
                         * <pre>
                         * enum.toString(); // returns the string value of the enum
                         * enum.intValue(); // returns an int value, useful for switches
                         * // e.g., case Enum.INT_X_49
                         * Enum.forString(s); // returns the enum value for a string
                         * Enum.forInt(i); // returns the enum value for an int
                         * </pre>
                         * Enumeration objects are immutable singleton objects that
                         * can be compared using == object equality. They have no
                         * public constructor. See the constants defined within this
                         * class for all the valid values.
                         */
                        static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                        {
                          /**
                           * Returns the enum value for a string, or null if none.
                           */
                          public static Enum forString(java.lang.String s)
                              { return (Enum)table.forString(s); }
                          /**
                           * Returns the enum value corresponding to an int, or null if none.
                           */
                          public static Enum forInt(int i)
                              { return (Enum)table.forInt(i); }
                          
                          private Enum(java.lang.String s, int i)
                              { super(s, i); }
                          
                          static final int INT_X_49 = 1;
                          static final int INT_X_50 = 2;
                          static final int INT_X_51 = 3;
                          static final int INT_X_52 = 4;
                          static final int INT_X_53 = 5;
                          static final int INT_X_54 = 6;
                          static final int INT_X_55 = 7;
                          static final int INT_X_56 = 8;
                          static final int INT_X_60 = 9;
                          static final int INT_X_61 = 10;
                          static final int INT_X_62 = 11;
                          static final int INT_X_63 = 12;
                          static final int INT_X_64 = 13;
                          static final int INT_X_65 = 14;
                          static final int INT_X_66 = 15;
                          static final int INT_X_67 = 16;
                          static final int INT_X_70 = 17;
                          static final int INT_X_71 = 18;
                          static final int INT_X_72 = 19;
                          static final int INT_X_73 = 20;
                          static final int INT_X_74 = 21;
                          static final int INT_X_75 = 22;
                          static final int INT_X_98 = 23;
                          static final int INT_X_99 = 24;
                          
                          public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                              new org.apache.xmlbeans.StringEnumAbstractBase.Table
                          (
                            new Enum[]
                            {
                              new Enum("49", INT_X_49),
                              new Enum("50", INT_X_50),
                              new Enum("51", INT_X_51),
                              new Enum("52", INT_X_52),
                              new Enum("53", INT_X_53),
                              new Enum("54", INT_X_54),
                              new Enum("55", INT_X_55),
                              new Enum("56", INT_X_56),
                              new Enum("60", INT_X_60),
                              new Enum("61", INT_X_61),
                              new Enum("62", INT_X_62),
                              new Enum("63", INT_X_63),
                              new Enum("64", INT_X_64),
                              new Enum("65", INT_X_65),
                              new Enum("66", INT_X_66),
                              new Enum("67", INT_X_67),
                              new Enum("70", INT_X_70),
                              new Enum("71", INT_X_71),
                              new Enum("72", INT_X_72),
                              new Enum("73", INT_X_73),
                              new Enum("74", INT_X_74),
                              new Enum("75", INT_X_75),
                              new Enum("98", INT_X_98),
                              new Enum("99", INT_X_99),
                            }
                          );
                          private static final long serialVersionUID = 1L;
                          private java.lang.Object readResolve() { return forInt(intValue()); } 
                        }
                        
                        /**
                         * A factory class with static methods for creating instances
                         * of this type.
                         */
                        
                        public static final class Factory
                        {
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST newValue(java.lang.Object obj) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST) type.newValue( obj ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST newInstance() {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                          
                          public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST newInstance(org.apache.xmlbeans.XmlOptions options) {
                            return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr.CST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                          
                          private Factory() { } // No instance of this class allowed
                        }
                      }
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSOutr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINS) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML COFINSST(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface COFINSST extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(COFINSST.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cofinsst1555elemtype");
                    
                    /**
                     * Gets the "vBC" element
                     */
                    java.lang.String getVBC();
                    
                    /**
                     * Gets (as xml) the "vBC" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                    
                    /**
                     * True if has "vBC" element
                     */
                    boolean isSetVBC();
                    
                    /**
                     * Sets the "vBC" element
                     */
                    void setVBC(java.lang.String vbc);
                    
                    /**
                     * Sets (as xml) the "vBC" element
                     */
                    void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                    
                    /**
                     * Unsets the "vBC" element
                     */
                    void unsetVBC();
                    
                    /**
                     * Gets the "pCOFINS" element
                     */
                    java.lang.String getPCOFINS();
                    
                    /**
                     * Gets (as xml) the "pCOFINS" element
                     */
                    br.inf.portalfiscal.nfe.TDec0302A04 xgetPCOFINS();
                    
                    /**
                     * True if has "pCOFINS" element
                     */
                    boolean isSetPCOFINS();
                    
                    /**
                     * Sets the "pCOFINS" element
                     */
                    void setPCOFINS(java.lang.String pcofins);
                    
                    /**
                     * Sets (as xml) the "pCOFINS" element
                     */
                    void xsetPCOFINS(br.inf.portalfiscal.nfe.TDec0302A04 pcofins);
                    
                    /**
                     * Unsets the "pCOFINS" element
                     */
                    void unsetPCOFINS();
                    
                    /**
                     * Gets the "qBCProd" element
                     */
                    java.lang.String getQBCProd();
                    
                    /**
                     * Gets (as xml) the "qBCProd" element
                     */
                    br.inf.portalfiscal.nfe.TDec1204 xgetQBCProd();
                    
                    /**
                     * True if has "qBCProd" element
                     */
                    boolean isSetQBCProd();
                    
                    /**
                     * Sets the "qBCProd" element
                     */
                    void setQBCProd(java.lang.String qbcProd);
                    
                    /**
                     * Sets (as xml) the "qBCProd" element
                     */
                    void xsetQBCProd(br.inf.portalfiscal.nfe.TDec1204 qbcProd);
                    
                    /**
                     * Unsets the "qBCProd" element
                     */
                    void unsetQBCProd();
                    
                    /**
                     * Gets the "vAliqProd" element
                     */
                    java.lang.String getVAliqProd();
                    
                    /**
                     * Gets (as xml) the "vAliqProd" element
                     */
                    br.inf.portalfiscal.nfe.TDec1104 xgetVAliqProd();
                    
                    /**
                     * True if has "vAliqProd" element
                     */
                    boolean isSetVAliqProd();
                    
                    /**
                     * Sets the "vAliqProd" element
                     */
                    void setVAliqProd(java.lang.String vAliqProd);
                    
                    /**
                     * Sets (as xml) the "vAliqProd" element
                     */
                    void xsetVAliqProd(br.inf.portalfiscal.nfe.TDec1104 vAliqProd);
                    
                    /**
                     * Unsets the "vAliqProd" element
                     */
                    void unsetVAliqProd();
                    
                    /**
                     * Gets the "vCOFINS" element
                     */
                    java.lang.String getVCOFINS();
                    
                    /**
                     * Gets (as xml) the "vCOFINS" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVCOFINS();
                    
                    /**
                     * Sets the "vCOFINS" element
                     */
                    void setVCOFINS(java.lang.String vcofins);
                    
                    /**
                     * Sets (as xml) the "vCOFINS" element
                     */
                    void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302 vcofins);
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto.COFINSST) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.Imposto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML impostoDevol(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ImpostoDevol extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ImpostoDevol.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("impostodevol715aelemtype");
                
                /**
                 * Gets the "pDevol" element
                 */
                java.lang.String getPDevol();
                
                /**
                 * Gets (as xml) the "pDevol" element
                 */
                br.inf.portalfiscal.nfe.TDec0302Max100 xgetPDevol();
                
                /**
                 * Sets the "pDevol" element
                 */
                void setPDevol(java.lang.String pDevol);
                
                /**
                 * Sets (as xml) the "pDevol" element
                 */
                void xsetPDevol(br.inf.portalfiscal.nfe.TDec0302Max100 pDevol);
                
                /**
                 * Gets the "IPI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI getIPI();
                
                /**
                 * Sets the "IPI" element
                 */
                void setIPI(br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI ipi);
                
                /**
                 * Appends and returns a new empty "IPI" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI addNewIPI();
                
                /**
                 * An XML IPI(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface IPI extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IPI.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ipidfc8elemtype");
                    
                    /**
                     * Gets the "vIPIDevol" element
                     */
                    java.lang.String getVIPIDevol();
                    
                    /**
                     * Gets (as xml) the "vIPIDevol" element
                     */
                    br.inf.portalfiscal.nfe.TDec1302 xgetVIPIDevol();
                    
                    /**
                     * Sets the "vIPIDevol" element
                     */
                    void setVIPIDevol(java.lang.String vipiDevol);
                    
                    /**
                     * Sets (as xml) the "vIPIDevol" element
                     */
                    void xsetVIPIDevol(br.inf.portalfiscal.nfe.TDec1302 vipiDevol);
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol.IPI) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.ImpostoDevol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML infAdProd(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$InfAdProd.
             */
            public interface InfAdProd extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(InfAdProd.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("infadprod88f6elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.InfAdProd) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML nItem(@).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Det$NItem.
             */
            public interface NItem extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NItem.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nitem60f4attrtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det.NItem) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Det newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Det) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML total(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Total extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Total.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("total920celemtype");
            
            /**
             * Gets the "ICMSTot" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot getICMSTot();
            
            /**
             * Sets the "ICMSTot" element
             */
            void setICMSTot(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot icmsTot);
            
            /**
             * Appends and returns a new empty "ICMSTot" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot addNewICMSTot();
            
            /**
             * Gets the "ISSQNtot" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot getISSQNtot();
            
            /**
             * True if has "ISSQNtot" element
             */
            boolean isSetISSQNtot();
            
            /**
             * Sets the "ISSQNtot" element
             */
            void setISSQNtot(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot issqNtot);
            
            /**
             * Appends and returns a new empty "ISSQNtot" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot addNewISSQNtot();
            
            /**
             * Unsets the "ISSQNtot" element
             */
            void unsetISSQNtot();
            
            /**
             * Gets the "retTrib" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib getRetTrib();
            
            /**
             * True if has "retTrib" element
             */
            boolean isSetRetTrib();
            
            /**
             * Sets the "retTrib" element
             */
            void setRetTrib(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib retTrib);
            
            /**
             * Appends and returns a new empty "retTrib" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib addNewRetTrib();
            
            /**
             * Unsets the "retTrib" element
             */
            void unsetRetTrib();
            
            /**
             * An XML ICMSTot(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ICMSTot extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ICMSTot.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("icmstote587elemtype");
                
                /**
                 * Gets the "vBC" element
                 */
                java.lang.String getVBC();
                
                /**
                 * Gets (as xml) the "vBC" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVBC();
                
                /**
                 * Sets the "vBC" element
                 */
                void setVBC(java.lang.String vbc);
                
                /**
                 * Sets (as xml) the "vBC" element
                 */
                void xsetVBC(br.inf.portalfiscal.nfe.TDec1302 vbc);
                
                /**
                 * Gets the "vICMS" element
                 */
                java.lang.String getVICMS();
                
                /**
                 * Gets (as xml) the "vICMS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVICMS();
                
                /**
                 * Sets the "vICMS" element
                 */
                void setVICMS(java.lang.String vicms);
                
                /**
                 * Sets (as xml) the "vICMS" element
                 */
                void xsetVICMS(br.inf.portalfiscal.nfe.TDec1302 vicms);
                
                /**
                 * Gets the "vICMSDeson" element
                 */
                java.lang.String getVICMSDeson();
                
                /**
                 * Gets (as xml) the "vICMSDeson" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVICMSDeson();
                
                /**
                 * Sets the "vICMSDeson" element
                 */
                void setVICMSDeson(java.lang.String vicmsDeson);
                
                /**
                 * Sets (as xml) the "vICMSDeson" element
                 */
                void xsetVICMSDeson(br.inf.portalfiscal.nfe.TDec1302 vicmsDeson);
                
                /**
                 * Gets the "vBCST" element
                 */
                java.lang.String getVBCST();
                
                /**
                 * Gets (as xml) the "vBCST" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVBCST();
                
                /**
                 * Sets the "vBCST" element
                 */
                void setVBCST(java.lang.String vbcst);
                
                /**
                 * Sets (as xml) the "vBCST" element
                 */
                void xsetVBCST(br.inf.portalfiscal.nfe.TDec1302 vbcst);
                
                /**
                 * Gets the "vST" element
                 */
                java.lang.String getVST();
                
                /**
                 * Gets (as xml) the "vST" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVST();
                
                /**
                 * Sets the "vST" element
                 */
                void setVST(java.lang.String vst);
                
                /**
                 * Sets (as xml) the "vST" element
                 */
                void xsetVST(br.inf.portalfiscal.nfe.TDec1302 vst);
                
                /**
                 * Gets the "vProd" element
                 */
                java.lang.String getVProd();
                
                /**
                 * Gets (as xml) the "vProd" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVProd();
                
                /**
                 * Sets the "vProd" element
                 */
                void setVProd(java.lang.String vProd);
                
                /**
                 * Sets (as xml) the "vProd" element
                 */
                void xsetVProd(br.inf.portalfiscal.nfe.TDec1302 vProd);
                
                /**
                 * Gets the "vFrete" element
                 */
                java.lang.String getVFrete();
                
                /**
                 * Gets (as xml) the "vFrete" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVFrete();
                
                /**
                 * Sets the "vFrete" element
                 */
                void setVFrete(java.lang.String vFrete);
                
                /**
                 * Sets (as xml) the "vFrete" element
                 */
                void xsetVFrete(br.inf.portalfiscal.nfe.TDec1302 vFrete);
                
                /**
                 * Gets the "vSeg" element
                 */
                java.lang.String getVSeg();
                
                /**
                 * Gets (as xml) the "vSeg" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVSeg();
                
                /**
                 * Sets the "vSeg" element
                 */
                void setVSeg(java.lang.String vSeg);
                
                /**
                 * Sets (as xml) the "vSeg" element
                 */
                void xsetVSeg(br.inf.portalfiscal.nfe.TDec1302 vSeg);
                
                /**
                 * Gets the "vDesc" element
                 */
                java.lang.String getVDesc();
                
                /**
                 * Gets (as xml) the "vDesc" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVDesc();
                
                /**
                 * Sets the "vDesc" element
                 */
                void setVDesc(java.lang.String vDesc);
                
                /**
                 * Sets (as xml) the "vDesc" element
                 */
                void xsetVDesc(br.inf.portalfiscal.nfe.TDec1302 vDesc);
                
                /**
                 * Gets the "vII" element
                 */
                java.lang.String getVII();
                
                /**
                 * Gets (as xml) the "vII" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVII();
                
                /**
                 * Sets the "vII" element
                 */
                void setVII(java.lang.String vii);
                
                /**
                 * Sets (as xml) the "vII" element
                 */
                void xsetVII(br.inf.portalfiscal.nfe.TDec1302 vii);
                
                /**
                 * Gets the "vIPI" element
                 */
                java.lang.String getVIPI();
                
                /**
                 * Gets (as xml) the "vIPI" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVIPI();
                
                /**
                 * Sets the "vIPI" element
                 */
                void setVIPI(java.lang.String vipi);
                
                /**
                 * Sets (as xml) the "vIPI" element
                 */
                void xsetVIPI(br.inf.portalfiscal.nfe.TDec1302 vipi);
                
                /**
                 * Gets the "vPIS" element
                 */
                java.lang.String getVPIS();
                
                /**
                 * Gets (as xml) the "vPIS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVPIS();
                
                /**
                 * Sets the "vPIS" element
                 */
                void setVPIS(java.lang.String vpis);
                
                /**
                 * Sets (as xml) the "vPIS" element
                 */
                void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302 vpis);
                
                /**
                 * Gets the "vCOFINS" element
                 */
                java.lang.String getVCOFINS();
                
                /**
                 * Gets (as xml) the "vCOFINS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVCOFINS();
                
                /**
                 * Sets the "vCOFINS" element
                 */
                void setVCOFINS(java.lang.String vcofins);
                
                /**
                 * Sets (as xml) the "vCOFINS" element
                 */
                void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302 vcofins);
                
                /**
                 * Gets the "vOutro" element
                 */
                java.lang.String getVOutro();
                
                /**
                 * Gets (as xml) the "vOutro" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVOutro();
                
                /**
                 * Sets the "vOutro" element
                 */
                void setVOutro(java.lang.String vOutro);
                
                /**
                 * Sets (as xml) the "vOutro" element
                 */
                void xsetVOutro(br.inf.portalfiscal.nfe.TDec1302 vOutro);
                
                /**
                 * Gets the "vNF" element
                 */
                java.lang.String getVNF();
                
                /**
                 * Gets (as xml) the "vNF" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVNF();
                
                /**
                 * Sets the "vNF" element
                 */
                void setVNF(java.lang.String vnf);
                
                /**
                 * Sets (as xml) the "vNF" element
                 */
                void xsetVNF(br.inf.portalfiscal.nfe.TDec1302 vnf);
                
                /**
                 * Gets the "vTotTrib" element
                 */
                java.lang.String getVTotTrib();
                
                /**
                 * Gets (as xml) the "vTotTrib" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVTotTrib();
                
                /**
                 * True if has "vTotTrib" element
                 */
                boolean isSetVTotTrib();
                
                /**
                 * Sets the "vTotTrib" element
                 */
                void setVTotTrib(java.lang.String vTotTrib);
                
                /**
                 * Sets (as xml) the "vTotTrib" element
                 */
                void xsetVTotTrib(br.inf.portalfiscal.nfe.TDec1302 vTotTrib);
                
                /**
                 * Unsets the "vTotTrib" element
                 */
                void unsetVTotTrib();
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ICMSTot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML ISSQNtot(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ISSQNtot extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ISSQNtot.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("issqntotbcbdelemtype");
                
                /**
                 * Gets the "vServ" element
                 */
                java.lang.String getVServ();
                
                /**
                 * Gets (as xml) the "vServ" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVServ();
                
                /**
                 * True if has "vServ" element
                 */
                boolean isSetVServ();
                
                /**
                 * Sets the "vServ" element
                 */
                void setVServ(java.lang.String vServ);
                
                /**
                 * Sets (as xml) the "vServ" element
                 */
                void xsetVServ(br.inf.portalfiscal.nfe.TDec1302Opc vServ);
                
                /**
                 * Unsets the "vServ" element
                 */
                void unsetVServ();
                
                /**
                 * Gets the "vBC" element
                 */
                java.lang.String getVBC();
                
                /**
                 * Gets (as xml) the "vBC" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVBC();
                
                /**
                 * True if has "vBC" element
                 */
                boolean isSetVBC();
                
                /**
                 * Sets the "vBC" element
                 */
                void setVBC(java.lang.String vbc);
                
                /**
                 * Sets (as xml) the "vBC" element
                 */
                void xsetVBC(br.inf.portalfiscal.nfe.TDec1302Opc vbc);
                
                /**
                 * Unsets the "vBC" element
                 */
                void unsetVBC();
                
                /**
                 * Gets the "vISS" element
                 */
                java.lang.String getVISS();
                
                /**
                 * Gets (as xml) the "vISS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVISS();
                
                /**
                 * True if has "vISS" element
                 */
                boolean isSetVISS();
                
                /**
                 * Sets the "vISS" element
                 */
                void setVISS(java.lang.String viss);
                
                /**
                 * Sets (as xml) the "vISS" element
                 */
                void xsetVISS(br.inf.portalfiscal.nfe.TDec1302Opc viss);
                
                /**
                 * Unsets the "vISS" element
                 */
                void unsetVISS();
                
                /**
                 * Gets the "vPIS" element
                 */
                java.lang.String getVPIS();
                
                /**
                 * Gets (as xml) the "vPIS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVPIS();
                
                /**
                 * True if has "vPIS" element
                 */
                boolean isSetVPIS();
                
                /**
                 * Sets the "vPIS" element
                 */
                void setVPIS(java.lang.String vpis);
                
                /**
                 * Sets (as xml) the "vPIS" element
                 */
                void xsetVPIS(br.inf.portalfiscal.nfe.TDec1302Opc vpis);
                
                /**
                 * Unsets the "vPIS" element
                 */
                void unsetVPIS();
                
                /**
                 * Gets the "vCOFINS" element
                 */
                java.lang.String getVCOFINS();
                
                /**
                 * Gets (as xml) the "vCOFINS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVCOFINS();
                
                /**
                 * True if has "vCOFINS" element
                 */
                boolean isSetVCOFINS();
                
                /**
                 * Sets the "vCOFINS" element
                 */
                void setVCOFINS(java.lang.String vcofins);
                
                /**
                 * Sets (as xml) the "vCOFINS" element
                 */
                void xsetVCOFINS(br.inf.portalfiscal.nfe.TDec1302Opc vcofins);
                
                /**
                 * Unsets the "vCOFINS" element
                 */
                void unsetVCOFINS();
                
                /**
                 * Gets the "dCompet" element
                 */
                java.lang.String getDCompet();
                
                /**
                 * Gets (as xml) the "dCompet" element
                 */
                br.inf.portalfiscal.nfe.TData xgetDCompet();
                
                /**
                 * Sets the "dCompet" element
                 */
                void setDCompet(java.lang.String dCompet);
                
                /**
                 * Sets (as xml) the "dCompet" element
                 */
                void xsetDCompet(br.inf.portalfiscal.nfe.TData dCompet);
                
                /**
                 * Gets the "vDeducao" element
                 */
                java.lang.String getVDeducao();
                
                /**
                 * Gets (as xml) the "vDeducao" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDeducao();
                
                /**
                 * True if has "vDeducao" element
                 */
                boolean isSetVDeducao();
                
                /**
                 * Sets the "vDeducao" element
                 */
                void setVDeducao(java.lang.String vDeducao);
                
                /**
                 * Sets (as xml) the "vDeducao" element
                 */
                void xsetVDeducao(br.inf.portalfiscal.nfe.TDec1302Opc vDeducao);
                
                /**
                 * Unsets the "vDeducao" element
                 */
                void unsetVDeducao();
                
                /**
                 * Gets the "vOutro" element
                 */
                java.lang.String getVOutro();
                
                /**
                 * Gets (as xml) the "vOutro" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVOutro();
                
                /**
                 * True if has "vOutro" element
                 */
                boolean isSetVOutro();
                
                /**
                 * Sets the "vOutro" element
                 */
                void setVOutro(java.lang.String vOutro);
                
                /**
                 * Sets (as xml) the "vOutro" element
                 */
                void xsetVOutro(br.inf.portalfiscal.nfe.TDec1302Opc vOutro);
                
                /**
                 * Unsets the "vOutro" element
                 */
                void unsetVOutro();
                
                /**
                 * Gets the "vDescIncond" element
                 */
                java.lang.String getVDescIncond();
                
                /**
                 * Gets (as xml) the "vDescIncond" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDescIncond();
                
                /**
                 * True if has "vDescIncond" element
                 */
                boolean isSetVDescIncond();
                
                /**
                 * Sets the "vDescIncond" element
                 */
                void setVDescIncond(java.lang.String vDescIncond);
                
                /**
                 * Sets (as xml) the "vDescIncond" element
                 */
                void xsetVDescIncond(br.inf.portalfiscal.nfe.TDec1302Opc vDescIncond);
                
                /**
                 * Unsets the "vDescIncond" element
                 */
                void unsetVDescIncond();
                
                /**
                 * Gets the "vDescCond" element
                 */
                java.lang.String getVDescCond();
                
                /**
                 * Gets (as xml) the "vDescCond" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDescCond();
                
                /**
                 * True if has "vDescCond" element
                 */
                boolean isSetVDescCond();
                
                /**
                 * Sets the "vDescCond" element
                 */
                void setVDescCond(java.lang.String vDescCond);
                
                /**
                 * Sets (as xml) the "vDescCond" element
                 */
                void xsetVDescCond(br.inf.portalfiscal.nfe.TDec1302Opc vDescCond);
                
                /**
                 * Unsets the "vDescCond" element
                 */
                void unsetVDescCond();
                
                /**
                 * Gets the "vISSRet" element
                 */
                java.lang.String getVISSRet();
                
                /**
                 * Gets (as xml) the "vISSRet" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVISSRet();
                
                /**
                 * True if has "vISSRet" element
                 */
                boolean isSetVISSRet();
                
                /**
                 * Sets the "vISSRet" element
                 */
                void setVISSRet(java.lang.String vissRet);
                
                /**
                 * Sets (as xml) the "vISSRet" element
                 */
                void xsetVISSRet(br.inf.portalfiscal.nfe.TDec1302Opc vissRet);
                
                /**
                 * Unsets the "vISSRet" element
                 */
                void unsetVISSRet();
                
                /**
                 * Gets the "cRegTrib" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib.Enum getCRegTrib();
                
                /**
                 * Gets (as xml) the "cRegTrib" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib xgetCRegTrib();
                
                /**
                 * True if has "cRegTrib" element
                 */
                boolean isSetCRegTrib();
                
                /**
                 * Sets the "cRegTrib" element
                 */
                void setCRegTrib(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib.Enum cRegTrib);
                
                /**
                 * Sets (as xml) the "cRegTrib" element
                 */
                void xsetCRegTrib(br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib cRegTrib);
                
                /**
                 * Unsets the "cRegTrib" element
                 */
                void unsetCRegTrib();
                
                /**
                 * An XML cRegTrib(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Total$ISSQNtot$CRegTrib.
                 */
                public interface CRegTrib extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CRegTrib.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cregtrib8341elemtype");
                    
                    org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                    void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                    
                    static final Enum X_1 = Enum.forString("1");
                    static final Enum X_2 = Enum.forString("2");
                    static final Enum X_3 = Enum.forString("3");
                    static final Enum X_4 = Enum.forString("4");
                    static final Enum X_5 = Enum.forString("5");
                    static final Enum X_6 = Enum.forString("6");
                    
                    static final int INT_X_1 = Enum.INT_X_1;
                    static final int INT_X_2 = Enum.INT_X_2;
                    static final int INT_X_3 = Enum.INT_X_3;
                    static final int INT_X_4 = Enum.INT_X_4;
                    static final int INT_X_5 = Enum.INT_X_5;
                    static final int INT_X_6 = Enum.INT_X_6;
                    
                    /**
                     * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Total$ISSQNtot$CRegTrib.
                     * These enum values can be used as follows:
                     * <pre>
                     * enum.toString(); // returns the string value of the enum
                     * enum.intValue(); // returns an int value, useful for switches
                     * // e.g., case Enum.INT_X_1
                     * Enum.forString(s); // returns the enum value for a string
                     * Enum.forInt(i); // returns the enum value for an int
                     * </pre>
                     * Enumeration objects are immutable singleton objects that
                     * can be compared using == object equality. They have no
                     * public constructor. See the constants defined within this
                     * class for all the valid values.
                     */
                    static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                    {
                      /**
                       * Returns the enum value for a string, or null if none.
                       */
                      public static Enum forString(java.lang.String s)
                          { return (Enum)table.forString(s); }
                      /**
                       * Returns the enum value corresponding to an int, or null if none.
                       */
                      public static Enum forInt(int i)
                          { return (Enum)table.forInt(i); }
                      
                      private Enum(java.lang.String s, int i)
                          { super(s, i); }
                      
                      static final int INT_X_1 = 1;
                      static final int INT_X_2 = 2;
                      static final int INT_X_3 = 3;
                      static final int INT_X_4 = 4;
                      static final int INT_X_5 = 5;
                      static final int INT_X_6 = 6;
                      
                      public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                          new org.apache.xmlbeans.StringEnumAbstractBase.Table
                      (
                        new Enum[]
                        {
                          new Enum("1", INT_X_1),
                          new Enum("2", INT_X_2),
                          new Enum("3", INT_X_3),
                          new Enum("4", INT_X_4),
                          new Enum("5", INT_X_5),
                          new Enum("6", INT_X_6),
                        }
                      );
                      private static final long serialVersionUID = 1L;
                      private java.lang.Object readResolve() { return forInt(intValue()); } 
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot.CRegTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.ISSQNtot) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML retTrib(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface RetTrib extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RetTrib.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("rettribc2c8elemtype");
                
                /**
                 * Gets the "vRetPIS" element
                 */
                java.lang.String getVRetPIS();
                
                /**
                 * Gets (as xml) the "vRetPIS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVRetPIS();
                
                /**
                 * True if has "vRetPIS" element
                 */
                boolean isSetVRetPIS();
                
                /**
                 * Sets the "vRetPIS" element
                 */
                void setVRetPIS(java.lang.String vRetPIS);
                
                /**
                 * Sets (as xml) the "vRetPIS" element
                 */
                void xsetVRetPIS(br.inf.portalfiscal.nfe.TDec1302Opc vRetPIS);
                
                /**
                 * Unsets the "vRetPIS" element
                 */
                void unsetVRetPIS();
                
                /**
                 * Gets the "vRetCOFINS" element
                 */
                java.lang.String getVRetCOFINS();
                
                /**
                 * Gets (as xml) the "vRetCOFINS" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVRetCOFINS();
                
                /**
                 * True if has "vRetCOFINS" element
                 */
                boolean isSetVRetCOFINS();
                
                /**
                 * Sets the "vRetCOFINS" element
                 */
                void setVRetCOFINS(java.lang.String vRetCOFINS);
                
                /**
                 * Sets (as xml) the "vRetCOFINS" element
                 */
                void xsetVRetCOFINS(br.inf.portalfiscal.nfe.TDec1302Opc vRetCOFINS);
                
                /**
                 * Unsets the "vRetCOFINS" element
                 */
                void unsetVRetCOFINS();
                
                /**
                 * Gets the "vRetCSLL" element
                 */
                java.lang.String getVRetCSLL();
                
                /**
                 * Gets (as xml) the "vRetCSLL" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVRetCSLL();
                
                /**
                 * True if has "vRetCSLL" element
                 */
                boolean isSetVRetCSLL();
                
                /**
                 * Sets the "vRetCSLL" element
                 */
                void setVRetCSLL(java.lang.String vRetCSLL);
                
                /**
                 * Sets (as xml) the "vRetCSLL" element
                 */
                void xsetVRetCSLL(br.inf.portalfiscal.nfe.TDec1302Opc vRetCSLL);
                
                /**
                 * Unsets the "vRetCSLL" element
                 */
                void unsetVRetCSLL();
                
                /**
                 * Gets the "vBCIRRF" element
                 */
                java.lang.String getVBCIRRF();
                
                /**
                 * Gets (as xml) the "vBCIRRF" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVBCIRRF();
                
                /**
                 * True if has "vBCIRRF" element
                 */
                boolean isSetVBCIRRF();
                
                /**
                 * Sets the "vBCIRRF" element
                 */
                void setVBCIRRF(java.lang.String vbcirrf);
                
                /**
                 * Sets (as xml) the "vBCIRRF" element
                 */
                void xsetVBCIRRF(br.inf.portalfiscal.nfe.TDec1302Opc vbcirrf);
                
                /**
                 * Unsets the "vBCIRRF" element
                 */
                void unsetVBCIRRF();
                
                /**
                 * Gets the "vIRRF" element
                 */
                java.lang.String getVIRRF();
                
                /**
                 * Gets (as xml) the "vIRRF" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVIRRF();
                
                /**
                 * True if has "vIRRF" element
                 */
                boolean isSetVIRRF();
                
                /**
                 * Sets the "vIRRF" element
                 */
                void setVIRRF(java.lang.String virrf);
                
                /**
                 * Sets (as xml) the "vIRRF" element
                 */
                void xsetVIRRF(br.inf.portalfiscal.nfe.TDec1302Opc virrf);
                
                /**
                 * Unsets the "vIRRF" element
                 */
                void unsetVIRRF();
                
                /**
                 * Gets the "vBCRetPrev" element
                 */
                java.lang.String getVBCRetPrev();
                
                /**
                 * Gets (as xml) the "vBCRetPrev" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVBCRetPrev();
                
                /**
                 * True if has "vBCRetPrev" element
                 */
                boolean isSetVBCRetPrev();
                
                /**
                 * Sets the "vBCRetPrev" element
                 */
                void setVBCRetPrev(java.lang.String vbcRetPrev);
                
                /**
                 * Sets (as xml) the "vBCRetPrev" element
                 */
                void xsetVBCRetPrev(br.inf.portalfiscal.nfe.TDec1302Opc vbcRetPrev);
                
                /**
                 * Unsets the "vBCRetPrev" element
                 */
                void unsetVBCRetPrev();
                
                /**
                 * Gets the "vRetPrev" element
                 */
                java.lang.String getVRetPrev();
                
                /**
                 * Gets (as xml) the "vRetPrev" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVRetPrev();
                
                /**
                 * True if has "vRetPrev" element
                 */
                boolean isSetVRetPrev();
                
                /**
                 * Sets the "vRetPrev" element
                 */
                void setVRetPrev(java.lang.String vRetPrev);
                
                /**
                 * Sets (as xml) the "vRetPrev" element
                 */
                void xsetVRetPrev(br.inf.portalfiscal.nfe.TDec1302Opc vRetPrev);
                
                /**
                 * Unsets the "vRetPrev" element
                 */
                void unsetVRetPrev();
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total.RetTrib) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Total newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Total) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML transp(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Transp extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Transp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("transp95d8elemtype");
            
            /**
             * Gets the "modFrete" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete.Enum getModFrete();
            
            /**
             * Gets (as xml) the "modFrete" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete xgetModFrete();
            
            /**
             * Sets the "modFrete" element
             */
            void setModFrete(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete.Enum modFrete);
            
            /**
             * Sets (as xml) the "modFrete" element
             */
            void xsetModFrete(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete modFrete);
            
            /**
             * Gets the "transporta" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta getTransporta();
            
            /**
             * True if has "transporta" element
             */
            boolean isSetTransporta();
            
            /**
             * Sets the "transporta" element
             */
            void setTransporta(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta transporta);
            
            /**
             * Appends and returns a new empty "transporta" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta addNewTransporta();
            
            /**
             * Unsets the "transporta" element
             */
            void unsetTransporta();
            
            /**
             * Gets the "retTransp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp getRetTransp();
            
            /**
             * True if has "retTransp" element
             */
            boolean isSetRetTransp();
            
            /**
             * Sets the "retTransp" element
             */
            void setRetTransp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp retTransp);
            
            /**
             * Appends and returns a new empty "retTransp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp addNewRetTransp();
            
            /**
             * Unsets the "retTransp" element
             */
            void unsetRetTransp();
            
            /**
             * Gets the "veicTransp" element
             */
            br.inf.portalfiscal.nfe.TVeiculo getVeicTransp();
            
            /**
             * True if has "veicTransp" element
             */
            boolean isSetVeicTransp();
            
            /**
             * Sets the "veicTransp" element
             */
            void setVeicTransp(br.inf.portalfiscal.nfe.TVeiculo veicTransp);
            
            /**
             * Appends and returns a new empty "veicTransp" element
             */
            br.inf.portalfiscal.nfe.TVeiculo addNewVeicTransp();
            
            /**
             * Unsets the "veicTransp" element
             */
            void unsetVeicTransp();
            
            /**
             * Gets array of all "reboque" elements
             */
            br.inf.portalfiscal.nfe.TVeiculo[] getReboqueArray();
            
            /**
             * Gets ith "reboque" element
             */
            br.inf.portalfiscal.nfe.TVeiculo getReboqueArray(int i);
            
            /**
             * Returns number of "reboque" element
             */
            int sizeOfReboqueArray();
            
            /**
             * Sets array of all "reboque" element
             */
            void setReboqueArray(br.inf.portalfiscal.nfe.TVeiculo[] reboqueArray);
            
            /**
             * Sets ith "reboque" element
             */
            void setReboqueArray(int i, br.inf.portalfiscal.nfe.TVeiculo reboque);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "reboque" element
             */
            br.inf.portalfiscal.nfe.TVeiculo insertNewReboque(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "reboque" element
             */
            br.inf.portalfiscal.nfe.TVeiculo addNewReboque();
            
            /**
             * Removes the ith "reboque" element
             */
            void removeReboque(int i);
            
            /**
             * Gets the "vagao" element
             */
            java.lang.String getVagao();
            
            /**
             * Gets (as xml) the "vagao" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao xgetVagao();
            
            /**
             * True if has "vagao" element
             */
            boolean isSetVagao();
            
            /**
             * Sets the "vagao" element
             */
            void setVagao(java.lang.String vagao);
            
            /**
             * Sets (as xml) the "vagao" element
             */
            void xsetVagao(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao vagao);
            
            /**
             * Unsets the "vagao" element
             */
            void unsetVagao();
            
            /**
             * Gets the "balsa" element
             */
            java.lang.String getBalsa();
            
            /**
             * Gets (as xml) the "balsa" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa xgetBalsa();
            
            /**
             * True if has "balsa" element
             */
            boolean isSetBalsa();
            
            /**
             * Sets the "balsa" element
             */
            void setBalsa(java.lang.String balsa);
            
            /**
             * Sets (as xml) the "balsa" element
             */
            void xsetBalsa(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa balsa);
            
            /**
             * Unsets the "balsa" element
             */
            void unsetBalsa();
            
            /**
             * Gets array of all "vol" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol[] getVolArray();
            
            /**
             * Gets ith "vol" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol getVolArray(int i);
            
            /**
             * Returns number of "vol" element
             */
            int sizeOfVolArray();
            
            /**
             * Sets array of all "vol" element
             */
            void setVolArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol[] volArray);
            
            /**
             * Sets ith "vol" element
             */
            void setVolArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol vol);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "vol" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol insertNewVol(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "vol" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol addNewVol();
            
            /**
             * Removes the ith "vol" element
             */
            void removeVol(int i);
            
            /**
             * An XML modFrete(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$ModFrete.
             */
            public interface ModFrete extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ModFrete.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("modfrete3bdcelemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_0 = Enum.forString("0");
                static final Enum X_1 = Enum.forString("1");
                static final Enum X_2 = Enum.forString("2");
                static final Enum X_9 = Enum.forString("9");
                
                static final int INT_X_0 = Enum.INT_X_0;
                static final int INT_X_1 = Enum.INT_X_1;
                static final int INT_X_2 = Enum.INT_X_2;
                static final int INT_X_9 = Enum.INT_X_9;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$ModFrete.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_0
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_0 = 1;
                    static final int INT_X_1 = 2;
                    static final int INT_X_2 = 3;
                    static final int INT_X_9 = 4;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("0", INT_X_0),
                        new Enum("1", INT_X_1),
                        new Enum("2", INT_X_2),
                        new Enum("9", INT_X_9),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.ModFrete) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML transporta(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Transporta extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Transporta.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("transportaa8ccelemtype");
                
                /**
                 * Gets the "CNPJ" element
                 */
                java.lang.String getCNPJ();
                
                /**
                 * Gets (as xml) the "CNPJ" element
                 */
                br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
                
                /**
                 * True if has "CNPJ" element
                 */
                boolean isSetCNPJ();
                
                /**
                 * Sets the "CNPJ" element
                 */
                void setCNPJ(java.lang.String cnpj);
                
                /**
                 * Sets (as xml) the "CNPJ" element
                 */
                void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
                
                /**
                 * Unsets the "CNPJ" element
                 */
                void unsetCNPJ();
                
                /**
                 * Gets the "CPF" element
                 */
                java.lang.String getCPF();
                
                /**
                 * Gets (as xml) the "CPF" element
                 */
                br.inf.portalfiscal.nfe.TCpf xgetCPF();
                
                /**
                 * True if has "CPF" element
                 */
                boolean isSetCPF();
                
                /**
                 * Sets the "CPF" element
                 */
                void setCPF(java.lang.String cpf);
                
                /**
                 * Sets (as xml) the "CPF" element
                 */
                void xsetCPF(br.inf.portalfiscal.nfe.TCpf cpf);
                
                /**
                 * Unsets the "CPF" element
                 */
                void unsetCPF();
                
                /**
                 * Gets the "xNome" element
                 */
                java.lang.String getXNome();
                
                /**
                 * Gets (as xml) the "xNome" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome xgetXNome();
                
                /**
                 * True if has "xNome" element
                 */
                boolean isSetXNome();
                
                /**
                 * Sets the "xNome" element
                 */
                void setXNome(java.lang.String xNome);
                
                /**
                 * Sets (as xml) the "xNome" element
                 */
                void xsetXNome(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome xNome);
                
                /**
                 * Unsets the "xNome" element
                 */
                void unsetXNome();
                
                /**
                 * Gets the "IE" element
                 */
                java.lang.String getIE();
                
                /**
                 * Gets (as xml) the "IE" element
                 */
                br.inf.portalfiscal.nfe.TIeDest xgetIE();
                
                /**
                 * True if has "IE" element
                 */
                boolean isSetIE();
                
                /**
                 * Sets the "IE" element
                 */
                void setIE(java.lang.String ie);
                
                /**
                 * Sets (as xml) the "IE" element
                 */
                void xsetIE(br.inf.portalfiscal.nfe.TIeDest ie);
                
                /**
                 * Unsets the "IE" element
                 */
                void unsetIE();
                
                /**
                 * Gets the "xEnder" element
                 */
                java.lang.String getXEnder();
                
                /**
                 * Gets (as xml) the "xEnder" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder xgetXEnder();
                
                /**
                 * True if has "xEnder" element
                 */
                boolean isSetXEnder();
                
                /**
                 * Sets the "xEnder" element
                 */
                void setXEnder(java.lang.String xEnder);
                
                /**
                 * Sets (as xml) the "xEnder" element
                 */
                void xsetXEnder(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder xEnder);
                
                /**
                 * Unsets the "xEnder" element
                 */
                void unsetXEnder();
                
                /**
                 * Gets the "xMun" element
                 */
                java.lang.String getXMun();
                
                /**
                 * Gets (as xml) the "xMun" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun xgetXMun();
                
                /**
                 * True if has "xMun" element
                 */
                boolean isSetXMun();
                
                /**
                 * Sets the "xMun" element
                 */
                void setXMun(java.lang.String xMun);
                
                /**
                 * Sets (as xml) the "xMun" element
                 */
                void xsetXMun(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun xMun);
                
                /**
                 * Unsets the "xMun" element
                 */
                void unsetXMun();
                
                /**
                 * Gets the "UF" element
                 */
                br.inf.portalfiscal.nfe.TUf.Enum getUF();
                
                /**
                 * Gets (as xml) the "UF" element
                 */
                br.inf.portalfiscal.nfe.TUf xgetUF();
                
                /**
                 * True if has "UF" element
                 */
                boolean isSetUF();
                
                /**
                 * Sets the "UF" element
                 */
                void setUF(br.inf.portalfiscal.nfe.TUf.Enum uf);
                
                /**
                 * Sets (as xml) the "UF" element
                 */
                void xsetUF(br.inf.portalfiscal.nfe.TUf uf);
                
                /**
                 * Unsets the "UF" element
                 */
                void unsetUF();
                
                /**
                 * An XML xNome(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Transporta$XNome.
                 */
                public interface XNome extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XNome.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xnomee34felemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XNome) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xEnder(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Transporta$XEnder.
                 */
                public interface XEnder extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XEnder.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xenderf280elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XEnder) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xMun(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Transporta$XMun.
                 */
                public interface XMun extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XMun.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xmun8342elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta.XMun) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Transporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML retTransp(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface RetTransp extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(RetTransp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("rettranspbd8delemtype");
                
                /**
                 * Gets the "vServ" element
                 */
                java.lang.String getVServ();
                
                /**
                 * Gets (as xml) the "vServ" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVServ();
                
                /**
                 * Sets the "vServ" element
                 */
                void setVServ(java.lang.String vServ);
                
                /**
                 * Sets (as xml) the "vServ" element
                 */
                void xsetVServ(br.inf.portalfiscal.nfe.TDec1302 vServ);
                
                /**
                 * Gets the "vBCRet" element
                 */
                java.lang.String getVBCRet();
                
                /**
                 * Gets (as xml) the "vBCRet" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVBCRet();
                
                /**
                 * Sets the "vBCRet" element
                 */
                void setVBCRet(java.lang.String vbcRet);
                
                /**
                 * Sets (as xml) the "vBCRet" element
                 */
                void xsetVBCRet(br.inf.portalfiscal.nfe.TDec1302 vbcRet);
                
                /**
                 * Gets the "pICMSRet" element
                 */
                java.lang.String getPICMSRet();
                
                /**
                 * Gets (as xml) the "pICMSRet" element
                 */
                br.inf.portalfiscal.nfe.TDec0302A04 xgetPICMSRet();
                
                /**
                 * Sets the "pICMSRet" element
                 */
                void setPICMSRet(java.lang.String picmsRet);
                
                /**
                 * Sets (as xml) the "pICMSRet" element
                 */
                void xsetPICMSRet(br.inf.portalfiscal.nfe.TDec0302A04 picmsRet);
                
                /**
                 * Gets the "vICMSRet" element
                 */
                java.lang.String getVICMSRet();
                
                /**
                 * Gets (as xml) the "vICMSRet" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVICMSRet();
                
                /**
                 * Sets the "vICMSRet" element
                 */
                void setVICMSRet(java.lang.String vicmsRet);
                
                /**
                 * Sets (as xml) the "vICMSRet" element
                 */
                void xsetVICMSRet(br.inf.portalfiscal.nfe.TDec1302 vicmsRet);
                
                /**
                 * Gets the "CFOP" element
                 */
                br.inf.portalfiscal.nfe.TCfopTransp.Enum getCFOP();
                
                /**
                 * Gets (as xml) the "CFOP" element
                 */
                br.inf.portalfiscal.nfe.TCfopTransp xgetCFOP();
                
                /**
                 * Sets the "CFOP" element
                 */
                void setCFOP(br.inf.portalfiscal.nfe.TCfopTransp.Enum cfop);
                
                /**
                 * Sets (as xml) the "CFOP" element
                 */
                void xsetCFOP(br.inf.portalfiscal.nfe.TCfopTransp cfop);
                
                /**
                 * Gets the "cMunFG" element
                 */
                java.lang.String getCMunFG();
                
                /**
                 * Gets (as xml) the "cMunFG" element
                 */
                br.inf.portalfiscal.nfe.TCodMunIBGE xgetCMunFG();
                
                /**
                 * Sets the "cMunFG" element
                 */
                void setCMunFG(java.lang.String cMunFG);
                
                /**
                 * Sets (as xml) the "cMunFG" element
                 */
                void xsetCMunFG(br.inf.portalfiscal.nfe.TCodMunIBGE cMunFG);
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.RetTransp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML vagao(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vagao.
             */
            public interface Vagao extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Vagao.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("vagaoc38eelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vagao) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML balsa(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Balsa.
             */
            public interface Balsa extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Balsa.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("balsa0adfelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Balsa) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML vol(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Vol extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Vol.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("vol6e97elemtype");
                
                /**
                 * Gets the "qVol" element
                 */
                java.lang.String getQVol();
                
                /**
                 * Gets (as xml) the "qVol" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol xgetQVol();
                
                /**
                 * True if has "qVol" element
                 */
                boolean isSetQVol();
                
                /**
                 * Sets the "qVol" element
                 */
                void setQVol(java.lang.String qVol);
                
                /**
                 * Sets (as xml) the "qVol" element
                 */
                void xsetQVol(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol qVol);
                
                /**
                 * Unsets the "qVol" element
                 */
                void unsetQVol();
                
                /**
                 * Gets the "esp" element
                 */
                java.lang.String getEsp();
                
                /**
                 * Gets (as xml) the "esp" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp xgetEsp();
                
                /**
                 * True if has "esp" element
                 */
                boolean isSetEsp();
                
                /**
                 * Sets the "esp" element
                 */
                void setEsp(java.lang.String esp);
                
                /**
                 * Sets (as xml) the "esp" element
                 */
                void xsetEsp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp esp);
                
                /**
                 * Unsets the "esp" element
                 */
                void unsetEsp();
                
                /**
                 * Gets the "marca" element
                 */
                java.lang.String getMarca();
                
                /**
                 * Gets (as xml) the "marca" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca xgetMarca();
                
                /**
                 * True if has "marca" element
                 */
                boolean isSetMarca();
                
                /**
                 * Sets the "marca" element
                 */
                void setMarca(java.lang.String marca);
                
                /**
                 * Sets (as xml) the "marca" element
                 */
                void xsetMarca(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca marca);
                
                /**
                 * Unsets the "marca" element
                 */
                void unsetMarca();
                
                /**
                 * Gets the "nVol" element
                 */
                java.lang.String getNVol();
                
                /**
                 * Gets (as xml) the "nVol" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol xgetNVol();
                
                /**
                 * True if has "nVol" element
                 */
                boolean isSetNVol();
                
                /**
                 * Sets the "nVol" element
                 */
                void setNVol(java.lang.String nVol);
                
                /**
                 * Sets (as xml) the "nVol" element
                 */
                void xsetNVol(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol nVol);
                
                /**
                 * Unsets the "nVol" element
                 */
                void unsetNVol();
                
                /**
                 * Gets the "pesoL" element
                 */
                java.lang.String getPesoL();
                
                /**
                 * Gets (as xml) the "pesoL" element
                 */
                br.inf.portalfiscal.nfe.TDec1203 xgetPesoL();
                
                /**
                 * True if has "pesoL" element
                 */
                boolean isSetPesoL();
                
                /**
                 * Sets the "pesoL" element
                 */
                void setPesoL(java.lang.String pesoL);
                
                /**
                 * Sets (as xml) the "pesoL" element
                 */
                void xsetPesoL(br.inf.portalfiscal.nfe.TDec1203 pesoL);
                
                /**
                 * Unsets the "pesoL" element
                 */
                void unsetPesoL();
                
                /**
                 * Gets the "pesoB" element
                 */
                java.lang.String getPesoB();
                
                /**
                 * Gets (as xml) the "pesoB" element
                 */
                br.inf.portalfiscal.nfe.TDec1203 xgetPesoB();
                
                /**
                 * True if has "pesoB" element
                 */
                boolean isSetPesoB();
                
                /**
                 * Sets the "pesoB" element
                 */
                void setPesoB(java.lang.String pesoB);
                
                /**
                 * Sets (as xml) the "pesoB" element
                 */
                void xsetPesoB(br.inf.portalfiscal.nfe.TDec1203 pesoB);
                
                /**
                 * Unsets the "pesoB" element
                 */
                void unsetPesoB();
                
                /**
                 * Gets array of all "lacres" elements
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres[] getLacresArray();
                
                /**
                 * Gets ith "lacres" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres getLacresArray(int i);
                
                /**
                 * Returns number of "lacres" element
                 */
                int sizeOfLacresArray();
                
                /**
                 * Sets array of all "lacres" element
                 */
                void setLacresArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres[] lacresArray);
                
                /**
                 * Sets ith "lacres" element
                 */
                void setLacresArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres lacres);
                
                /**
                 * Inserts and returns a new empty value (as xml) as the ith "lacres" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres insertNewLacres(int i);
                
                /**
                 * Appends and returns a new empty value (as xml) as the last "lacres" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres addNewLacres();
                
                /**
                 * Removes the ith "lacres" element
                 */
                void removeLacres(int i);
                
                /**
                 * An XML qVol(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vol$QVol.
                 */
                public interface QVol extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(QVol.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("qvol5255elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.QVol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML esp(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vol$Esp.
                 */
                public interface Esp extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Esp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("espd505elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Esp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML marca(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vol$Marca.
                 */
                public interface Marca extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Marca.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("marca0d3felemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Marca) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML nVol(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vol$NVol.
                 */
                public interface NVol extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NVol.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nvol3078elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.NVol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML lacres(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is a complex type.
                 */
                public interface Lacres extends org.apache.xmlbeans.XmlObject
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Lacres.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("lacres3605elemtype");
                    
                    /**
                     * Gets the "nLacre" element
                     */
                    java.lang.String getNLacre();
                    
                    /**
                     * Gets (as xml) the "nLacre" element
                     */
                    br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre xgetNLacre();
                    
                    /**
                     * Sets the "nLacre" element
                     */
                    void setNLacre(java.lang.String nLacre);
                    
                    /**
                     * Sets (as xml) the "nLacre" element
                     */
                    void xsetNLacre(br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre nLacre);
                    
                    /**
                     * An XML nLacre(@http://www.portalfiscal.inf.br/nfe).
                     *
                     * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Transp$Vol$Lacres$NLacre.
                     */
                    public interface NLacre extends br.inf.portalfiscal.nfe.TString
                    {
                      public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NLacre.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nlacre9f96elemtype");
                      
                      /**
                       * A factory class with static methods for creating instances
                       * of this type.
                       */
                      
                      public static final class Factory
                      {
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre newValue(java.lang.Object obj) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre) type.newValue( obj ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre newInstance() {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                        
                        public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre newInstance(org.apache.xmlbeans.XmlOptions options) {
                          return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres.NLacre) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                        
                        private Factory() { } // No instance of this class allowed
                      }
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol.Lacres) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp.Vol) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Transp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML cobr(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Cobr extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Cobr.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cobra864elemtype");
            
            /**
             * Gets the "fat" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat getFat();
            
            /**
             * True if has "fat" element
             */
            boolean isSetFat();
            
            /**
             * Sets the "fat" element
             */
            void setFat(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat fat);
            
            /**
             * Appends and returns a new empty "fat" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat addNewFat();
            
            /**
             * Unsets the "fat" element
             */
            void unsetFat();
            
            /**
             * Gets array of all "dup" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup[] getDupArray();
            
            /**
             * Gets ith "dup" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup getDupArray(int i);
            
            /**
             * Returns number of "dup" element
             */
            int sizeOfDupArray();
            
            /**
             * Sets array of all "dup" element
             */
            void setDupArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup[] dupArray);
            
            /**
             * Sets ith "dup" element
             */
            void setDupArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup dup);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "dup" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup insertNewDup(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "dup" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup addNewDup();
            
            /**
             * Removes the ith "dup" element
             */
            void removeDup(int i);
            
            /**
             * An XML fat(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Fat extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Fat.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("fate3a9elemtype");
                
                /**
                 * Gets the "nFat" element
                 */
                java.lang.String getNFat();
                
                /**
                 * Gets (as xml) the "nFat" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat xgetNFat();
                
                /**
                 * True if has "nFat" element
                 */
                boolean isSetNFat();
                
                /**
                 * Sets the "nFat" element
                 */
                void setNFat(java.lang.String nFat);
                
                /**
                 * Sets (as xml) the "nFat" element
                 */
                void xsetNFat(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat nFat);
                
                /**
                 * Unsets the "nFat" element
                 */
                void unsetNFat();
                
                /**
                 * Gets the "vOrig" element
                 */
                java.lang.String getVOrig();
                
                /**
                 * Gets (as xml) the "vOrig" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVOrig();
                
                /**
                 * True if has "vOrig" element
                 */
                boolean isSetVOrig();
                
                /**
                 * Sets the "vOrig" element
                 */
                void setVOrig(java.lang.String vOrig);
                
                /**
                 * Sets (as xml) the "vOrig" element
                 */
                void xsetVOrig(br.inf.portalfiscal.nfe.TDec1302Opc vOrig);
                
                /**
                 * Unsets the "vOrig" element
                 */
                void unsetVOrig();
                
                /**
                 * Gets the "vDesc" element
                 */
                java.lang.String getVDesc();
                
                /**
                 * Gets (as xml) the "vDesc" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDesc();
                
                /**
                 * True if has "vDesc" element
                 */
                boolean isSetVDesc();
                
                /**
                 * Sets the "vDesc" element
                 */
                void setVDesc(java.lang.String vDesc);
                
                /**
                 * Sets (as xml) the "vDesc" element
                 */
                void xsetVDesc(br.inf.portalfiscal.nfe.TDec1302Opc vDesc);
                
                /**
                 * Unsets the "vDesc" element
                 */
                void unsetVDesc();
                
                /**
                 * Gets the "vLiq" element
                 */
                java.lang.String getVLiq();
                
                /**
                 * Gets (as xml) the "vLiq" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVLiq();
                
                /**
                 * True if has "vLiq" element
                 */
                boolean isSetVLiq();
                
                /**
                 * Sets the "vLiq" element
                 */
                void setVLiq(java.lang.String vLiq);
                
                /**
                 * Sets (as xml) the "vLiq" element
                 */
                void xsetVLiq(br.inf.portalfiscal.nfe.TDec1302Opc vLiq);
                
                /**
                 * Unsets the "vLiq" element
                 */
                void unsetVLiq();
                
                /**
                 * An XML nFat(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cobr$Fat$NFat.
                 */
                public interface NFat extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NFat.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nfat3c10elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat.NFat) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Fat) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML dup(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Dup extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Dup.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("dup530felemtype");
                
                /**
                 * Gets the "nDup" element
                 */
                java.lang.String getNDup();
                
                /**
                 * Gets (as xml) the "nDup" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup xgetNDup();
                
                /**
                 * True if has "nDup" element
                 */
                boolean isSetNDup();
                
                /**
                 * Sets the "nDup" element
                 */
                void setNDup(java.lang.String nDup);
                
                /**
                 * Sets (as xml) the "nDup" element
                 */
                void xsetNDup(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup nDup);
                
                /**
                 * Unsets the "nDup" element
                 */
                void unsetNDup();
                
                /**
                 * Gets the "dVenc" element
                 */
                java.lang.String getDVenc();
                
                /**
                 * Gets (as xml) the "dVenc" element
                 */
                br.inf.portalfiscal.nfe.TData xgetDVenc();
                
                /**
                 * True if has "dVenc" element
                 */
                boolean isSetDVenc();
                
                /**
                 * Sets the "dVenc" element
                 */
                void setDVenc(java.lang.String dVenc);
                
                /**
                 * Sets (as xml) the "dVenc" element
                 */
                void xsetDVenc(br.inf.portalfiscal.nfe.TData dVenc);
                
                /**
                 * Unsets the "dVenc" element
                 */
                void unsetDVenc();
                
                /**
                 * Gets the "vDup" element
                 */
                java.lang.String getVDup();
                
                /**
                 * Gets (as xml) the "vDup" element
                 */
                br.inf.portalfiscal.nfe.TDec1302Opc xgetVDup();
                
                /**
                 * Sets the "vDup" element
                 */
                void setVDup(java.lang.String vDup);
                
                /**
                 * Sets (as xml) the "vDup" element
                 */
                void xsetVDup(br.inf.portalfiscal.nfe.TDec1302Opc vDup);
                
                /**
                 * An XML nDup(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cobr$Dup$NDup.
                 */
                public interface NDup extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NDup.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ndup765celemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup.NDup) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr.Dup) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cobr) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML pag(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Pag extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Pag.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("pag557aelemtype");
            
            /**
             * Gets the "tPag" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag.Enum getTPag();
            
            /**
             * Gets (as xml) the "tPag" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag xgetTPag();
            
            /**
             * Sets the "tPag" element
             */
            void setTPag(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag.Enum tPag);
            
            /**
             * Sets (as xml) the "tPag" element
             */
            void xsetTPag(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag tPag);
            
            /**
             * Gets the "vPag" element
             */
            java.lang.String getVPag();
            
            /**
             * Gets (as xml) the "vPag" element
             */
            br.inf.portalfiscal.nfe.TDec1302 xgetVPag();
            
            /**
             * Sets the "vPag" element
             */
            void setVPag(java.lang.String vPag);
            
            /**
             * Sets (as xml) the "vPag" element
             */
            void xsetVPag(br.inf.portalfiscal.nfe.TDec1302 vPag);
            
            /**
             * Gets the "card" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card getCard();
            
            /**
             * True if has "card" element
             */
            boolean isSetCard();
            
            /**
             * Sets the "card" element
             */
            void setCard(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card card);
            
            /**
             * Appends and returns a new empty "card" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card addNewCard();
            
            /**
             * Unsets the "card" element
             */
            void unsetCard();
            
            /**
             * An XML tPag(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Pag$TPag.
             */
            public interface TPag extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TPag.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tpag1b1celemtype");
                
                org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                
                static final Enum X_01 = Enum.forString("01");
                static final Enum X_02 = Enum.forString("02");
                static final Enum X_03 = Enum.forString("03");
                static final Enum X_04 = Enum.forString("04");
                static final Enum X_05 = Enum.forString("05");
                static final Enum X_10 = Enum.forString("10");
                static final Enum X_11 = Enum.forString("11");
                static final Enum X_12 = Enum.forString("12");
                static final Enum X_13 = Enum.forString("13");
                static final Enum X_99 = Enum.forString("99");
                
                static final int INT_X_01 = Enum.INT_X_01;
                static final int INT_X_02 = Enum.INT_X_02;
                static final int INT_X_03 = Enum.INT_X_03;
                static final int INT_X_04 = Enum.INT_X_04;
                static final int INT_X_05 = Enum.INT_X_05;
                static final int INT_X_10 = Enum.INT_X_10;
                static final int INT_X_11 = Enum.INT_X_11;
                static final int INT_X_12 = Enum.INT_X_12;
                static final int INT_X_13 = Enum.INT_X_13;
                static final int INT_X_99 = Enum.INT_X_99;
                
                /**
                 * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Pag$TPag.
                 * These enum values can be used as follows:
                 * <pre>
                 * enum.toString(); // returns the string value of the enum
                 * enum.intValue(); // returns an int value, useful for switches
                 * // e.g., case Enum.INT_X_01
                 * Enum.forString(s); // returns the enum value for a string
                 * Enum.forInt(i); // returns the enum value for an int
                 * </pre>
                 * Enumeration objects are immutable singleton objects that
                 * can be compared using == object equality. They have no
                 * public constructor. See the constants defined within this
                 * class for all the valid values.
                 */
                static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                {
                    /**
                     * Returns the enum value for a string, or null if none.
                     */
                    public static Enum forString(java.lang.String s)
                        { return (Enum)table.forString(s); }
                    /**
                     * Returns the enum value corresponding to an int, or null if none.
                     */
                    public static Enum forInt(int i)
                        { return (Enum)table.forInt(i); }
                    
                    private Enum(java.lang.String s, int i)
                        { super(s, i); }
                    
                    static final int INT_X_01 = 1;
                    static final int INT_X_02 = 2;
                    static final int INT_X_03 = 3;
                    static final int INT_X_04 = 4;
                    static final int INT_X_05 = 5;
                    static final int INT_X_10 = 6;
                    static final int INT_X_11 = 7;
                    static final int INT_X_12 = 8;
                    static final int INT_X_13 = 9;
                    static final int INT_X_99 = 10;
                    
                    public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                        new org.apache.xmlbeans.StringEnumAbstractBase.Table
                    (
                      new Enum[]
                      {
                        new Enum("01", INT_X_01),
                        new Enum("02", INT_X_02),
                        new Enum("03", INT_X_03),
                        new Enum("04", INT_X_04),
                        new Enum("05", INT_X_05),
                        new Enum("10", INT_X_10),
                        new Enum("11", INT_X_11),
                        new Enum("12", INT_X_12),
                        new Enum("13", INT_X_13),
                        new Enum("99", INT_X_99),
                      }
                    );
                    private static final long serialVersionUID = 1L;
                    private java.lang.Object readResolve() { return forInt(intValue()); } 
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.TPag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML card(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Card extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Card.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("card474eelemtype");
                
                /**
                 * Gets the "CNPJ" element
                 */
                java.lang.String getCNPJ();
                
                /**
                 * Gets (as xml) the "CNPJ" element
                 */
                br.inf.portalfiscal.nfe.TCnpj xgetCNPJ();
                
                /**
                 * Sets the "CNPJ" element
                 */
                void setCNPJ(java.lang.String cnpj);
                
                /**
                 * Sets (as xml) the "CNPJ" element
                 */
                void xsetCNPJ(br.inf.portalfiscal.nfe.TCnpj cnpj);
                
                /**
                 * Gets the "tBand" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand.Enum getTBand();
                
                /**
                 * Gets (as xml) the "tBand" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand xgetTBand();
                
                /**
                 * Sets the "tBand" element
                 */
                void setTBand(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand.Enum tBand);
                
                /**
                 * Sets (as xml) the "tBand" element
                 */
                void xsetTBand(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand tBand);
                
                /**
                 * Gets the "cAut" element
                 */
                java.lang.String getCAut();
                
                /**
                 * Gets (as xml) the "cAut" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut xgetCAut();
                
                /**
                 * Sets the "cAut" element
                 */
                void setCAut(java.lang.String cAut);
                
                /**
                 * Sets (as xml) the "cAut" element
                 */
                void xsetCAut(br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut cAut);
                
                /**
                 * An XML tBand(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Pag$Card$TBand.
                 */
                public interface TBand extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(TBand.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("tbandd683elemtype");
                    
                    org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                    void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                    
                    static final Enum X_01 = Enum.forString("01");
                    static final Enum X_02 = Enum.forString("02");
                    static final Enum X_03 = Enum.forString("03");
                    static final Enum X_04 = Enum.forString("04");
                    static final Enum X_99 = Enum.forString("99");
                    
                    static final int INT_X_01 = Enum.INT_X_01;
                    static final int INT_X_02 = Enum.INT_X_02;
                    static final int INT_X_03 = Enum.INT_X_03;
                    static final int INT_X_04 = Enum.INT_X_04;
                    static final int INT_X_99 = Enum.INT_X_99;
                    
                    /**
                     * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$Pag$Card$TBand.
                     * These enum values can be used as follows:
                     * <pre>
                     * enum.toString(); // returns the string value of the enum
                     * enum.intValue(); // returns an int value, useful for switches
                     * // e.g., case Enum.INT_X_01
                     * Enum.forString(s); // returns the enum value for a string
                     * Enum.forInt(i); // returns the enum value for an int
                     * </pre>
                     * Enumeration objects are immutable singleton objects that
                     * can be compared using == object equality. They have no
                     * public constructor. See the constants defined within this
                     * class for all the valid values.
                     */
                    static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                    {
                      /**
                       * Returns the enum value for a string, or null if none.
                       */
                      public static Enum forString(java.lang.String s)
                          { return (Enum)table.forString(s); }
                      /**
                       * Returns the enum value corresponding to an int, or null if none.
                       */
                      public static Enum forInt(int i)
                          { return (Enum)table.forInt(i); }
                      
                      private Enum(java.lang.String s, int i)
                          { super(s, i); }
                      
                      static final int INT_X_01 = 1;
                      static final int INT_X_02 = 2;
                      static final int INT_X_03 = 3;
                      static final int INT_X_04 = 4;
                      static final int INT_X_99 = 5;
                      
                      public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                          new org.apache.xmlbeans.StringEnumAbstractBase.Table
                      (
                        new Enum[]
                        {
                          new Enum("01", INT_X_01),
                          new Enum("02", INT_X_02),
                          new Enum("03", INT_X_03),
                          new Enum("04", INT_X_04),
                          new Enum("99", INT_X_99),
                        }
                      );
                      private static final long serialVersionUID = 1L;
                      private java.lang.Object readResolve() { return forInt(intValue()); } 
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.TBand) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML cAut(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Pag$Card$CAut.
                 */
                public interface CAut extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(CAut.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("cautff47elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card.CAut) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag.Card) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Pag) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML infAdic(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface InfAdic extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(InfAdic.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("infadic8112elemtype");
            
            /**
             * Gets the "infAdFisco" element
             */
            java.lang.String getInfAdFisco();
            
            /**
             * Gets (as xml) the "infAdFisco" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco xgetInfAdFisco();
            
            /**
             * True if has "infAdFisco" element
             */
            boolean isSetInfAdFisco();
            
            /**
             * Sets the "infAdFisco" element
             */
            void setInfAdFisco(java.lang.String infAdFisco);
            
            /**
             * Sets (as xml) the "infAdFisco" element
             */
            void xsetInfAdFisco(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco infAdFisco);
            
            /**
             * Unsets the "infAdFisco" element
             */
            void unsetInfAdFisco();
            
            /**
             * Gets the "infCpl" element
             */
            java.lang.String getInfCpl();
            
            /**
             * Gets (as xml) the "infCpl" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl xgetInfCpl();
            
            /**
             * True if has "infCpl" element
             */
            boolean isSetInfCpl();
            
            /**
             * Sets the "infCpl" element
             */
            void setInfCpl(java.lang.String infCpl);
            
            /**
             * Sets (as xml) the "infCpl" element
             */
            void xsetInfCpl(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl infCpl);
            
            /**
             * Unsets the "infCpl" element
             */
            void unsetInfCpl();
            
            /**
             * Gets array of all "obsCont" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont[] getObsContArray();
            
            /**
             * Gets ith "obsCont" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont getObsContArray(int i);
            
            /**
             * Returns number of "obsCont" element
             */
            int sizeOfObsContArray();
            
            /**
             * Sets array of all "obsCont" element
             */
            void setObsContArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont[] obsContArray);
            
            /**
             * Sets ith "obsCont" element
             */
            void setObsContArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont obsCont);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "obsCont" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont insertNewObsCont(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "obsCont" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont addNewObsCont();
            
            /**
             * Removes the ith "obsCont" element
             */
            void removeObsCont(int i);
            
            /**
             * Gets array of all "obsFisco" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco[] getObsFiscoArray();
            
            /**
             * Gets ith "obsFisco" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco getObsFiscoArray(int i);
            
            /**
             * Returns number of "obsFisco" element
             */
            int sizeOfObsFiscoArray();
            
            /**
             * Sets array of all "obsFisco" element
             */
            void setObsFiscoArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco[] obsFiscoArray);
            
            /**
             * Sets ith "obsFisco" element
             */
            void setObsFiscoArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco obsFisco);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "obsFisco" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco insertNewObsFisco(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "obsFisco" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco addNewObsFisco();
            
            /**
             * Removes the ith "obsFisco" element
             */
            void removeObsFisco(int i);
            
            /**
             * Gets array of all "procRef" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef[] getProcRefArray();
            
            /**
             * Gets ith "procRef" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef getProcRefArray(int i);
            
            /**
             * Returns number of "procRef" element
             */
            int sizeOfProcRefArray();
            
            /**
             * Sets array of all "procRef" element
             */
            void setProcRefArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef[] procRefArray);
            
            /**
             * Sets ith "procRef" element
             */
            void setProcRefArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef procRef);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "procRef" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef insertNewProcRef(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "procRef" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef addNewProcRef();
            
            /**
             * Removes the ith "procRef" element
             */
            void removeProcRef(int i);
            
            /**
             * An XML infAdFisco(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$InfAdFisco.
             */
            public interface InfAdFisco extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(InfAdFisco.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("infadfiscof7feelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfAdFisco) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML infCpl(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$InfCpl.
             */
            public interface InfCpl extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(InfCpl.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("infcpl16b8elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.InfCpl) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML obsCont(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ObsCont extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ObsCont.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("obsconted14elemtype");
                
                /**
                 * Gets the "xTexto" element
                 */
                java.lang.String getXTexto();
                
                /**
                 * Gets (as xml) the "xTexto" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto xgetXTexto();
                
                /**
                 * Sets the "xTexto" element
                 */
                void setXTexto(java.lang.String xTexto);
                
                /**
                 * Sets (as xml) the "xTexto" element
                 */
                void xsetXTexto(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto xTexto);
                
                /**
                 * Gets the "xCampo" attribute
                 */
                java.lang.String getXCampo();
                
                /**
                 * Gets (as xml) the "xCampo" attribute
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo xgetXCampo();
                
                /**
                 * Sets the "xCampo" attribute
                 */
                void setXCampo(java.lang.String xCampo);
                
                /**
                 * Sets (as xml) the "xCampo" attribute
                 */
                void xsetXCampo(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo xCampo);
                
                /**
                 * An XML xTexto(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ObsCont$XTexto.
                 */
                public interface XTexto extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XTexto.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xtexto1c6eelemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XTexto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xCampo(@).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ObsCont$XCampo.
                 */
                public interface XCampo extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XCampo.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xcampo94beattrtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont.XCampo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsCont) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML obsFisco(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ObsFisco extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ObsFisco.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("obsfiscobc1aelemtype");
                
                /**
                 * Gets the "xTexto" element
                 */
                java.lang.String getXTexto();
                
                /**
                 * Gets (as xml) the "xTexto" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto xgetXTexto();
                
                /**
                 * Sets the "xTexto" element
                 */
                void setXTexto(java.lang.String xTexto);
                
                /**
                 * Sets (as xml) the "xTexto" element
                 */
                void xsetXTexto(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto xTexto);
                
                /**
                 * Gets the "xCampo" attribute
                 */
                java.lang.String getXCampo();
                
                /**
                 * Gets (as xml) the "xCampo" attribute
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo xgetXCampo();
                
                /**
                 * Sets the "xCampo" attribute
                 */
                void setXCampo(java.lang.String xCampo);
                
                /**
                 * Sets (as xml) the "xCampo" attribute
                 */
                void xsetXCampo(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo xCampo);
                
                /**
                 * An XML xTexto(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ObsFisco$XTexto.
                 */
                public interface XTexto extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XTexto.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xtexto7800elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XTexto) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML xCampo(@).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ObsFisco$XCampo.
                 */
                public interface XCampo extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XCampo.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xcampo09b0attrtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco.XCampo) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ObsFisco) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML procRef(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ProcRef extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ProcRef.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("procref53e9elemtype");
                
                /**
                 * Gets the "nProc" element
                 */
                java.lang.String getNProc();
                
                /**
                 * Gets (as xml) the "nProc" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc xgetNProc();
                
                /**
                 * Sets the "nProc" element
                 */
                void setNProc(java.lang.String nProc);
                
                /**
                 * Sets (as xml) the "nProc" element
                 */
                void xsetNProc(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc nProc);
                
                /**
                 * Gets the "indProc" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc.Enum getIndProc();
                
                /**
                 * Gets (as xml) the "indProc" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc xgetIndProc();
                
                /**
                 * Sets the "indProc" element
                 */
                void setIndProc(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc.Enum indProc);
                
                /**
                 * Sets (as xml) the "indProc" element
                 */
                void xsetIndProc(br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc indProc);
                
                /**
                 * An XML nProc(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ProcRef$NProc.
                 */
                public interface NProc extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(NProc.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("nproc3299elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.NProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * An XML indProc(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ProcRef$IndProc.
                 */
                public interface IndProc extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(IndProc.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("indproc7c88elemtype");
                    
                    org.apache.xmlbeans.StringEnumAbstractBase enumValue();
                    void set(org.apache.xmlbeans.StringEnumAbstractBase e);
                    
                    static final Enum X_0 = Enum.forString("0");
                    static final Enum X_1 = Enum.forString("1");
                    static final Enum X_2 = Enum.forString("2");
                    static final Enum X_3 = Enum.forString("3");
                    static final Enum X_9 = Enum.forString("9");
                    
                    static final int INT_X_0 = Enum.INT_X_0;
                    static final int INT_X_1 = Enum.INT_X_1;
                    static final int INT_X_2 = Enum.INT_X_2;
                    static final int INT_X_3 = Enum.INT_X_3;
                    static final int INT_X_9 = Enum.INT_X_9;
                    
                    /**
                     * Enumeration value class for br.inf.portalfiscal.nfe.TNFe$InfNFe$InfAdic$ProcRef$IndProc.
                     * These enum values can be used as follows:
                     * <pre>
                     * enum.toString(); // returns the string value of the enum
                     * enum.intValue(); // returns an int value, useful for switches
                     * // e.g., case Enum.INT_X_0
                     * Enum.forString(s); // returns the enum value for a string
                     * Enum.forInt(i); // returns the enum value for an int
                     * </pre>
                     * Enumeration objects are immutable singleton objects that
                     * can be compared using == object equality. They have no
                     * public constructor. See the constants defined within this
                     * class for all the valid values.
                     */
                    static final class Enum extends org.apache.xmlbeans.StringEnumAbstractBase
                    {
                      /**
                       * Returns the enum value for a string, or null if none.
                       */
                      public static Enum forString(java.lang.String s)
                          { return (Enum)table.forString(s); }
                      /**
                       * Returns the enum value corresponding to an int, or null if none.
                       */
                      public static Enum forInt(int i)
                          { return (Enum)table.forInt(i); }
                      
                      private Enum(java.lang.String s, int i)
                          { super(s, i); }
                      
                      static final int INT_X_0 = 1;
                      static final int INT_X_1 = 2;
                      static final int INT_X_2 = 3;
                      static final int INT_X_3 = 4;
                      static final int INT_X_9 = 5;
                      
                      public static final org.apache.xmlbeans.StringEnumAbstractBase.Table table =
                          new org.apache.xmlbeans.StringEnumAbstractBase.Table
                      (
                        new Enum[]
                        {
                          new Enum("0", INT_X_0),
                          new Enum("1", INT_X_1),
                          new Enum("2", INT_X_2),
                          new Enum("3", INT_X_3),
                          new Enum("9", INT_X_9),
                        }
                      );
                      private static final long serialVersionUID = 1L;
                      private java.lang.Object readResolve() { return forInt(intValue()); } 
                    }
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef.IndProc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic.ProcRef) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.InfAdic) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML exporta(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Exporta extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Exporta.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("exporta6583elemtype");
            
            /**
             * Gets the "UFSaidaPais" element
             */
            br.inf.portalfiscal.nfe.TUfEmi.Enum getUFSaidaPais();
            
            /**
             * Gets (as xml) the "UFSaidaPais" element
             */
            br.inf.portalfiscal.nfe.TUfEmi xgetUFSaidaPais();
            
            /**
             * Sets the "UFSaidaPais" element
             */
            void setUFSaidaPais(br.inf.portalfiscal.nfe.TUfEmi.Enum ufSaidaPais);
            
            /**
             * Sets (as xml) the "UFSaidaPais" element
             */
            void xsetUFSaidaPais(br.inf.portalfiscal.nfe.TUfEmi ufSaidaPais);
            
            /**
             * Gets the "xLocExporta" element
             */
            java.lang.String getXLocExporta();
            
            /**
             * Gets (as xml) the "xLocExporta" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta xgetXLocExporta();
            
            /**
             * Sets the "xLocExporta" element
             */
            void setXLocExporta(java.lang.String xLocExporta);
            
            /**
             * Sets (as xml) the "xLocExporta" element
             */
            void xsetXLocExporta(br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta xLocExporta);
            
            /**
             * Gets the "xLocDespacho" element
             */
            java.lang.String getXLocDespacho();
            
            /**
             * Gets (as xml) the "xLocDespacho" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho xgetXLocDespacho();
            
            /**
             * True if has "xLocDespacho" element
             */
            boolean isSetXLocDespacho();
            
            /**
             * Sets the "xLocDespacho" element
             */
            void setXLocDespacho(java.lang.String xLocDespacho);
            
            /**
             * Sets (as xml) the "xLocDespacho" element
             */
            void xsetXLocDespacho(br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho xLocDespacho);
            
            /**
             * Unsets the "xLocDespacho" element
             */
            void unsetXLocDespacho();
            
            /**
             * An XML xLocExporta(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Exporta$XLocExporta.
             */
            public interface XLocExporta extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XLocExporta.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xlocexporta4852elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocExporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xLocDespacho(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Exporta$XLocDespacho.
             */
            public interface XLocDespacho extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XLocDespacho.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xlocdespacho04b8elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta.XLocDespacho) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Exporta) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML compra(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Compra extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Compra.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("compra4362elemtype");
            
            /**
             * Gets the "xNEmp" element
             */
            java.lang.String getXNEmp();
            
            /**
             * Gets (as xml) the "xNEmp" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp xgetXNEmp();
            
            /**
             * True if has "xNEmp" element
             */
            boolean isSetXNEmp();
            
            /**
             * Sets the "xNEmp" element
             */
            void setXNEmp(java.lang.String xnEmp);
            
            /**
             * Sets (as xml) the "xNEmp" element
             */
            void xsetXNEmp(br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp xnEmp);
            
            /**
             * Unsets the "xNEmp" element
             */
            void unsetXNEmp();
            
            /**
             * Gets the "xPed" element
             */
            java.lang.String getXPed();
            
            /**
             * Gets (as xml) the "xPed" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed xgetXPed();
            
            /**
             * True if has "xPed" element
             */
            boolean isSetXPed();
            
            /**
             * Sets the "xPed" element
             */
            void setXPed(java.lang.String xPed);
            
            /**
             * Sets (as xml) the "xPed" element
             */
            void xsetXPed(br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed xPed);
            
            /**
             * Unsets the "xPed" element
             */
            void unsetXPed();
            
            /**
             * Gets the "xCont" element
             */
            java.lang.String getXCont();
            
            /**
             * Gets (as xml) the "xCont" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont xgetXCont();
            
            /**
             * True if has "xCont" element
             */
            boolean isSetXCont();
            
            /**
             * Sets the "xCont" element
             */
            void setXCont(java.lang.String xCont);
            
            /**
             * Sets (as xml) the "xCont" element
             */
            void xsetXCont(br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont xCont);
            
            /**
             * Unsets the "xCont" element
             */
            void unsetXCont();
            
            /**
             * An XML xNEmp(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Compra$XNEmp.
             */
            public interface XNEmp extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XNEmp.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xnemp62e0elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XNEmp) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xPed(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Compra$XPed.
             */
            public interface XPed extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XPed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xpedeef5elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XPed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML xCont(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Compra$XCont.
             */
            public interface XCont extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XCont.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xcontdc98elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra.XCont) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Compra) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML cana(@http://www.portalfiscal.inf.br/nfe).
         *
         * This is a complex type.
         */
        public interface Cana extends org.apache.xmlbeans.XmlObject
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Cana.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("canacd6felemtype");
            
            /**
             * Gets the "safra" element
             */
            java.lang.String getSafra();
            
            /**
             * Gets (as xml) the "safra" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra xgetSafra();
            
            /**
             * Sets the "safra" element
             */
            void setSafra(java.lang.String safra);
            
            /**
             * Sets (as xml) the "safra" element
             */
            void xsetSafra(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra safra);
            
            /**
             * Gets the "ref" element
             */
            java.lang.String getRef();
            
            /**
             * Gets (as xml) the "ref" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref xgetRef();
            
            /**
             * Sets the "ref" element
             */
            void setRef(java.lang.String ref);
            
            /**
             * Sets (as xml) the "ref" element
             */
            void xsetRef(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref ref);
            
            /**
             * Gets array of all "forDia" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia[] getForDiaArray();
            
            /**
             * Gets ith "forDia" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia getForDiaArray(int i);
            
            /**
             * Returns number of "forDia" element
             */
            int sizeOfForDiaArray();
            
            /**
             * Sets array of all "forDia" element
             */
            void setForDiaArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia[] forDiaArray);
            
            /**
             * Sets ith "forDia" element
             */
            void setForDiaArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia forDia);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "forDia" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia insertNewForDia(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "forDia" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia addNewForDia();
            
            /**
             * Removes the ith "forDia" element
             */
            void removeForDia(int i);
            
            /**
             * Gets the "qTotMes" element
             */
            java.lang.String getQTotMes();
            
            /**
             * Gets (as xml) the "qTotMes" element
             */
            br.inf.portalfiscal.nfe.TDec1110V xgetQTotMes();
            
            /**
             * Sets the "qTotMes" element
             */
            void setQTotMes(java.lang.String qTotMes);
            
            /**
             * Sets (as xml) the "qTotMes" element
             */
            void xsetQTotMes(br.inf.portalfiscal.nfe.TDec1110V qTotMes);
            
            /**
             * Gets the "qTotAnt" element
             */
            java.lang.String getQTotAnt();
            
            /**
             * Gets (as xml) the "qTotAnt" element
             */
            br.inf.portalfiscal.nfe.TDec1110V xgetQTotAnt();
            
            /**
             * Sets the "qTotAnt" element
             */
            void setQTotAnt(java.lang.String qTotAnt);
            
            /**
             * Sets (as xml) the "qTotAnt" element
             */
            void xsetQTotAnt(br.inf.portalfiscal.nfe.TDec1110V qTotAnt);
            
            /**
             * Gets the "qTotGer" element
             */
            java.lang.String getQTotGer();
            
            /**
             * Gets (as xml) the "qTotGer" element
             */
            br.inf.portalfiscal.nfe.TDec1110V xgetQTotGer();
            
            /**
             * Sets the "qTotGer" element
             */
            void setQTotGer(java.lang.String qTotGer);
            
            /**
             * Sets (as xml) the "qTotGer" element
             */
            void xsetQTotGer(br.inf.portalfiscal.nfe.TDec1110V qTotGer);
            
            /**
             * Gets array of all "deduc" elements
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc[] getDeducArray();
            
            /**
             * Gets ith "deduc" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc getDeducArray(int i);
            
            /**
             * Returns number of "deduc" element
             */
            int sizeOfDeducArray();
            
            /**
             * Sets array of all "deduc" element
             */
            void setDeducArray(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc[] deducArray);
            
            /**
             * Sets ith "deduc" element
             */
            void setDeducArray(int i, br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc deduc);
            
            /**
             * Inserts and returns a new empty value (as xml) as the ith "deduc" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc insertNewDeduc(int i);
            
            /**
             * Appends and returns a new empty value (as xml) as the last "deduc" element
             */
            br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc addNewDeduc();
            
            /**
             * Removes the ith "deduc" element
             */
            void removeDeduc(int i);
            
            /**
             * Gets the "vFor" element
             */
            java.lang.String getVFor();
            
            /**
             * Gets (as xml) the "vFor" element
             */
            br.inf.portalfiscal.nfe.TDec1302 xgetVFor();
            
            /**
             * Sets the "vFor" element
             */
            void setVFor(java.lang.String vFor);
            
            /**
             * Sets (as xml) the "vFor" element
             */
            void xsetVFor(br.inf.portalfiscal.nfe.TDec1302 vFor);
            
            /**
             * Gets the "vTotDed" element
             */
            java.lang.String getVTotDed();
            
            /**
             * Gets (as xml) the "vTotDed" element
             */
            br.inf.portalfiscal.nfe.TDec1302 xgetVTotDed();
            
            /**
             * Sets the "vTotDed" element
             */
            void setVTotDed(java.lang.String vTotDed);
            
            /**
             * Sets (as xml) the "vTotDed" element
             */
            void xsetVTotDed(br.inf.portalfiscal.nfe.TDec1302 vTotDed);
            
            /**
             * Gets the "vLiqFor" element
             */
            java.lang.String getVLiqFor();
            
            /**
             * Gets (as xml) the "vLiqFor" element
             */
            br.inf.portalfiscal.nfe.TDec1302 xgetVLiqFor();
            
            /**
             * Sets the "vLiqFor" element
             */
            void setVLiqFor(java.lang.String vLiqFor);
            
            /**
             * Sets (as xml) the "vLiqFor" element
             */
            void xsetVLiqFor(br.inf.portalfiscal.nfe.TDec1302 vLiqFor);
            
            /**
             * An XML safra(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cana$Safra.
             */
            public interface Safra extends br.inf.portalfiscal.nfe.TString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Safra.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("safra1222elemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Safra) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML ref(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cana$Ref.
             */
            public interface Ref extends org.apache.xmlbeans.XmlString
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Ref.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ref89aeelemtype");
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref newValue(java.lang.Object obj) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref) type.newValue( obj ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Ref) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML forDia(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface ForDia extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(ForDia.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("fordia823eelemtype");
                
                /**
                 * Gets the "qtde" element
                 */
                java.lang.String getQtde();
                
                /**
                 * Gets (as xml) the "qtde" element
                 */
                br.inf.portalfiscal.nfe.TDec1110V xgetQtde();
                
                /**
                 * Sets the "qtde" element
                 */
                void setQtde(java.lang.String qtde);
                
                /**
                 * Sets (as xml) the "qtde" element
                 */
                void xsetQtde(br.inf.portalfiscal.nfe.TDec1110V qtde);
                
                /**
                 * Gets the "dia" attribute
                 */
                java.lang.String getDia();
                
                /**
                 * Gets (as xml) the "dia" attribute
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia xgetDia();
                
                /**
                 * Sets the "dia" attribute
                 */
                void setDia(java.lang.String dia);
                
                /**
                 * Sets (as xml) the "dia" attribute
                 */
                void xsetDia(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia dia);
                
                /**
                 * An XML dia(@).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cana$ForDia$Dia.
                 */
                public interface Dia extends org.apache.xmlbeans.XmlString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Dia.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("dia50daattrtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia.Dia) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.ForDia) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * An XML deduc(@http://www.portalfiscal.inf.br/nfe).
             *
             * This is a complex type.
             */
            public interface Deduc extends org.apache.xmlbeans.XmlObject
            {
                public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                    org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Deduc.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("deduccb6celemtype");
                
                /**
                 * Gets the "xDed" element
                 */
                java.lang.String getXDed();
                
                /**
                 * Gets (as xml) the "xDed" element
                 */
                br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed xgetXDed();
                
                /**
                 * Sets the "xDed" element
                 */
                void setXDed(java.lang.String xDed);
                
                /**
                 * Sets (as xml) the "xDed" element
                 */
                void xsetXDed(br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed xDed);
                
                /**
                 * Gets the "vDed" element
                 */
                java.lang.String getVDed();
                
                /**
                 * Gets (as xml) the "vDed" element
                 */
                br.inf.portalfiscal.nfe.TDec1302 xgetVDed();
                
                /**
                 * Sets the "vDed" element
                 */
                void setVDed(java.lang.String vDed);
                
                /**
                 * Sets (as xml) the "vDed" element
                 */
                void xsetVDed(br.inf.portalfiscal.nfe.TDec1302 vDed);
                
                /**
                 * An XML xDed(@http://www.portalfiscal.inf.br/nfe).
                 *
                 * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Cana$Deduc$XDed.
                 */
                public interface XDed extends br.inf.portalfiscal.nfe.TString
                {
                    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                      org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(XDed.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("xded82b3elemtype");
                    
                    /**
                     * A factory class with static methods for creating instances
                     * of this type.
                     */
                    
                    public static final class Factory
                    {
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed newValue(java.lang.Object obj) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed) type.newValue( obj ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed newInstance() {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                      
                      public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed newInstance(org.apache.xmlbeans.XmlOptions options) {
                        return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc.XDed) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                      
                      private Factory() { } // No instance of this class allowed
                    }
                }
                
                /**
                 * A factory class with static methods for creating instances
                 * of this type.
                 */
                
                public static final class Factory
                {
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc newInstance() {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                    
                    public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc newInstance(org.apache.xmlbeans.XmlOptions options) {
                      return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana.Deduc) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                    
                    private Factory() { } // No instance of this class allowed
                }
            }
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Cana) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * An XML Id(@).
         *
         * This is an atomic type that is a restriction of br.inf.portalfiscal.nfe.TNFe$InfNFe$Id.
         */
        public interface Id extends org.apache.xmlbeans.XmlID
        {
            public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)
                org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Id.class.getClassLoader(), "schemaorg_apache_xmlbeans.system.s82BAE66DFF11F95F8CB4DEAB8E4975C8").resolveHandle("ida781attrtype");
            
            /**
             * A factory class with static methods for creating instances
             * of this type.
             */
            
            public static final class Factory
            {
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Id newValue(java.lang.Object obj) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Id) type.newValue( obj ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Id newInstance() {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Id) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
                
                public static br.inf.portalfiscal.nfe.TNFe.InfNFe.Id newInstance(org.apache.xmlbeans.XmlOptions options) {
                  return (br.inf.portalfiscal.nfe.TNFe.InfNFe.Id) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
                
                private Factory() { } // No instance of this class allowed
            }
        }
        
        /**
         * A factory class with static methods for creating instances
         * of this type.
         */
        
        public static final class Factory
        {
            public static br.inf.portalfiscal.nfe.TNFe.InfNFe newInstance() {
              return (br.inf.portalfiscal.nfe.TNFe.InfNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
            
            public static br.inf.portalfiscal.nfe.TNFe.InfNFe newInstance(org.apache.xmlbeans.XmlOptions options) {
              return (br.inf.portalfiscal.nfe.TNFe.InfNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
            
            private Factory() { } // No instance of this class allowed
        }
    }
    
    /**
     * A factory class with static methods for creating instances
     * of this type.
     */
    
    public static final class Factory
    {
        public static br.inf.portalfiscal.nfe.TNFe newInstance() {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe newInstance(org.apache.xmlbeans.XmlOptions options) {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newInstance( type, options ); }
        
        /** @param xmlAsString the string value to parse */
        public static br.inf.portalfiscal.nfe.TNFe parse(java.lang.String xmlAsString) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.lang.String xmlAsString, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xmlAsString, type, options ); }
        
        /** @param file the file from which to load an xml document */
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.File file) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.File file, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( file, type, options ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.net.URL u) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.net.URL u, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( u, type, options ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.InputStream is) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.InputStream is, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( is, type, options ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.Reader r) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(java.io.Reader r, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, java.io.IOException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( r, type, options ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(javax.xml.stream.XMLStreamReader sr) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(javax.xml.stream.XMLStreamReader sr, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( sr, type, options ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(org.w3c.dom.Node node) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, null ); }
        
        public static br.inf.portalfiscal.nfe.TNFe parse(org.w3c.dom.Node node, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( node, type, options ); }
        
        /** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */
        public static br.inf.portalfiscal.nfe.TNFe parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, null ); }
        
        /** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */
        public static br.inf.portalfiscal.nfe.TNFe parse(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return (br.inf.portalfiscal.nfe.TNFe) org.apache.xmlbeans.XmlBeans.getContextTypeLoader().parse( xis, type, options ); }
        
        /** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */
        public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, null ); }
        
        /** @deprecated {@link org.apache.xmlbeans.xml.stream.XMLInputStream} */
        public static org.apache.xmlbeans.xml.stream.XMLInputStream newValidatingXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream xis, org.apache.xmlbeans.XmlOptions options) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException {
          return org.apache.xmlbeans.XmlBeans.getContextTypeLoader().newValidatingXMLInputStream( xis, type, options ); }
        
        private Factory() { } // No instance of this class allowed
    }
}
