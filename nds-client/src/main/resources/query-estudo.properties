queryProdutoEdicaoEstudo=SELECT pe.ID, pe.PRODUTO_ID, pe.NUMERO_EDICAO, pe.PACOTE_PADRAO, p.CODIGO, p.CODIGO_ICD, l.DATA_LCTO_DISTRIBUIDOR, l.ID LANCAMENTO_ID, pe.TIPO_CLASSIFICACAO_PRODUTO_ID, p.TIPO_SEGMENTO_PRODUTO_ID, tp.GRUPO_PRODUTO, plp.numero_periodo, (CASE WHEN EXISTS(SELECT '.' FROM TIPO_PRODUTO TP WHERE TP.ID = P.TIPO_PRODUTO_ID AND TP.GRUPO_PRODUTO = 'COLECIONAVEL') THEN 1 ELSE 0 END) COLECAO FROM produto_edicao pe JOIN produto p ON pe.PRODUTO_ID = p.ID JOIN tipo_produto tp ON tp.id = p.TIPO_PRODUTO_ID JOIN lancamento l ON l.PRODUTO_EDICAO_ID = pe.ID LEFT JOIN periodo_lancamento_parcial plp ON plp.id = l.PERIODO_LANCAMENTO_PARCIAL_ID WHERE p.CODIGO = :CODIGO_PRODUTO AND pe.NUMERO_EDICAO = :NUMERO_EDICAO AND CASE when :LANCAMENTO_ID is not null then l.id = :LANCAMENTO_ID else 1=1 END ORDER BY NUMERO_EDICAO DESC LIMIT 1
queryEdicoesRecebidas=SELECT P.NOME, PE.NUMERO_EDICAO, EPC.QTDE_RECEBIDA, EPC.QTDE_DEVOLVIDA, PE.PARCIAL, PE.PESO, PE.ID as pedId, TSP.ID AS TIPO_SEGMENTO_PRODUTO_ID, TSP.DESCRICAO AS TIPO_SEGMENTO_PRODUTO_DESC, (CASE WHEN EXISTS(SELECT '.' FROM TIPO_PRODUTO TP WHERE TP.ID = P.TIPO_PRODUTO_ID AND TP.GRUPO_PRODUTO = 'COLECIONAVEL') THEN 1 ELSE 0 END) IS_COLECAO FROM ESTOQUE_PRODUTO_COTA EPC JOIN PRODUTO_EDICAO PE ON PE.ID = EPC.PRODUTO_EDICAO_ID JOIN PRODUTO P ON P.ID = PE.PRODUTO_ID JOIN TIPO_SEGMENTO_PRODUTO TSP ON TSP.ID = P.TIPO_SEGMENTO_PRODUTO_ID WHERE EPC.COTA_ID = :COTA_ID
queryQtdeVezesReenviadas=SELECT count(EPC.id) FROM ESTOQUE_PRODUTO_COTA EPC JOIN PRODUTO_EDICAO PE ON PE.ID = EPC.PRODUTO_EDICAO_ID WHERE EPC.COTA_ID = :COTA_ID AND PE.ID = :PRODUTO_EDICAO_ID and PE.parcial = 1

#FIXME - O reparte > 0 foi comentado nas 3 queries abaixo momentaneamente ate a base de dados ser alimentada com os historicos
queryEdicoesLancamentos=SELECT l.ID, l.PRODUTO_EDICAO_ID, l.STATUS, l.DATA_LCTO_PREVISTA, l.DATA_LCTO_DISTRIBUIDOR, tp.GRUPO_PRODUTO, l.TIPO_LANCAMENTO, pe.NUMERO_EDICAO, pe.TIPO_CLASSIFICACAO_PRODUTO_ID, p.CODIGO, p.CODIGO_ICD, plp.NUMERO_PERIODO, plp.TIPO, pe.PARCIAL, p.id PRODUTO_ID, CAST(SUM(IF(tipo.OPERACAO_ESTOQUE = 'ENTRADA', mecReparte.QTDE, 0)) as UNSIGNED INT) AS reparte FROM lancamento l LEFT JOIN produto_edicao pe ON pe.ID = l.PRODUTO_EDICAO_ID LEFT JOIN produto p ON p.ID = pe.PRODUTO_ID LEFT JOIN tipo_produto tp ON tp.ID = p.TIPO_PRODUTO_ID LEFT JOIN periodo_lancamento_parcial plp ON plp.ID = l.PERIODO_LANCAMENTO_PARCIAL_ID LEFT JOIN movimento_estoque_cota mecReparte on mecReparte.LANCAMENTO_ID = l.id LEFT JOIN tipo_movimento tipo ON tipo.id = mecReparte.TIPO_MOVIMENTO_ID WHERE pe.PRODUTO_ID = (SELECT ID FROM produto WHERE CODIGO = :CODIGO_PRODUTO) AND L.STATUS IN ('EXPEDIDO', 'EM_BALANCEAMENTO_RECOLHIMENTO', 'BALANCEADO_RECOLHIMENTO', 'EXCLUIDO_RECOLHIMENTO', 'FECHADO', 'RECOLHIDO') AND l.DATA_LCTO_DISTRIBUIDOR < '3000-01-01'  GROUP BY pe.numero_edicao, pe.id /*HAVING reparte > 0*/ ORDER BY L.DATA_LCTO_DISTRIBUIDOR DESC, pe.NUMERO_EDICAO DESC, plp.NUMERO_PERIODO DESC LIMIT 50
queryEdicoesLancamentosBasesIcd=SELECT l.ID, l.PRODUTO_EDICAO_ID, l.STATUS, l.DATA_LCTO_PREVISTA, l.DATA_LCTO_DISTRIBUIDOR, tp.GRUPO_PRODUTO, l.TIPO_LANCAMENTO, pe.NUMERO_EDICAO, pe.TIPO_CLASSIFICACAO_PRODUTO_ID, p.CODIGO, p.CODIGO_ICD, plp.NUMERO_PERIODO, plp.TIPO, pe.PARCIAL, p.id PRODUTO_ID, CAST(SUM(IF(tipo.OPERACAO_ESTOQUE = 'ENTRADA', mecReparte.QTDE, 0)) as UNSIGNED INT) AS reparte FROM lancamento l LEFT JOIN produto_edicao pe ON pe.ID = l.PRODUTO_EDICAO_ID LEFT JOIN produto p ON p.ID = pe.PRODUTO_ID LEFT JOIN tipo_produto tp ON tp.ID = p.TIPO_PRODUTO_ID LEFT JOIN periodo_lancamento_parcial plp ON plp.ID = l.PERIODO_LANCAMENTO_PARCIAL_ID LEFT JOIN movimento_estoque_cota mecReparte on mecReparte.LANCAMENTO_ID = l.id LEFT JOIN tipo_movimento tipo ON tipo.id = mecReparte.TIPO_MOVIMENTO_ID WHERE /*pe.PRODUTO_ID = (SELECT ID FROM produto WHERE CODIGO = :CODIGO_PRODUTO) AND*/ L.STATUS IN ('EXPEDIDO', 'EM_BALANCEAMENTO_RECOLHIMENTO', 'BALANCEADO_RECOLHIMENTO', 'EM_RECOLHIMENTO', 'FECHADO', 'RECOLHIDO') AND l.DATA_LCTO_DISTRIBUIDOR < '3000-01-01' and ((p.codigo_icd = :CODIGO_PRODUTO) or p.codigo in (select p.codigo from produto p where p.codigo_icd = (select codigo_icd from produto p where p.codigo = :CODIGO_PRODUTO))) GROUP BY pe.numero_edicao, pe.id /*HAVING reparte > 0*/ ORDER BY L.DATA_LCTO_DISTRIBUIDOR DESC, pe.NUMERO_EDICAO DESC, plp.NUMERO_PERIODO DESC LIMIT 50
queryLancamentosAnosAnterioresMesmoMes=SELECT l.ID, l.PRODUTO_EDICAO_ID, l.STATUS, l.DATA_LCTO_PREVISTA, l.DATA_LCTO_DISTRIBUIDOR, tp.GRUPO_PRODUTO, l.TIPO_LANCAMENTO, pe.NUMERO_EDICAO, pe.TIPO_CLASSIFICACAO_PRODUTO_ID, p.CODIGO, p.CODIGO_ICD, plp.NUMERO_PERIODO, plp.TIPO, pe.PARCIAL, p.id PRODUTO_ID, CAST(SUM(IF(tipo.OPERACAO_ESTOQUE = 'ENTRADA', mecReparte.QTDE, 0)) as UNSIGNED INT) AS reparte FROM lancamento l LEFT JOIN produto_edicao pe ON pe.ID = l.PRODUTO_EDICAO_ID LEFT JOIN produto p ON p.ID = pe.PRODUTO_ID LEFT JOIN tipo_produto tp ON tp.ID = p.TIPO_PRODUTO_ID LEFT JOIN periodo_lancamento_parcial plp ON plp.ID = l.PERIODO_LANCAMENTO_PARCIAL_ID LEFT JOIN movimento_estoque_cota mecReparte on mecReparte.LANCAMENTO_ID = l.id LEFT JOIN tipo_movimento tipo ON tipo.id = mecReparte.TIPO_MOVIMENTO_ID WHERE pe.PRODUTO_ID = (SELECT ID FROM produto WHERE CODIGO = :CODIGO_PRODUTO) AND l.DATA_LCTO_DISTRIBUIDOR < '3000-01-01' AND (EXTRACT(YEAR_MONTH FROM l.DATA_LCTO_DISTRIBUIDOR) = EXTRACT(YEAR_MONTH FROM ADDDATE(:DATA_LANCAMENTO, INTERVAL -1 YEAR)) OR EXTRACT(YEAR_MONTH FROM l.DATA_LCTO_DISTRIBUIDOR) = EXTRACT(YEAR_MONTH FROM ADDDATE(:DATA_LANCAMENTO, INTERVAL -2 YEAR))) GROUP BY pe.numero_edicao, pe.id /*HAVING reparte > 0*/ ORDER BY pe.NUMERO_EDICAO DESC, plp.NUMERO_PERIODO DESC
queryLancamentosAnosAnterioresVeraneio=SELECT l.ID, l.PRODUTO_EDICAO_ID, l.STATUS, l.DATA_LCTO_PREVISTA, l.DATA_LCTO_DISTRIBUIDOR, tp.GRUPO_PRODUTO, l.TIPO_LANCAMENTO, pe.NUMERO_EDICAO, pe.TIPO_CLASSIFICACAO_PRODUTO_ID, p.CODIGO, p.CODIGO_ICD, plp.NUMERO_PERIODO, plp.TIPO, pe.PARCIAL, p.id PRODUTO_ID, CAST(SUM(IF(tipo.OPERACAO_ESTOQUE = 'ENTRADA', mecReparte.QTDE, 0)) as UNSIGNED INT) AS reparte FROM lancamento l LEFT JOIN produto_edicao pe ON pe.ID = l.PRODUTO_EDICAO_ID LEFT JOIN produto p ON p.ID = pe.PRODUTO_ID LEFT JOIN tipo_produto tp ON tp.ID = p.TIPO_PRODUTO_ID LEFT JOIN periodo_lancamento_parcial plp ON plp.ID = l.PERIODO_LANCAMENTO_PARCIAL_ID LEFT JOIN movimento_estoque_cota mecReparte on mecReparte.LANCAMENTO_ID = l.id LEFT JOIN tipo_movimento tipo ON tipo.id = mecReparte.TIPO_MOVIMENTO_ID WHERE pe.PRODUTO_ID = (SELECT ID FROM produto WHERE CODIGO = :CODIGO_PRODUTO) AND l.DATA_LCTO_DISTRIBUIDOR < '3000-01-01' AND (l.DATA_LCTO_DISTRIBUIDOR BETWEEN :DATA0 AND :DATA1 OR l.DATA_LCTO_DISTRIBUIDOR BETWEEN :DATA2 AND :DATA3) GROUP BY pe.numero_edicao, pe.id /*HAVING reparte > 0*/ ORDER BY pe.NUMERO_EDICAO DESC, plp.NUMERO_PERIODO DESC

queryHistoricoCotaParcial=select t.cota_id, t.reparte, t.reparte - t.encalhe venda from (select mec.cota_id, sum(case when tm.grupo_movimento_estoque = 'ENVIO_JORNALEIRO' then mec.qtde else (select estudo_cota.REPARTE from estudo join estudo_cota On estudo_cota.ESTUDO_ID = estudo.ID where estudo.PRODUTO_EDICAO_ID = :produto_edicao_id and estudo.DATA_LANCAMENTO = :dtLancamento and estudo_cota.COTA_ID = mec.cota_id) end) reparte, sum(case when tm.grupo_movimento_estoque = 'ENVIO_ENCALHE' or tm.grupo_movimento_estoque = 'RECEBIMENTO_ENCALHE_JURAMENTADO' then mec.qtde else 0 end) encalhe from movimento_estoque_cota mec join tipo_movimento tm on tm.id = mec.tipo_movimento_id join lancamento l on l.id = mec.lancamento_id join periodo_lancamento_parcial plp on plp.id = l.PERIODO_LANCAMENTO_PARCIAL_ID and plp.numero_periodo = :numero_periodo where mec.produto_edicao_id = :produto_edicao_id group by mec.cota_id order by mec.cota_id) t
queryHistoricoCota=select epc.cota_id, epc.qtde_recebida - epc.qtde_devolvida venda, epc.qtde_recebida reparte from estoque_produto_cota epc where epc.produto_edicao_id = :produto_edicao_id order by epc.cota_id
queryComponentesCota=select distinct c.id cota_id, p.tipo_ponto_pdv_id, gfp.tipo_gerador_fluxo_id, e.bairro, rcr.regiao_id, c.tipo_cota, p.area_influencia_pdv_id, e.uf from cota c left join parametro_cobranca_cota pcc on pcc.cota_id = c.id left join registro_cota_regiao rcr on rcr.cota_id = c.id left join pdv p on p.cota_id = c.id left join endereco_pdv ep on ep.pdv_id = p.id left join endereco e on e.id = ep.endereco_id left join gerador_fluxo_pdv gfp on gfp.pdv_id = p.id
queryCotas=SELECT DISTINCT c.id cota_id, c.numero_cota, c.recebe_complementar, c.situacao_cadastro, tp.grupo_produto, ar.ajuste_aplicado, ar.forma_ajuste, mcp.reparte_max, mcp.reparte_min, (CASE WHEN mcp.id IS NOT NULL THEN 1 ELSE 0 END) mix, c.tipo_distribuicao_cota, fr.qtde_exemplares reparte_fixado, (SELECT count(*) FROM pdv WHERE cota_id = c.id) qtde_pdvs, cb.id cota_base_id, rs.qtde qtde_ranking_segmento, rf.faturamento qtde_ranking_faturamento, (CASE WHEN snr.id IS NOT NULL THEN 1 ELSE 0 END) cota_nao_recebe_segmento, (CASE WHEN ep.id IS NOT NULL THEN 1 ELSE 0 END) cota_excecao_segmento, (CASE WHEN cnr.id IS NOT NULL THEN 1 ELSE 0 END) cota_nao_recebe_classificacao, (CASE WHEN ep2.id IS NOT NULL THEN 1 ELSE 0 END) cota_excecao_parcial, (CASE WHEN cf.fornecedor_id IS NOT NULL THEN 0 ELSE 1 END) cota_nao_recebe_fornecedor, c.recebe_recolhe_parciais FROM cota c LEFT JOIN ranking_segmento rs ON rs.cota_id = c.id AND rs.data_geracao_rank = (SELECT max(data_geracao_rank) FROM ranking_segmento) AND rs.tipo_segmento_produto_id = :tipo_segmento_produto_id LEFT JOIN ranking_faturamento rf ON rf.cota_id = c.id AND rf.data_geracao_rank = (SELECT max(data_geracao_rank) FROM ranking_faturamento) JOIN produto p ON p.id = :produto_id LEFT JOIN cota_fornecedor cf ON cf.cota_id = c.id AND cf.fornecedor_id IN (SELECT fornecedores_id FROM produto_fornecedor WHERE produto_id = :produto_id) JOIN produto_edicao pe ON pe.produto_id = p.id AND pe.numero_edicao = :numero_edicao JOIN tipo_produto tp ON tp.id = p.tipo_produto_id LEFT JOIN mix_cota_produto mcp ON mcp.id_cota = c.id AND mcp.codigo_icd = p.codigo_icd AND mcp.tipo_classificacao_produto_id = pe.tipo_classificacao_produto_id LEFT JOIN fixacao_reparte fr ON fr.id_cota = c.id AND fr.codigo_icd = p.codigo_icd AND fr.id_classificacao_edicao = pe.tipo_classificacao_produto_id AND ((pe.numero_edicao BETWEEN fr.ed_inicial AND fr.ed_final) OR (coalesce(fr.ed_inicial, 0) = 0 AND coalesce(fr.ed_final, 0) = 0 AND coalesce(fr.ed_atendidas, 0) < coalesce(fr.qtde_edicoes, 0))) LEFT JOIN cota_base cb ON cb.cota_id = c.id LEFT JOIN ajuste_reparte ar ON ar.cota_id = c.id AND (ar.tipo_segmento_ajuste_id = :tipo_segmento_produto_id OR ar.tipo_segmento_ajuste_id IS NULL) AND :data_lcto BETWEEN ar.data_inicio AND ar.data_fim LEFT JOIN segmento_nao_recebido snr ON snr.cota_id = c.id AND snr.tipo_segmento_produto_id = :tipo_segmento_produto_id LEFT JOIN excecao_produto_cota ep ON ep.cota_id = c.id AND ep.produto_id = p.id AND ep.tipo_excecao = 'SEGMENTO' LEFT JOIN excecao_produto_cota ep2 ON ep2.cota_id = c.id AND ep2.produto_id = p.id AND ep2.tipo_excecao = 'PARCIAL' LEFT JOIN classificacao_nao_recebida cnr ON cnr.cota_id = c.id AND cnr.tipo_classificacao_produto_id = pe.tipo_classificacao_produto_id WHERE c.situacao_cadastro = 'ATIVO' or (c.SITUACAO_CADASTRO = 'SUSPENSO' and (select max(h.DATA_INICIO_VALIDADE) from historico_situacao_cota h where h.COTA_ID=c.ID) >= date_sub((select data_operacao from distribuidor), interval 90 day)) ORDER BY c.id
queryCotasDesenglobadas=select COTA_ID_DESENGLOBADA, COTA_ID_ENGLOBADA, PORCENTAGEM_COTA_ENGLOBADA, DATA_ALTERACAO from desenglobacao
queryCotaWithEstoqueProdutoCota=SELECT C.*, P.NOME FROM COTA C INNER JOIN PESSOA P ON (P.ID = C.PESSOA_ID) WHERE EXISTS (SELECT EPC.* FROM ESTOQUE_PRODUTO_COTA EPC WHERE EPC.COTA_ID = C.ID) ORDER BY C.ID
queryCotaEquivalente=SELECT CB.INDICE_AJUSTE, C.* FROM COTA_BASE_COTA CBC JOIN COTA_BASE CB ON (CB.ID = CBC.COTA_BASE_ID) JOIN COTA C ON (C.ID = CBC.COTA_ID) JOIN PESSOA P ON (P.ID = C.PESSOA_ID) WHERE CB.COTA_ID = :COTA_ID AND :DATA BETWEEN CB.DATA_INICIO AND CB.DATA_FIM AND CBC.ATIVO = 1
queryCotaRecebeuEdicaoAberta=select e.cota_id from estoque_produto_cota e join produto_edicao pe on pe.id = e.produto_edicao_id join produto p on p.id = pe.produto_id and p.codigo = :codigo_produto where e.cota_id in (:ids_cota) and pe.numero_edicao in (:numeros_edicao)

queryReparteJuramentadoAFaturar=SELECT SUM(QTDE) FROM MOVIMENTO_ESTOQUE_COTA MEC WHERE TIPO_MOVIMENTO_ID = :TIPO_MOVIMENTO_ID AND MEC.COTA_ID = :COTA_ID AND MEC.PRODUTO_EDICAO_ID = :PRODUTO_EDICAO_ID ORDER BY ID
queryCotasOrdenadasMaiorMenor=SELECT DISTINCT COTA_ID FROM RANKING_SEGMENTO RS WHERE RS.PRODUTO_EDICAO_ID = :PRODUTO_EDICAO_ID AND RANKING_SEGMENTO_GERADOS_ID = (SELECT MAX(ID) FROM RANKING_SEGMENTO_GERADOS) AND COTA_ID IN (:IDS_COTA)

insertEstudo=INSERT INTO estudo_gerado (produto_edicao_id, lancamento_id, liberado, reparte_distribuir, sobra, distribuicao_por_multiplos, pacote_padrao, data_cadastro, qtde_reparte, status, usuario_id, data_lancamento, reparte_minimo, tipo_geracao_estudo) VALUES (:produtoEdicaoEstudo.id, :produtoEdicaoEstudo.idLancamento, false, :reparteDistribuirInicial - :reparteDistribuir, :reparteDistribuir, :distribuicaoPorMultiplos, :pacotePadrao, :dataCadastro, :reparteDistribuirInicial, :statusEstudo, :usuarioId, :dataLancamento, :reparteMinimo, :tipoGeracao)
insertEstudoCotas=INSERT INTO estudo_cota_gerado (cota_id, estudo_id, qtde_prevista, qtde_efetiva, classificacao, reparte, venda_media, venda_media_nominal, reparte_juramentado_a_faturar, quantidade_pdvs, reparte_minimo, reparte_maximo, venda_media_mais_n, indice_correcao_tendencia, indice_venda_crescente, percentual_encalhe_maximo, mix, cota_nova, reparte_inicial) VALUES (:id, :idEstudo, :reparteCalculado, :reparteCalculado, :classificacao.codigo, :reparteCalculado, :vendaMedia, :vendaMediaNominal, :reparteJuramentadoAFaturar, :quantidadePDVs, :intervaloMinimo, :intervaloMaximo, :vendaMediaMaisN, :indiceCorrecaoTendencia, :indiceVendaCrescente, :percentualEncalheMaximo, :mix, :nova, :reparteCalculado)
insertProdutoEdicao=INSERT INTO estudo_produto_edicao (estudo_id, cota_id, produto_edicao_id, reparte, venda, indice_correcao, venda_corrigida) VALUES (:idEstudo, :idCota, :id, :reparte, :venda, :indiceCorrecao, :vendaCorrigida)
insertProdutoEdicaoBase=INSERT INTO estudo_produto_edicao_base (estudo_id, produto_edicao_id, colecao, parcial, edicao_aberta, peso, periodo_parcial) VALUES (:idEstudo, :id, :colecao, :parcial, :edicaoAberta, :indicePeso, :periodo)

queryParametrosDistribuidor=SELECT COMPLEMENTAR_AUTOMATICO, GERACAO_AUTOMATICA_ESTUDO, PERCENTUAL_MAXIMO_FIXACAO, PRACA_VERANEIO, VENDA_MEDIA_MAIS FROM distribuidor_grid_distribuicao
queryPercentuaisExcedentes=SELECT EFICIENCIA, PDV, VENDA FROM distribuidor_percentual_excedente;
